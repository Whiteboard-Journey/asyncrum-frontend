{"version":3,"file":"static/js/113.350df273.chunk.js","mappings":"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","sources":["pages/docs/hooks/useDailyStandup.ts","pages/docs/hooks/useMoment.ts","pages/docs/hooks/useWhiteboard.ts","pages/docs/hooks/useWhiteboardCard.ts","pages/docs/WhiteboardCard.tsx","pages/docs/CreateWhiteboardButton.tsx","pages/docs/WhiteboardPagination.tsx","pages/docs/WhiteboardContainer.tsx","components/VideoPlayer/layout.ts","components/VideoPlayer/Drawing.tsx","components/VideoPlayer/DrawingControlsColorSelector.tsx","components/VideoPlayer/DrawingControlsSizeSelector.tsx","components/VideoPlayer/DrawingControlsDashSelector.tsx","components/VideoPlayer/DrawingControls.tsx","components/VideoPlayer/VideoBookmarkForm.tsx","components/VideoPlayer/VideoBookmarkShow.tsx","components/VideoPlayer/TimeDisplay.tsx","components/VideoPlayer/VideoBookmarkTimeline.tsx","components/VideoPlayer/TimeControl.tsx","components/VideoPlayer/VideoVolume.tsx","components/VideoPlayer/VideoBookmark.ts","components/VideoPlayer/VideoBookmarkAdd.tsx","components/VideoPlayer/VideoPlayer.tsx","pages/docs/DailyStandupCard.tsx","pages/docs/CreateRecordButton.tsx","pages/docs/hooks/useModal.ts","pages/docs/DailyStandupContainer.tsx","pages/docs/Dashboard.tsx"],"sourcesContent":["import Carousel from 'react-multi-carousel';\nimport { readAllDailyStandups as readAllDailyStandupsAPI, viewDailyStandup as viewDailyStandupAPI } from 'helpers';\nimport { DailyStandup } from '../types';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useRedux } from 'hooks';\nimport { useMoment } from './';\n\nconst useDailyStandup = () => {\n  const [dailyStandups, setDailyStandups] = useState<DailyStandup[]>([]);\n  const [dailyStandupLoading, setDailyStandupLoading] = useState<boolean>(true);\n  const { appSelector } = useRedux();\n\n  const carouselRef = useRef<Carousel>(null);\n\n  const { getTimeDifference } = useMoment();\n\n  const { loading, user, currentTeam } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  const scope = 'team';\n  const teamId = currentTeam.id;\n  const pageIndex = 0;\n\n  const readAllDailyStandups = useCallback(async () => {\n    const readAllDailyStandupsAPIResponse = await readAllDailyStandupsAPI({ teamId, scope, pageIndex });\n    for (const record of readAllDailyStandupsAPIResponse.data.records) {\n      if (getTimeDifference(record.createdDate) > 24 && record.seenMemberIdGroup?.indexOf(user.id) > -1) {\n        continue;\n      }\n      if (\n        dailyStandups.at(-1) &&\n        dailyStandups.at(-1)?.author === record.member.fullname &&\n        dailyStandups.at(-1)?.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(' ')) ===\n          record.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(' '))\n      ) {\n        dailyStandups.at(-1)?.id.push(record.id);\n        if (record.title.slice(-6) === 'screen') {\n          (dailyStandups.at(-1) as DailyStandup).screenRecordId = record.id;\n          (dailyStandups.at(-1) as DailyStandup).screenRecordFileUrl = record.recordUrl;\n        } else {\n          (dailyStandups.at(-1) as DailyStandup).camRecordFileUrl = record.recordUrl;\n        }\n      } else {\n        let dailyStandup = {\n          id: [record.id],\n          author: record.member.fullname,\n          title: record.title,\n          profileImageUrl: record.member.profileImageUrl,\n          createdDate: record.createdDate,\n          camRecordFileUrl: '',\n          screenRecordFileUrl: '',\n          screenRecordId: -1,\n          seen: record.seenMemberIdGroup?.indexOf(user.id) > -1 ? true : false,\n        };\n        if (record.title.slice(-6) === 'screen') {\n          dailyStandup = {\n            ...dailyStandup,\n            screenRecordFileUrl: record.recordUrl,\n            screenRecordId: record.id,\n          };\n        } else {\n          dailyStandup = {\n            ...dailyStandup,\n            camRecordFileUrl: record.recordUrl,\n          };\n        }\n        dailyStandups.push(dailyStandup);\n      }\n    }\n    setDailyStandups(dailyStandups.reverse());\n    setDailyStandupLoading(false);\n    let slide = dailyStandups.findIndex((dailyStandup) => !dailyStandup.seen);\n    slide = slide >= 0 ? slide : 0;\n    if (carouselRef && carouselRef.current) {\n      carouselRef.current.goToSlide(slide);\n    }\n  }, [dailyStandups, getTimeDifference, user.id, teamId]);\n\n  const onViewDailyStandups = async (dailyStandup: DailyStandup) => {\n    await viewDailyStandupAPI(dailyStandup.id[0]);\n    await viewDailyStandupAPI(dailyStandup.id[1]);\n    dailyStandup.seen = true;\n  };\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    readAllDailyStandups();\n  }, [loading, readAllDailyStandups]);\n\n  return {\n    carouselRef,\n    dailyStandups,\n    dailyStandupLoading,\n    setDailyStandups,\n    setDailyStandupLoading,\n    onViewDailyStandups,\n  };\n};\n\nexport default useDailyStandup;\n","import { useCallback } from 'react';\nimport moment from 'moment';\n\nconst useMoment = () => {\n  const convertDateTime = (datetime: string) => {\n    const convertedDatetime = new Date(datetime);\n    convertedDatetime.setTime(convertedDatetime.getTime() - convertedDatetime.getTimezoneOffset() * 60 * 1000);\n    return convertedDatetime;\n  };\n\n  const getTimeFromNow = (datetime: string) => {\n    return moment(convertDateTime(datetime)).fromNow();\n  };\n\n  const getTimeDifference = useCallback((datetime: string) => {\n    return moment().diff(moment(convertDateTime(datetime)), 'hours');\n  }, []);\n\n  return { convertDateTime, getTimeFromNow, getTimeDifference };\n};\n\nexport default useMoment;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { TDDocument, TDFile, TldrawApp } from '@krapi0314/tldraw';\nimport { useToggle, useRedux } from 'hooks';\nimport {\n  createWhiteboard as createWhiteboardAPI,\n  readWhiteboard as readWhiteboardAPI,\n  readAllWhiteboard as readAllWhiteboardAPI,\n  uploadWhiteboard as uploadWhiteboardAPI,\n  deleteWhiteboard as deleteWhiteboardAPI,\n  updateWhiteboard as updateWhiteboardAPI,\n} from 'helpers';\nimport { Whiteboard } from '../types';\n\nconst useWhiteboard = () => {\n  const [whiteboards, setWhiteboards] = useState<Whiteboard[]>([]);\n  const [whiteboardLoading, setWhiteboardLoading] = useState<boolean>(true);\n  const [whiteboardPageNumber, setWhiteboardPageNumber] = useState<number>(1);\n  const [numberOfWhiteboards, setNumberOfWhiteboards] = useState<number>(0);\n  const [isCreateWhiteboardOpen, toggleCreateWhiteboard] = useToggle();\n  const { appSelector } = useRedux();\n\n  const { currentTeam } = appSelector((state) => ({\n    currentTeam: state.Team.currentTeam\n  }));\n\n  const scope = 'team';\n  const teamId = currentTeam.id;\n  const whiteboardPageURL = '/whiteboard?url=';\n\n  const readAllWhiteboard = useCallback(\n    async (pageIndex: number) => {\n      const readAllWhiteboardAPIResponse = await readAllWhiteboardAPI({ teamId, scope, pageIndex });\n\n      const whiteboards = readAllWhiteboardAPIResponse.data.whiteboards.map((whiteboard): Whiteboard => {\n        return {\n          id: whiteboard.id,\n          title: whiteboard.title,\n          description: whiteboard.description,\n          createdDate: whiteboard.createdDate,\n          lastModifiedDate: whiteboard.lastModifiedDate,\n          scope: whiteboard.scope,\n          author: whiteboard.member.fullname,\n          authorProfileImageUrl: whiteboard.member.profileImageUrl,\n          whiteboardFileUrl: whiteboard.whiteboardUrl,\n        };\n      });\n\n      setWhiteboards(whiteboards);\n      setNumberOfWhiteboards(readAllWhiteboardAPIResponse.data.size_ALL_PAGE);\n      setWhiteboardLoading(false);\n    },\n    [teamId]\n  );\n\n  useEffect(() => {\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  }, [whiteboardPageNumber, readAllWhiteboard]);\n\n  const onCreateWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\n\n    const createWhiteboardAPIResponse = await createWhiteboardAPI({ title, description, scope, teamId });\n    const { id, preSignedURL } = createWhiteboardAPIResponse.data;\n    const formData = createWhiteboardFormData(id, title);\n    await uploadWhiteboardAPI(preSignedURL, formData);\n    const readWhiteboardAPIResponse = await readWhiteboardAPI(id);\n    window.location.href = whiteboardPageURL + readWhiteboardAPIResponse.data.whiteboardUrl + '&id=' + id;\n  };\n\n  const createWhiteboardFormData = (whiteboardID: string, title: string) => {\n    const document: TDDocument = {\n      id: whiteboardID,\n      name: title,\n      version: TldrawApp.version,\n      pages: {\n        page: {\n          id: 'page',\n          name: 'Page 1',\n          childIndex: 1,\n          shapes: {},\n          bindings: {},\n        },\n      },\n      pageStates: {\n        page: {\n          id: 'page',\n          selectedIds: [],\n          camera: {\n            point: [0, 0],\n            zoom: 1,\n          },\n        },\n      },\n      assets: {},\n    };\n\n    const file: TDFile = {\n      name: document.name || 'New Document',\n      fileHandle: null,\n      document,\n      assets: {},\n    };\n\n    const json = JSON.stringify(file, null, 2);\n\n    const blob = new Blob([json], {\n      type: 'application/vnd.Tldraw+json',\n    });\n\n    const fileToUpload = new File([blob], title);\n\n    const formData = new FormData();\n    formData.append('data', fileToUpload);\n\n    return formData;\n  };\n\n  const onEditWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\n\n    await updateWhiteboardAPI(id, { title, description, scope });\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  };\n\n  const onDeleteWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\n    await deleteWhiteboardAPI(id);\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  };\n\n  const onPageNumberClick = (e: React.MouseEvent<HTMLElement>) => {\n    setWhiteboardPageNumber(parseInt((e.target as HTMLLIElement).innerText));\n  };\n\n  return {\n    isCreateWhiteboardOpen,\n    whiteboards,\n    whiteboardLoading,\n    whiteboardPageNumber,\n    numberOfWhiteboards,\n    setWhiteboards,\n    setWhiteboardPageNumber,\n    readAllWhiteboard,\n    onCreateWhiteboard,\n    onEditWhiteboard,\n    onDeleteWhiteboard,\n    onPageNumberClick,\n    toggleCreateWhiteboard,\n  };\n};\n\nexport default useWhiteboard;\n","import React, { useState } from 'react';\nimport { useToggle } from 'hooks';\n\nconst useWhiteboardCard = () => {\n  const [isEditOpen, toggleEdit] = useToggle();\n  const [isDeleteOpen, toggleDelete] = useToggle();\n  const [isReadMore, setIsReadMore] = useState(true);\n  const toggleReadMore = () => {\n    setIsReadMore(!isReadMore);\n  };\n\n  const closeModalAfterFunction = (\n    f: (e: React.FormEvent<HTMLFormElement>) => Promise<void>,\n    event: React.FormEvent<HTMLFormElement>,\n    toggle: () => void\n  ) => {\n    f(event);\n    toggle();\n  };\n\n  return { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction };\n};\n\nexport default useWhiteboardCard;\n","import { Card, Dropdown, OverlayTrigger, Tooltip, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { WhiteboardCardProps } from './types';\nimport { useMoment, useWhiteboardCard } from './hooks';\n\nconst whiteboardPageURL = '/whiteboard?url=';\n\nconst WhiteboardCard = ({ whiteboard, onEditWhiteboard, onDeleteWhiteboard }: WhiteboardCardProps) => {\n  const { getTimeFromNow } = useMoment();\n  const { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction } =\n    useWhiteboardCard();\n\n  return (\n    <Card className=\"d-block\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\n            <i className=\"dripicons-dots-3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item>Share</Dropdown.Item>\n            <Dropdown.Item onClick={toggleEdit}>Edit</Dropdown.Item>\n            <Modal show={isEditOpen} onHide={toggleEdit}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleEdit} closeButton>\n                  <h4 className=\"modal-title\">Edit Whiteboard Information</h4>\n                </Modal.Header>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onEditWhiteboard, event, toggleEdit)}\n                >\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mt-3 mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">\n                      Title\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"title\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.title}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"description\" className=\"form-label\">\n                      Description\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"description\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.description}\n                    />\n                  </div>\n\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Edit\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n            <Dropdown.Item>Duplicate</Dropdown.Item>\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\n              Delete\n            </Dropdown.Item>\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleDelete} closeButton>\n                  <h4 className=\"modal-title\">Delete {whiteboard.title}</h4>\n                </Modal.Header>\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\n                  Are you sure you want to delete this whiteboard permanently?\n                </p>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteWhiteboard, event, toggleDelete)}\n                >\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-danger\" type=\"submit\">\n                      Delete\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"mt-0\">\n          <Link to={whiteboardPageURL + whiteboard.whiteboardFileUrl + '&id=' + whiteboard.id} className=\"text-title\">\n            {whiteboard.title.length > 25 ? whiteboard.title.slice(0, 25) + ' ...' : whiteboard.title}\n          </Link>\n        </h4>\n        {whiteboard.description && (\n          <p className=\"font-13 my-3\">\n            {isReadMore ? whiteboard.description.slice(0, 35) : whiteboard.description}\n            {whiteboard.description.length > 35 ? (\n              <span onClick={toggleReadMore} className=\"fw-bold text-info\" role=\"button\">\n                {isReadMore ? ' ...read more' : ' show less'}\n              </span>\n            ) : (\n              ''\n            )}\n          </p>\n        )}\n        <div>\n          <span className=\"font-13\">Author: </span>\n          <OverlayTrigger placement={'bottom'} overlay={<Tooltip>{whiteboard.author}</Tooltip>}>\n            <img src={whiteboard.authorProfileImageUrl} className=\"rounded-circle avatar-xs\" alt={whiteboard.author} />\n          </OverlayTrigger>\n        </div>\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\n          Last modified: {getTimeFromNow(whiteboard.lastModifiedDate)}\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WhiteboardCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useWhiteboard } from './hooks';\n\nconst CreateWhiteboardButton = () => {\n  const { isCreateWhiteboardOpen, toggleCreateWhiteboard, onCreateWhiteboard } = useWhiteboard();\n\n  return (\n    <>\n      <Button onClick={toggleCreateWhiteboard}>\n        <i className=\"mdi mdi-plus\"></i> Create Whiteboard\n      </Button>\n      <Modal show={isCreateWhiteboardOpen} onHide={toggleCreateWhiteboard}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleCreateWhiteboard} closeButton>\n            <h4 className=\"modal-title\">Create a new whiteboard</h4>\n          </Modal.Header>\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateWhiteboard}>\n            <div className=\"mt-3 mb-3\">\n              <label htmlFor=\"title\" className=\"form-label\">\n                Title\n              </label>\n              <input className=\"form-control\" type=\"text\" id=\"title\" maxLength={255} required placeholder=\"Untitled\" />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label\">\n                Description\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"textarea\"\n                id=\"description\"\n                maxLength={255}\n                required\n                placeholder=\"Description\"\n              />\n            </div>\n\n            <div className=\"mb-3 text-center\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateWhiteboardButton;\n","import { Pagination } from 'react-bootstrap';\nimport { WhiteboardPaginationProps } from './types';\n\nconst WhiteboardPagination: React.FC<WhiteboardPaginationProps> = ({\n  whiteboardPageNumber,\n  numberOfWhiteboards,\n  onPageNumberClick,\n}: WhiteboardPaginationProps) => {\n  const whiteboardPerPage = 12;\n  const items = [];\n\n  for (let number = 1; number <= Math.ceil(numberOfWhiteboards / whiteboardPerPage); number++) {\n    items.push(\n      <Pagination.Item key={number.toString()} active={number === whiteboardPageNumber} onClick={onPageNumberClick}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination className=\"mx-auto\">\n      <Pagination.Prev />\n      {items}\n      <Pagination.Next />\n    </Pagination>\n  );\n};\n\nexport default WhiteboardPagination;\n","import { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Whiteboard } from './types';\nimport WhiteboardCard from './WhiteboardCard';\nimport CreateWhiteboardButton from './CreateWhiteboardButton';\nimport WhiteboardPagination from './WhiteboardPagination';\nimport { useWhiteboard } from './hooks';\n\nconst WhiteboardContainer = () => {\n  const {\n    whiteboards,\n    whiteboardLoading,\n    whiteboardPageNumber,\n    numberOfWhiteboards,\n    onPageNumberClick,\n    onDeleteWhiteboard,\n    onEditWhiteboard,\n  } = useWhiteboard();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Whiteboards</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col sm={4}>\n          <CreateWhiteboardButton />\n        </Col>\n        <Col sm={8}>\n          <div className=\"text-sm-end\">\n            <div className=\"btn-group mb-3\">\n              <Button variant=\"primary\">All</Button>\n            </div>\n            <ButtonGroup className=\"mb-3 ms-1\">\n              <Button variant=\"light\">Owned by me</Button>\n              <Button variant=\"light\">Not owned by me</Button>\n            </ButtonGroup>\n          </div>\n        </Col>\n      </Row>\n      {!whiteboardLoading && (\n        <>\n          <Row>\n            {whiteboards.map((whiteboard: Whiteboard) => {\n              return (\n                <Col md={6} xxl={3} key={'wb-' + whiteboard.id}>\n                  <WhiteboardCard\n                    whiteboard={whiteboard}\n                    onEditWhiteboard={onEditWhiteboard}\n                    onDeleteWhiteboard={onDeleteWhiteboard}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n          <Row>\n            <Col className=\"d-flex\">\n              <WhiteboardPagination\n                whiteboardPageNumber={whiteboardPageNumber}\n                numberOfWhiteboards={numberOfWhiteboards}\n                onPageNumberClick={onPageNumberClick}\n              />\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\nexport default WhiteboardContainer;\n","/* eslint-disable import/prefer-default-export */\n\nconst getRatioDimensions = (displayAspectRatio: string, element: HTMLElement): [number, number] => {\n  const [widthSplit, heightSplit] = displayAspectRatio.split(':');\n  const width = parseInt(widthSplit, 10);\n  const height = parseInt(heightSplit, 10);\n\n  const ratioWidthHeight = width / height;\n  const ratioHeightWidth = height / width;\n\n  const containerWidth = element.offsetWidth;\n  const containerHeight = element.offsetHeight;\n\n  if (containerHeight * ratioWidthHeight <= containerWidth) {\n    return [containerHeight * ratioWidthHeight, containerHeight];\n  }\n\n  return [containerWidth, containerWidth * ratioHeightWidth];\n};\n\nexport default getRatioDimensions;\n","import { useRef, useEffect, useCallback } from 'react';\nimport { Tldraw, TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\nimport { Box } from '@chakra-ui/react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  playing: boolean;\n  onMount: (app: TldrawApp) => void;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  videoBookmark: VideoBookmark | null;\n};\n\nconst Drawing = ({ playing, onMount, scale, video, setVideo, videoBookmark }: Props) => {\n  const tlDrawRef = useRef<TldrawApp | null>(null);\n  const outerRef = useRef(null);\n\n  const setVideoBookmarkDrawing = (video: Video, bookmark: VideoBookmark, drawing: object) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, drawing: drawing } : el)),\n    }));\n    if (videoBookmark) {\n      videoBookmark.drawing = drawing;\n    }\n  };\n\n  function handleMount(app: TldrawApp) {\n    tlDrawRef.current = app;\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_mounted');\n    tlDrawRef.current.style({ color: ColorStyle.Red });\n    onMount(app);\n  }\n\n  function handlePersist(app: TldrawApp) {\n    if (videoBookmark === null || playing === true) {\n      return;\n    }\n\n    setVideoBookmarkDrawing(video, videoBookmark, app.document);\n  }\n\n  const clearDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    const tool = tlDrawRef.current.useStore.getState().appState.activeTool;\n    tlDrawRef.current.deleteAll();\n    tlDrawRef.current.selectTool(tool);\n    tlDrawRef.current.toggleToolLock();\n  }, []);\n\n  const rescaleDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_resized');\n  }, [scale]);\n\n  useEffect(() => {\n    rescaleDrawing();\n  }, [scale, rescaleDrawing]);\n\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (videoBookmark?.drawing && videoBookmark.drawing) {\n      tlDrawRef.current.loadDocument(JSON.parse(JSON.stringify(videoBookmark.drawing)));\n\n      tlDrawRef.current.selectNone();\n      rescaleDrawing();\n    } else {\n      clearDrawing();\n    }\n  }, [clearDrawing, rescaleDrawing, videoBookmark]);\n\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (playing === true) {\n      clearDrawing();\n    }\n  }, [playing, clearDrawing]);\n\n  return (\n    <Box position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" ref={outerRef}>\n      <Tldraw\n        // @ts-ignore\n        onMount={(app: TldrawApp) => handleMount(app)}\n        onPersist={(app: TldrawApp) => handlePersist(app)}\n        showUI={false}\n        style=\"{background-color: transparent !important}\"\n      />\n    </Box>\n  );\n};\n\nexport default Drawing;\n","import { useState, useCallback } from 'react';\n\nimport { Flex, Box, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\n\nimport { TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst colors = {\n  [ColorStyle.White]: '#f0f1f3',\n  [ColorStyle.LightGray]: '#c6cbd1',\n  [ColorStyle.Gray]: '#788492',\n  [ColorStyle.Black]: '#1d1d1d',\n  [ColorStyle.Green]: '#36b24d',\n  [ColorStyle.Cyan]: '#0e98ad',\n  [ColorStyle.Blue]: '#1c7ed6',\n  [ColorStyle.Indigo]: '#4263eb',\n  [ColorStyle.Violet]: '#7746f1',\n  [ColorStyle.Red]: '#ff2133',\n  [ColorStyle.Orange]: '#ff9433',\n  [ColorStyle.Yellow]: '#ffc936',\n};\n\nconst DrawingControlsColorSelector = ({ app }: PropsType) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleColourPick = useCallback(\n    (color: ColorStyle) => {\n      app.style({ color });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const swatchesData = Object.entries(colors) as Array<[ColorStyle, string]>;\n\n  const renderedSwatches = swatchesData.map(([key, value]) => {\n    return (\n      <Box\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        backgroundColor={value}\n        cursor=\"pointer\"\n        onClick={() => handleColourPick(key)}\n      />\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Box\n          width=\"2rem\"\n          height=\"2rem\"\n          // @ts-ignore\n          bgColor={colors[currentStyle.color]}\n          cursor=\"pointer\"\n          onClick={handleOpen}\n        />\n      </PopoverTrigger>\n      <PopoverContent width={`${swatchesData.length * 2}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default DrawingControlsColorSelector;\n","import { useState, useCallback } from 'react';\n\nimport { Flex, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\nimport { TldrawApp, SizeStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst sizes = {\n  [SizeStyle.Small]: 'S',\n  [SizeStyle.Medium]: 'M',\n  [SizeStyle.Large]: 'L',\n};\n\nconst DrawingControlsSizeSelector = ({ app }: PropsType) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = useCallback(\n    (size: SizeStyle) => {\n      app.style({ size });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(sizes) as Array<[SizeStyle, string]>;\n\n  const renderedSwatches = sizesData.map(([key, value]) => {\n    return (\n      <Flex\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        cursor=\"pointer\"\n        onClick={() => handleSizePick(key)}\n        align=\"center\"\n        justify=\"center\"\n        border=\"1px\"\n        borderColor=\"whiteAlpha.400\"\n        background=\"whiteAlpha.200\"\n        padding=\"1rem\">\n        {value}\n      </Flex>\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}>\n          {\n            // @ts-ignore\n            sizes[currentStyle.size].slice(0, 1).toUpperCase()\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 3}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default DrawingControlsSizeSelector;\n","import * as React from 'react';\n\nimport {\n  Flex,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow,\n  Tooltip,\n  Box,\n} from '@chakra-ui/react';\n\nimport { TldrawApp, DashStyle } from '@krapi0314/tldraw';\n\nimport {\n  Circle as CircleIcon,\n  SquaresFilled as SquaresFilledIcon,\n  CircleDashed as CircleDashedIcon,\n  CircleDotted as CircleDottedIcon,\n} from 'tabler-icons-react';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst dashes = {\n  [DashStyle.Draw]: [<CircleIcon />, 'Line'],\n  [DashStyle.Solid]: [<SquaresFilledIcon />, 'Filled'],\n  [DashStyle.Dashed]: [<CircleDashedIcon />, 'Dashed'],\n  [DashStyle.Dotted]: [<CircleDottedIcon />, 'Dotted'],\n};\n\nexport default function DrawingControlsStyleSelector({ app }: PropsType) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = React.useCallback(\n    (dash: DashStyle) => {\n      app.style({ dash });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(dashes) as Array<[DashStyle, [JSX.Element, string]]>;\n\n  const renderedSwatches = sizesData\n    .filter(([key]) => {\n      return key !== DashStyle.Solid;\n    })\n    .map(([key, [icon, label]]) => {\n      return (\n        <Flex\n          mx={1}\n          my={1}\n          key={key}\n          width=\"3rem\"\n          height=\"2.5rem\"\n          cursor=\"pointer\"\n          onClick={() => handleSizePick(key)}\n          align=\"center\"\n          justify=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          background=\"whiteAlpha.200\"\n          boxSizing=\"border-box\"\n        >\n          <Tooltip label={label}>\n            <Box>{icon}</Box>\n          </Tooltip>\n        </Flex>\n      );\n    });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}\n        >\n          {\n            // @ts-ignore\n            dashes[currentStyle.dash][0]\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 2.5}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport { css } from '@emotion/react';\n\nimport { Flex, Box, VStack, IconButton, Tooltip } from '@chakra-ui/react';\nimport { TDShapeType, TDToolType, TldrawApp } from '@krapi0314/tldraw';\nimport {\n  Click as ClickIcon,\n  Pencil as PencilIcon,\n  ArrowUpRight as ArrowUpRightIcon,\n  Rectangle as RectangleIcon,\n  Circle as CircleIcon,\n  Trash as TrashIcon,\n} from 'tabler-icons-react';\n\nimport DrawingControlsColorSelector from './DrawingControlsColorSelector';\nimport DrawingControlsSizeSelector from './DrawingControlsSizeSelector';\nimport DrawingControlsDashSelector from './DrawingControlsDashSelector';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst selectedStyle = css`\n  opacity: 1;\n`;\n\nconst unSelectedStyle = css`\n  opacity: 0.5;\n`;\n\nconst DrawingControls = ({ app }: PropsType) => {\n  const activeTool = app.useStore((s) => s.appState.activeTool);\n\n  const selectTool = React.useCallback(\n    (type: TDToolType) => {\n      app.selectTool(type);\n      app.toggleToolLock();\n    },\n    [app]\n  );\n\n  return (\n    <>\n      <Box>\n        <VStack spacing={4}>\n          <Tooltip label=\"Select\" aria-label=\"Select\">\n            <IconButton\n              icon={<ClickIcon />}\n              aria-label=\"Select\"\n              css={activeTool === 'select' ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool('select')}\n            />\n          </Tooltip>\n          <Tooltip label=\"Pencil\" aria-label=\"Pencil\">\n            <IconButton\n              icon={<PencilIcon />}\n              aria-label=\"Pencil\"\n              css={activeTool === TDShapeType.Draw ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Draw)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Arrow\" aria-label=\"Arrow\">\n            <IconButton\n              icon={<ArrowUpRightIcon />}\n              aria-label=\"Arrow\"\n              css={activeTool === TDShapeType.Arrow ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Arrow)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Rectangle\" aria-label=\"Rectangle\">\n            <IconButton\n              icon={<RectangleIcon />}\n              aria-label=\"Rectangle\"\n              css={activeTool === TDShapeType.Rectangle ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Rectangle)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Ellipse\" aria-label=\"Ellipse\">\n            <IconButton\n              icon={<CircleIcon />}\n              aria-label=\"Ellipse\"\n              css={activeTool === TDShapeType.Ellipse ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Ellipse)}\n            />\n          </Tooltip>\n        </VStack>\n      </Box>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <Box>\n            <DrawingControlsColorSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsSizeSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsDashSelector app={app} />\n          </Box>\n        </Box>\n      </Flex>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <IconButton icon={<TrashIcon />} aria-label=\"Arrow\" css={selectedStyle} onClick={() => app.deleteAll()} />\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default DrawingControls;\n","import { useState, useCallback } from 'react';\nimport { usePopper } from 'react-popper';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { Box, Flex, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\n\nimport type { VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  onChangeContent: (content: string) => void;\n  onChangeIcon: (details: VideoBookmarkIcon) => void;\n  currentEmoji: string;\n};\n\nexport default function VideoBookmarkEditor({ bookmark, onChangeContent, onChangeIcon, currentEmoji }: Props) {\n  const [showEmojiPicker, setShowEmojiPicker] = useState<boolean>(false);\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null);\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'left',\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [20, 20],\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          fallbackPlacements: ['top', 'left', 'bottom', 'right'],\n        },\n      },\n    ],\n  });\n\n  const handleEmojiPicked = useCallback(\n    (details) => {\n      setShowEmojiPicker(false);\n      onChangeIcon(details);\n    },\n    [onChangeIcon]\n  );\n\n  useHotkeys(\n    'esc',\n    () => {\n      setShowEmojiPicker(false);\n    },\n    {},\n    [setShowEmojiPicker]\n  );\n\n  return (\n    <form>\n      <FormControl mb={4}>\n        <FormLabel>Icon</FormLabel>\n\n        <Flex\n          align=\"center\"\n          bgColor=\"gray.800\"\n          height=\"10\"\n          justify=\"center\"\n          rounded=\"xl\"\n          width=\"10\"\n          fontSize=\"lg\"\n          cursor=\"pointer\"\n          ref={setReferenceElement}\n          onClick={() => {\n            setShowEmojiPicker(!showEmojiPicker);\n          }}\n        >\n          {currentEmoji}\n        </Flex>\n        {showEmojiPicker && (\n          <Box\n            ref={setPopperElement}\n            zIndex=\"1\"\n            style={styles.popper}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...attributes.popper}\n          >\n            <Picker data={data} onEmojiSelect={(details: VideoBookmarkIcon) => handleEmojiPicked(details)} />\n          </Box>\n        )}\n      </FormControl>\n      <FormControl>\n        <FormLabel>Description</FormLabel>\n        <Textarea\n          value={bookmark.content}\n          onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            onChangeContent(event.target.value);\n          }}\n          autoFocus\n        />\n      </FormControl>\n    </form>\n  );\n}\n","import { useState } from 'react';\n\nimport { css } from '@emotion/react';\nimport { Box, Flex, Button, ButtonGroup, Text, Spacer, IconButton } from '@chakra-ui/react';\nimport Draggable from 'react-draggable'; // The default\n\nimport { updateBookmark as updateBookmarkAPI, deleteBookmark as deleteBookmarkAPI } from 'helpers';\n\nimport VideoBookmarkForm from './VideoBookmarkForm';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark, VideoBookmarkCoordinates, VideoBookmarkIcon } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark | null;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  playing: boolean;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  editingBookmark: boolean;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst dragHandleStyles = css`\n  cursor: move;\n  height: 2rem;\n  background: repeating-linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.05),\n    rgba(255, 255, 255, 0.05) 10px,\n    rgba(255, 255, 255, 0.1) 10px,\n    rgba(255, 255, 255, 0.1) 20px\n  );\n`;\n\nexport default function VideoBookmarkShow({\n  video,\n  bookmark,\n  setActiveBookmark,\n  scale,\n  playing,\n  editingBookmark,\n  setEditingBookmark,\n  setVideo,\n}: Props) {\n  if (playing === true) {\n    return null;\n  }\n\n  if (!bookmark) {\n    return null;\n  }\n\n  const [currentEmoji, setCurrentEmoji] = useState<string>(bookmark.icon);\n\n  const handleDelete = () => {\n    if (bookmark) {\n      deleteVideoBookmark();\n    }\n    setEditingBookmark(false);\n    setActiveBookmark(null);\n  };\n\n  const deleteVideoBookmark = () => {\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.filter((innerBookmark) => {\n        return bookmark.id !== innerBookmark.id;\n      }),\n    }));\n    deleteBookmarkAPI(parseInt(bookmark.id));\n  };\n\n  const setVideoBookmarkCoords = (coords: VideoBookmarkCoordinates) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) =>\n        idx === bookmarkIndex ? { ...el, position: { x: coords.x, y: coords.y }, scale: scale } : el\n      ),\n    }));\n  };\n\n  const setVideoBookmarkContent = (content: string) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, content: content } : el)),\n    }));\n\n    video.bookmarks[bookmarkIndex].content = content;\n    bookmark.content = content;\n  };\n\n  const setVideoBookmarkIcon = (icon: VideoBookmarkIcon) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    let hex = '';\n    if (icon.native.codePointAt(0) !== undefined) {\n      hex = icon.native.codePointAt(0)!.toString(16);\n    }\n    const iconString = String.fromCodePoint(parseInt('0x' + hex));\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, icon: iconString } : el)),\n    }));\n    bookmark.icon = iconString;\n    setCurrentEmoji(iconString);\n  };\n\n  const offset = scale / bookmark.scale;\n\n  const position = bookmark.position ? { x: bookmark.position.x * offset, y: bookmark.position.y * offset } : undefined;\n\n  const renderedContent = (() => {\n    if (editingBookmark === true) {\n      return (\n        <VideoBookmarkForm\n          onChangeContent={(content) => setVideoBookmarkContent(content)}\n          onChangeIcon={(details) => setVideoBookmarkIcon(details)}\n          bookmark={bookmark}\n          currentEmoji={currentEmoji}\n        />\n      );\n    }\n\n    return (\n      <Text style={{ whiteSpace: 'pre-wrap' }}>\n        {bookmark.icon} {bookmark.content}\n      </Text>\n    );\n  })();\n\n  const renderedPositiveAction = editingBookmark ? (\n    <Button\n      onClick={() => {\n        setEditingBookmark(false);\n        let hex = '';\n        if (bookmark.icon.codePointAt(0) !== undefined) {\n          hex = bookmark.icon.codePointAt(0)!.toString(16);\n        }\n        const emoji = hex;\n        const content = bookmark.content;\n        const time = bookmark.time;\n        const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n        const drawing = JSON.stringify(bookmark.drawing);\n        const scale = bookmark.scale;\n        const author = bookmark.author;\n        updateBookmarkAPI(parseInt(bookmark.id), { emoji, content, time, position, drawing, scale, author });\n      }}\n    >\n      Done\n    </Button>\n  ) : (\n    <Button onClick={() => setEditingBookmark(true)}>Edit</Button>\n  );\n\n  return (\n    <Flex\n      position=\"absolute\"\n      left={0}\n      top={0}\n      right={0}\n      bottom={0}\n      align=\"flex-end\"\n      justify=\"flex-end\"\n      padding=\"4\"\n      pointerEvents=\"none\"\n      zIndex={3}\n    >\n      <Draggable\n        key={bookmark.id}\n        onStop={(_event, data) => setVideoBookmarkCoords({ x: data.x, y: data.y })}\n        bounds=\"parent\"\n        handle=\"#dragHandle\"\n        position={position}\n      >\n        <Box pointerEvents=\"all\" background=\"blackAlpha.900\" width=\"md\">\n          <Box id=\"dragHandle\" css={dragHandleStyles} />\n          {renderedContent && (\n            <Box padding=\"4\" borderBottom=\"1px\" borderColor=\"whiteAlpha.500\">\n              {renderedContent}\n            </Box>\n          )}\n\n          <Flex padding=\"4\">\n            <Spacer />\n            <ButtonGroup size=\"sm\">\n              <Button onClick={() => handleDelete()} colorScheme=\"red\">\n                Delete\n              </Button>\n              {renderedPositiveAction}\n            </ButtonGroup>\n            <Spacer />\n          </Flex>\n        </Box>\n      </Draggable>\n    </Flex>\n  );\n}\n","import { Text } from '@chakra-ui/react';\n\ntype Props = {\n  currentTime: number;\n  fullDuration: number;\n};\n\nconst secondsToHms = (input: number) => {\n  const hours = Math.floor(input / 3600);\n  const minutes = Math.floor(input / 60) % 60;\n  const seconds = input % 60;\n\n  return [hours, minutes, seconds]\n    .map((v) => (v < 10 ? `0${v}` : v))\n    .filter((v, i) => v !== '00' || i > 0)\n    .join(':');\n};\n\nconst TimeDisplay = ({ currentTime, fullDuration }: Props) => {\n  return (\n    <Text whiteSpace=\"nowrap\" fontSize=\"sm\" align=\"center\" my=\"auto\" mb=\"1\">\n      {secondsToHms(Math.round(currentTime))} / {secondsToHms(Math.round(fullDuration))}\n    </Text>\n  );\n};\n\nexport default TimeDisplay;\n","import { Box, Tooltip } from '@chakra-ui/react';\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  video: Video;\n  size: 'small' | 'medium';\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n};\n\nexport default function VideoBookmarkTimeline({\n  video,\n  bookmark,\n  size = 'medium',\n  setCurrentTime,\n  setActiveBookmark,\n  pauseVideo,\n}: Props) {\n  function truncateString(str: string, n: number) {\n    if (str.length > n) {\n      return `${str.substring(0, n)}...`;\n    }\n    return str;\n  }\n\n  function handleGoto() {\n    pauseVideo();\n    setCurrentTime(bookmark.time);\n    video.el.currentTime = bookmark.time;\n    setActiveBookmark(bookmark);\n  }\n\n  const renderedIcon = (() => {\n    if (bookmark.icon) {\n      return bookmark.icon;\n    }\n\n    return <BookmarkIcon size={size === 'medium' ? 25 : 20} color={size === 'medium' ? '#eee' : '#999'} />;\n  })();\n\n  return (\n    <Tooltip label={`${bookmark.author}: ${truncateString(bookmark.content, 50)}`}>\n      <Box onClick={() => handleGoto()} cursor=\"pointer\">\n        {renderedIcon}\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport { Box, Flex, Slider, SliderFilledTrack, SliderThumb, SliderTrack } from '@chakra-ui/react';\n\nimport VideoBookmarkTimeline from './VideoBookmarkTimeline';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  video: Video;\n  fullDuration: number;\n  currentTime: number;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n};\n\nconst TimeControl = ({ video, fullDuration, currentTime, setCurrentTime, setActiveBookmark, pauseVideo }: Props) => {\n  const trackRef = useRef<HTMLDivElement | null>(null);\n  const [renderedCurrentBookmarks, setRenderedCurrentBookmarks] = useState<JSX.Element[]>([]);\n  const [trackDimensions, setTrackDimensions] = useState<DOMRect | null>(null); // tracks the dimensions of the track as it's resized\n\n  const handleSliderChange = (time: number) => {\n    setCurrentTime(time);\n    video.el.currentTime = time;\n  };\n\n  const setBookmarkButtons = () => {\n    setRenderedCurrentBookmarks(\n      trackDimensions === null || fullDuration === 0\n        ? []\n        : video.bookmarks.map((bookmark) => {\n            const percentage = bookmark.time / fullDuration;\n            const left = trackDimensions.width * percentage;\n            return (\n              <Flex\n                key={bookmark.id}\n                bgColor=\"gray.800\"\n                position=\"absolute\"\n                width=\"2rem\"\n                height=\"2rem\"\n                align=\"center\"\n                justify=\"center\"\n                top=\"-7px\"\n                left={`calc(${left}px - 1rem)`}\n                rounded=\"full\"\n                zIndex=\"1\"\n              >\n                <VideoBookmarkTimeline\n                  video={video}\n                  bookmark={bookmark}\n                  size=\"medium\"\n                  setCurrentTime={setCurrentTime}\n                  setActiveBookmark={setActiveBookmark}\n                  pauseVideo={pauseVideo}\n                />\n              </Flex>\n            );\n          })\n    );\n  };\n\n  useLayoutEffect(() => {\n    function handleResize() {\n      if (trackRef.current === null) {\n        return;\n      }\n\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\n      setBookmarkButtons();\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  useEffect(() => {\n    if (trackDimensions === null && trackRef.current) {\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\n    }\n    setBookmarkButtons();\n  }, [video.bookmarks, fullDuration, trackDimensions]);\n\n  return (\n    <Box position=\"relative\">\n      {renderedCurrentBookmarks}\n\n      <Slider\n        aria-label=\"Time control\"\n        focusThumbOnChange={false}\n        key=\"playing\"\n        max={fullDuration}\n        min={0}\n        onChange={(value: number) => handleSliderChange(value)}\n        step={1 / video.frameRate}\n        value={currentTime}\n      >\n        <SliderTrack ref={trackRef}>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  );\n};\n\nexport default TimeControl;\n","import { Box, Flex, SliderTrack, Slider, SliderFilledTrack, SliderThumb } from '@chakra-ui/react';\n\nimport { Volume as VolumeIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\n\ntype Props = {\n  video: Video;\n  setCurrentVolume: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport default function VideoVolume({ video, setCurrentVolume }: Props) {\n  function handleSliderChange(value: number) {\n    setCurrentVolume(value);\n    video.el.volume = value;\n  }\n\n  return (\n    <Flex align=\"center\" width=\"7rem\">\n      <Box mb={1}>\n        <VolumeIcon />\n      </Box>\n      <Slider\n        key=\"playing\"\n        aria-label=\"Video volume control\"\n        value={video.el.volume}\n        min={0}\n        max={1}\n        onChange={(value: number) => handleSliderChange(value)}\n        step={0.01}\n        focusThumbOnChange={false}\n        ml={2}\n        mb={1}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Flex>\n  );\n}\n","import { Video } from './Video';\nimport { APICore } from 'helpers/api/apiCore';\n\nconst api = new APICore();\nconst user = api.getLoggedInUser();\n\nexport type VideoBookmarkIcon = {\n  native: string;\n};\n\nexport type VideoBookmarkCoordinates = {\n  x: number;\n  y: number;\n};\n\nexport type VideoBookmark = {\n  id: string;\n  author: string;\n  icon: string;\n  content: string;\n  time: number;\n  position: VideoBookmarkCoordinates | null;\n  drawing: object | null;\n  scale: number;\n  video_id: string;\n};\n\nexport function create(\n  video: Video,\n  icon: string,\n  content: string,\n  time: number,\n  scale: number,\n  drawing: object\n): VideoBookmark {\n  return {\n    content,\n    drawing: JSON.parse(JSON.stringify(drawing)),\n    id: '',\n    icon: icon,\n    position: null,\n    scale,\n    time,\n    video_id: video.id,\n    author: user.fullname,\n  };\n}\n","import { TldrawApp } from '@krapi0314/tldraw';\n\nimport { Box, IconButton, Tooltip } from '@chakra-ui/react';\n\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport { create, VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\nimport type { Video } from './Video';\nimport { createBookmark as createBookmarkAPI } from 'helpers';\n\ntype Props = {\n  app: TldrawApp;\n  disabled: boolean;\n  scale: number;\n  video: Video;\n  currentTime: number;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n};\n\nexport default function VideoBookmarkAdd({\n  app,\n  disabled,\n  scale,\n  video,\n  currentTime,\n  setVideo,\n  setEditingBookmark,\n  setActiveBookmark,\n  pauseVideo,\n}: Props) {\n  function handleCreate() {\n    pauseVideo();\n    createVideoBookmark(video, setVideo, '🔖', '', currentTime, scale, app.document);\n    setEditingBookmark(true);\n  }\n\n  const createVideoBookmark = async (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    icon: string,\n    content: string,\n    time: number,\n    scale: number,\n    drawing: object\n  ) => {\n    const bookmark = create(video, icon, content, time, scale, drawing);\n    const drawingString = JSON.stringify(drawing);\n    const id = video.id;\n    const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n    let hex = '';\n    if (bookmark.icon.codePointAt(0) !== undefined) {\n      hex = bookmark.icon.codePointAt(0)!.toString(16);\n    }\n\n    const createBookmarkAPIResponse = await createBookmarkAPI({\n      recordId: id,\n      emoji: hex,\n      content,\n      time,\n      position,\n      drawing: drawingString,\n      scale,\n      author: bookmark.author,\n    });\n    bookmark.id = createBookmarkAPIResponse.data.id;\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: [...prevState.bookmarks, bookmark],\n    }));\n    setActiveBookmark(bookmark);\n  };\n\n  return (\n    <Tooltip label=\"Bookmark this moment (active when paused)\">\n      <Box>\n        <IconButton\n          onClick={() => handleCreate()}\n          icon={<BookmarkIcon />}\n          aria-label=\"Bookmark this moment\"\n          disabled={disabled}\n        />\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nimport { css } from '@emotion/react';\nimport { Box, Flex, IconButton, Tooltip } from '@chakra-ui/react';\nimport { TldrawApp } from '@krapi0314/tldraw';\n\nimport getRatioDimensions from './layout';\nimport { readRecord as readRecordAPI } from 'helpers';\n\nimport Drawing from './Drawing';\nimport DrawingControls from './DrawingControls';\nimport VideoBookmarkShow from './VideoBookmarkShow';\nimport TimeDisplay from './TimeDisplay';\nimport TimeControl from './TimeControl';\nimport VideoVolume from './VideoVolume';\nimport VideoBookmarkAdd from './VideoBookmarkAdd';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\nimport {\n  PlayerPlay as PlayerPlayIcon,\n  PlayerPause as PlayerPauseIcon,\n  Maximize as MaximizeIcon,\n} from 'tabler-icons-react';\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst DISPLAY_ASPECT_RATIO = '16:9';\nconst FRAME_RATE = 30;\nconst DEFAULT_VOLUME = 0.8;\nconst LONG_TIME = 24 * 60 * 60;\n\nconst overlayStyle = css`\n  width: ${VIDEO_WIDTH}px;\n  height: ${VIDEO_HEIGHT}px;\n`;\n\nconst videoStyle = css`\n  video {\n    width: ${VIDEO_WIDTH}px;\n    height: ${VIDEO_HEIGHT}px;\n  }\n`;\n\ntype Props = {\n  id: number;\n};\n\n// const VideoPlayer = ({ video: HTMLVideoElement }: Props) => {\nconst VideoPlayer = ({ id }: Props) => {\n  const [app, setApp] = useState<TldrawApp>();\n\n  const [videoElemLoading, setVideoElemLoading] = useState<boolean>(true);\n  const [videoPlayerLoading, setVideoPlayerLoading] = useState<boolean>(true);\n  const [video, setVideo] = useState<Video>({} as Video);\n  const [videoDimensions, setVideoDimensions] = useState<[number, number] | null>(null);\n  const [currentTime, setCurrentTime] = useState<number>(0);\n  const [fullDuration, setFullDuration] = useState<number>(0);\n  const [currentVolume, setCurrentVolume] = useState<number>(DEFAULT_VOLUME);\n  const [fullscreen, setFullscreen] = useState<boolean>(false);\n  const [playing, setPlaying] = useState<boolean>(false);\n\n  const [bookmarks, setBookmarks] = useState<VideoBookmark[]>(video.bookmarks);\n  const [editingBookmark, setEditingBookmark] = useState<boolean>(false);\n  const [activeBookmark, setActiveBookmark] = useState<VideoBookmark | null>(null);\n\n  const overlayRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTargetRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTriggerRef = useRef<HTMLButtonElement | null>(null);\n  const videoContainerRef = useRef<HTMLDivElement | null>(null);\n\n  const setupVideoElement = useCallback(async () => {\n    const readRecordAPIResponse = await readRecordAPI(id);\n    const videoData = readRecordAPIResponse.data;\n\n    const el = document.createElement('video');\n    el.src = videoData.recordUrl;\n\n    setVideo({\n      bookmarks: videoData.bookmarks\n        ? videoData.bookmarks.map((b: any) => {\n            return {\n              ...b,\n              drawing: JSON.parse(b.drawing),\n              icon: b.emoji ? String.fromCodePoint(parseInt('0x' + b.emoji)) : '',\n            };\n          })\n        : [],\n      codedWidth: VIDEO_HEIGHT,\n      codedHeight: VIDEO_WIDTH,\n      displayAspectRatio: DISPLAY_ASPECT_RATIO,\n      el: el,\n      filePath: videoData.recordUrl,\n      frameRate: FRAME_RATE,\n      id: videoData.id,\n      name: videoData.title,\n      seeking: false,\n      volume: DEFAULT_VOLUME,\n    });\n    setBookmarks(videoData.bookmarks);\n    setVideoElemLoading(false);\n  }, [id]);\n\n  const getDuration = (url: string, setFullDuration: React.Dispatch<React.SetStateAction<number>>) => {\n    var _player = new Audio(url);\n    _player.addEventListener(\n      'durationchange',\n      function () {\n        if (this.duration != Infinity) {\n          var duration = this.duration;\n          _player.remove();\n          setFullDuration(duration);\n        }\n      },\n      false\n    );\n    _player.load();\n    _player.currentTime = LONG_TIME;\n    _player.volume = 0;\n    _player.play();\n  };\n\n  const setupVideoPlayer = useCallback(() => {\n    if (videoContainerRef.current === null || video.el === undefined) {\n      return;\n    }\n    videoContainerRef.current.innerHTML = '';\n    videoContainerRef.current.appendChild(video.el);\n\n    video.el.volume = video.volume;\n    setCurrentVolume(video.el.volume);\n    getDuration(video.el.src, setFullDuration);\n\n    video.el.ontimeupdate = () => {\n      setCurrentTime(video.el.currentTime);\n    };\n\n    setVideoPlayerLoading(false);\n  }, [video]);\n\n  useEffect(() => {\n    if (overlayRef.current && video.displayAspectRatio) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, [video.displayAspectRatio]);\n\n  useEffect(() => {\n    if (videoElemLoading) {\n      setupVideoElement();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (videoPlayerLoading) {\n      setupVideoPlayer();\n    }\n  }, [videoElemLoading]);\n\n  useEffect(() => {\n    if (overlayRef.current) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, []);\n\n  const playVideo = () => {\n    if (videoContainerRef.current === null) {\n      return;\n    }\n    video.el.play();\n    setPlaying(true);\n  };\n\n  const pauseVideo = () => {\n    if (videoContainerRef.current === null) {\n      return;\n    }\n    video.el.pause();\n    setPlaying(false);\n  };\n\n  const renderedContent = (() => {\n    const renderedDrawingControls = app !== undefined && (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        justify=\"center\"\n        left={0}\n        pointerEvents=\"none\"\n        position=\"absolute\"\n        top={0}\n        zIndex={2}\n      >\n        <Box\n          background=\"gray.900\"\n          borderColor=\"whiteAlpha.500\"\n          borderLeft=\"none\"\n          borderWidth=\"1px\"\n          boxSizing=\"border-box\"\n          padding={4}\n          pointerEvents=\"all\"\n        >\n          <DrawingControls app={app} />\n        </Box>\n      </Flex>\n    );\n\n    const renderedDrawing = (\n      <Drawing\n        onMount={(innerApp) => setApp(innerApp)}\n        scale={1}\n        playing={playing}\n        video={video}\n        setVideo={setVideo}\n        videoBookmark={activeBookmark ? activeBookmark : null}\n      />\n    );\n\n    const renderedActiveBookmark = activeBookmark !== undefined && (\n      <VideoBookmarkShow\n        video={video}\n        setVideo={setVideo}\n        bookmark={activeBookmark ? activeBookmark : null}\n        setActiveBookmark={setActiveBookmark}\n        scale={1}\n        playing={playing}\n        setCurrentTime={setCurrentTime}\n        editingBookmark={editingBookmark}\n        setEditingBookmark={setEditingBookmark}\n      />\n    );\n\n    const renderedNavigationControls = (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        boxSizing=\"border-box\"\n        justify=\"center\"\n        left={0}\n        position=\"absolute\"\n        right={0}\n        zIndex={2}\n      >\n        <Flex\n          align=\"center\"\n          background=\"gray.900\"\n          borderBottom=\"none\"\n          borderColor=\"whiteAlpha.500\"\n          borderWidth=\"1px\"\n          minWidth=\"50vw\"\n          p={4}\n          pointerEvents=\"all\"\n        >\n          <Tooltip label={playing ? 'Pause' : 'Play'}>\n            <Box mr=\"2\">\n              {!playing && (\n                <IconButton\n                  onClick={() => {\n                    playVideo();\n                    setEditingBookmark(false);\n                    setActiveBookmark(null);\n                  }}\n                  icon={<PlayerPlayIcon />}\n                  aria-label=\"Play\"\n                />\n              )}\n              {playing && <IconButton onClick={() => pauseVideo()} icon={<PlayerPauseIcon />} aria-label=\"Pause\" />}\n            </Box>\n          </Tooltip>\n\n          <Box mx=\"2\">\n            <TimeDisplay currentTime={currentTime} fullDuration={fullDuration} />\n          </Box>\n\n          <Box flexGrow={1} mx=\"2\" minW=\"25vw\">\n            <TimeControl\n              video={video}\n              fullDuration={fullDuration}\n              currentTime={currentTime}\n              setCurrentTime={setCurrentTime}\n              setActiveBookmark={setActiveBookmark}\n              pauseVideo={pauseVideo}\n            />\n          </Box>\n\n          <Box mx=\"2\">\n            <VideoVolume video={video} setCurrentVolume={setCurrentVolume} />\n          </Box>\n\n          {app && (\n            <Box mx=\"2\">\n              <VideoBookmarkAdd\n                key={video.id}\n                app={app}\n                disabled={!!activeBookmark || editingBookmark || playing}\n                scale={1}\n                video={video}\n                setVideo={setVideo}\n                currentTime={currentTime}\n                setEditingBookmark={setEditingBookmark}\n                setActiveBookmark={setActiveBookmark}\n                pauseVideo={pauseVideo}\n              />\n            </Box>\n          )}\n\n          <Tooltip label=\"Presentation mode\">\n            <Box ml=\"2\">\n              <IconButton\n                onClick={() => setFullscreen(!fullscreen)}\n                icon={<MaximizeIcon />}\n                aria-label=\"Fullscreen video\"\n                ref={fullscreenTriggerRef}\n              />\n            </Box>\n          </Tooltip>\n        </Flex>\n      </Flex>\n    );\n    return (\n      <Flex direction=\"column\" width=\"100%\" height=\"calc(100vh - 5rem)\" ref={fullscreenTargetRef}>\n        <Flex flexGrow={1} flexShrink={1} overflow=\"hidden\" position=\"relative\">\n          {renderedDrawingControls}\n          {renderedNavigationControls}\n          <Flex align=\"center\" flexGrow={1} flexShrink={1} justifyContent=\"center\" ref={overlayRef} overflow=\"hidden\">\n            <Box position=\"relative\" css={overlayStyle} id=\"overlay\" style={{ touchAction: 'none' }}>\n              {renderedDrawing}\n              {renderedActiveBookmark}\n              <Box css={videoStyle} ref={videoContainerRef} />\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  })();\n  return (\n    <>\n      {videoElemLoading ? (\n        <p>loading</p>\n      ) : (\n        <Flex>\n          <Box width=\"100vw\" bgColor=\"black\">\n            {renderedContent}\n          </Box>\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default VideoPlayer;\n","import { VideoPlayer } from 'components/VideoPlayer';\nimport { Card } from 'react-bootstrap';\nimport { useDailyStandup, useMoment } from './hooks';\nimport { DailyStandup } from './types';\nimport {\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\n\nconst DailyStandupCard = ({ dailyStandup }: { dailyStandup: DailyStandup }) => {\n  const cam_w = 320,\n    cam_h = 240,\n    screen_w = 960,\n    screen_h = 540;\n  const { getTimeFromNow } = useMoment();\n  const { onViewDailyStandups } = useDailyStandup();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Card className=\"d-block me-3\">\n      <Card.Body\n        onClick={() => {\n          // openModalWithClass('modal-full-width');\n          onOpen();\n          onViewDailyStandups(dailyStandup);\n        }}\n        style={{ cursor: 'pointer' }}\n      >\n        <div className={(dailyStandup.seen ? 'opacity-25' : '') + ' text-center'}>\n          <img\n            src={dailyStandup.profileImageUrl}\n            className=\"rounded-circle avatar-lg\"\n            alt={dailyStandup.author}\n            referrerPolicy=\"no-referrer\"\n          />\n        </div>\n        <h4 className={(dailyStandup.seen ? 'text-light' : '') + ' text-center font-weight-bold mt-2'}>\n          {dailyStandup.author}\n        </h4>\n        <p className={(dailyStandup.seen ? 'text-light' : 'text-muted') + ' text-center font-12 mb-1'}>\n          {getTimeFromNow(dailyStandup.createdDate)}\n        </p>\n        <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <VideoPlayer id={dailyStandup.screenRecordId} />\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n        {/* <Modal\n          backdrop=\"static\"\n          show={isViewOpen}\n          onHide={toggleView}\n          dialogClassName={className}\n          size={size}\n          scrollable={scroll}>\n          <Modal.Header onHide={toggleView} closeButton>\n            <h4 className=\"modal-title\">{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</h4>\n          </Modal.Header>\n          <Modal.Body>\n            <video\n              src={dailyStandup.camRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={cam_w}\n              height={cam_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n            <video\n              src={dailyStandup.screenRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={screen_w}\n              height={screen_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n          </Modal.Body>\n        </Modal> */}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DailyStandupCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useModal } from './hooks';\nimport { VideoRecorder } from 'components';\n\nconst CreateRecordButton = () => {\n  const { isOpen: isRecordOpen, size, className, scroll, toggleModal: toggleRecord, openModalWithClass } = useModal();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          openModalWithClass('modal-full-width');\n        }}\n      >\n        <i className=\"mdi mdi-plus\"></i> Record\n      </Button>\n      <Modal show={isRecordOpen} onHide={toggleRecord} dialogClassName={className} size={size} scrollable={scroll}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleRecord} closeButton>\n            <h4 className=\"modal-title\">Record</h4>\n          </Modal.Header>\n          <VideoRecorder />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateRecordButton;\n","import { useToggle } from 'hooks';\nimport { useState } from 'react';\n\nexport default function useModal() {\n  const [isOpen, toggleModal] = useToggle();\n\n  const [size, setSize] = useState<'sm' | 'lg' | 'xl'>();\n  const [className, setClassName] = useState<string>('');\n  const [scroll, setScroll] = useState<boolean>(false);\n\n  // Opens large modal\n  const openModalWithSize = (size: 'sm' | 'lg' | 'xl') => {\n    setSize(size);\n    setClassName('');\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens modal with custom class\n  const openModalWithClass = (className: string) => {\n    setClassName(className);\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens large modal\n  const openModalWithScroll = () => {\n    setScroll(true);\n    setSize('sm');\n    setClassName('');\n    toggleModal();\n  };\n\n  return {\n    isOpen,\n    size,\n    className,\n    scroll,\n    toggleModal,\n    openModalWithSize,\n    openModalWithClass,\n    openModalWithScroll,\n  };\n}\n","import { Row, Col } from 'react-bootstrap';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { useDailyStandup } from './hooks';\nimport { DailyStandup } from './types';\nimport DailyStandupCard from './DailyStandupCard';\nimport CreateRecordButton from './CreateRecordButton';\n\nconst DailyStandupContainer = () => {\n  const { carouselRef, dailyStandups, dailyStandupLoading } = useDailyStandup();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Daily Standups</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <CreateRecordButton />\n        </Col>\n      </Row>\n      <Row>\n        {!dailyStandupLoading && (\n          <Carousel\n            ref={carouselRef}\n            additionalTransfrom={0}\n            arrows\n            centerMode={false}\n            className=\"\"\n            containerClass=\"container\"\n            dotListClass=\"\"\n            draggable\n            focusOnSelect={false}\n            infinite={false}\n            itemClass=\"\"\n            keyBoardControl\n            minimumTouchDrag={80}\n            pauseOnHover\n            renderArrowsWhenDisabled={false}\n            renderButtonGroupOutside={false}\n            renderDotsOutside={false}\n            responsive={{\n              desktop: {\n                breakpoint: {\n                  max: 3000,\n                  min: 1024,\n                },\n                items: 6,\n                partialVisibilityGutter: 40,\n              },\n              mobile: {\n                breakpoint: {\n                  max: 464,\n                  min: 0,\n                },\n                items: 1,\n                partialVisibilityGutter: 30,\n              },\n              tablet: {\n                breakpoint: {\n                  max: 1024,\n                  min: 464,\n                },\n                items: 2,\n                partialVisibilityGutter: 30,\n              },\n            }}\n            rewind={false}\n            rewindWithAnimation={false}\n            rtl={false}\n            shouldResetAutoplay\n            showDots={false}\n            sliderClass=\"\"\n            slidesToSlide={1}\n          >\n            {dailyStandups.map((dailyStandup: DailyStandup, i: number) => {\n              return (\n                <div key={i}>\n                  <DailyStandupCard dailyStandup={dailyStandup} />\n                </div>\n              );\n            })}\n          </Carousel>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default DailyStandupContainer;\n","import WhiteboardContainer from './WhiteboardContainer';\nimport DailyStandupContainer from './DailyStandupContainer';\nimport { useRedux } from 'hooks';\n\nconst Dashboard = () => {\n  const { appSelector } = useRedux();\n\n  const { loading } = appSelector((state) => ({\n    loading: state.Auth.loading,\n  }));\n\n  return loading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : (\n    <>\n      <DailyStandupContainer />\n      <hr />\n      <WhiteboardContainer />\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["useState","dailyStandups","setDailyStandups","dailyStandupLoading","setDailyStandupLoading","appSelector","useRedux","carouselRef","useRef","getTimeDifference","useMoment","state","loading","Auth","user","currentTeam","Team","teamId","id","readAllDailyStandups","useCallback","readAllDailyStandupsAPI","scope","pageIndex","readAllDailyStandupsAPIResponse","data","records","record","createdDate","seenMemberIdGroup","indexOf","at","author","member","fullname","title","slice","lastIndexOf","push","screenRecordId","screenRecordFileUrl","recordUrl","camRecordFileUrl","dailyStandup","profileImageUrl","seen","reverse","slide","findIndex","current","goToSlide","onViewDailyStandups","viewDailyStandupAPI","useEffect","convertDateTime","datetime","convertedDatetime","Date","setTime","getTime","getTimezoneOffset","moment","diff","getTimeFromNow","fromNow","whiteboards","setWhiteboards","whiteboardLoading","setWhiteboardLoading","whiteboardPageNumber","setWhiteboardPageNumber","numberOfWhiteboards","setNumberOfWhiteboards","useToggle","isCreateWhiteboardOpen","toggleCreateWhiteboard","readAllWhiteboard","readAllWhiteboardAPI","readAllWhiteboardAPIResponse","map","whiteboard","description","lastModifiedDate","authorProfileImageUrl","whiteboardFileUrl","whiteboardUrl","size_ALL_PAGE","onCreateWhiteboard","event","preventDefault","target","elements","namedItem","value","createWhiteboardAPI","createWhiteboardAPIResponse","preSignedURL","formData","createWhiteboardFormData","uploadWhiteboardAPI","readWhiteboardAPI","readWhiteboardAPIResponse","window","location","href","whiteboardID","document","name","version","TldrawApp","pages","page","childIndex","shapes","bindings","pageStates","selectedIds","camera","point","zoom","assets","file","fileHandle","json","JSON","stringify","blob","Blob","type","fileToUpload","File","FormData","append","onEditWhiteboard","updateWhiteboardAPI","onDeleteWhiteboard","deleteWhiteboardAPI","onPageNumberClick","e","parseInt","innerText","isEditOpen","toggleEdit","isDeleteOpen","toggleDelete","isReadMore","setIsReadMore","toggleReadMore","closeModalAfterFunction","f","toggle","useWhiteboardCard","Card","className","Dropdown","align","variant","as","onClick","Modal","show","onHide","closeButton","onSubmit","htmlFor","maxLength","required","placeholder","to","length","role","OverlayTrigger","placement","overlay","Tooltip","src","alt","useWhiteboard","Button","items","number","Math","ceil","Pagination","active","toString","Row","Col","sm","ButtonGroup","md","xxl","displayAspectRatio","element","split","widthSplit","heightSplit","width","height","ratioWidthHeight","ratioHeightWidth","containerWidth","offsetWidth","containerHeight","offsetHeight","playing","onMount","scale","video","setVideo","videoBookmark","tlDrawRef","outerRef","handleMount","app","setCamera","style","color","ColorStyle","handlePersist","bookmark","drawing","bookmarkIndex","bookmarks","innerBookmark","prevState","el","idx","setVideoBookmarkDrawing","clearDrawing","tool","useStore","getState","appState","activeTool","deleteAll","selectTool","toggleToolLock","rescaleDrawing","loadDocument","parse","selectNone","position","top","left","right","bottom","ref","onPersist","showUI","colors","isOpen","setIsOpen","currentStyle","s","handleColourPick","swatchesData","Object","entries","renderedSwatches","key","mx","my","backgroundColor","cursor","onClose","bgColor","sizes","SizeStyle","handleSizePick","size","sizesData","justify","border","borderColor","background","padding","justifyContent","toUpperCase","dashes","DashStyle","DrawingControlsStyleSelector","React","dash","filter","icon","label","boxSizing","selectedStyle","css","unSelectedStyle","spacing","TDShapeType","mt","pt","borderTop","VideoBookmarkEditor","onChangeContent","onChangeIcon","currentEmoji","showEmojiPicker","setShowEmojiPicker","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","modifiers","options","offset","fallbackPlacements","styles","attributes","handleEmojiPicked","details","useHotkeys","mb","rounded","fontSize","zIndex","popper","onEmojiSelect","content","onChange","autoFocus","dragHandleStyles","VideoBookmarkShow","setActiveBookmark","editingBookmark","setEditingBookmark","setCurrentEmoji","deleteVideoBookmark","deleteBookmarkAPI","x","y","undefined","renderedContent","setVideoBookmarkContent","hex","native","codePointAt","iconString","String","fromCodePoint","setVideoBookmarkIcon","whiteSpace","renderedPositiveAction","emoji","time","updateBookmarkAPI","pointerEvents","onStop","_event","coords","setVideoBookmarkCoords","bounds","handle","borderBottom","colorScheme","secondsToHms","input","floor","v","i","join","currentTime","fullDuration","round","VideoBookmarkTimeline","setCurrentTime","pauseVideo","str","n","renderedIcon","substring","trackRef","renderedCurrentBookmarks","setRenderedCurrentBookmarks","trackDimensions","setTrackDimensions","setBookmarkButtons","percentage","useLayoutEffect","handleResize","getBoundingClientRect","addEventListener","removeEventListener","focusThumbOnChange","max","min","step","frameRate","VideoVolume","setCurrentVolume","volume","handleSliderChange","ml","APICore","getLoggedInUser","create","video_id","VideoBookmarkAdd","disabled","createVideoBookmark","drawingString","createBookmarkAPI","recordId","createBookmarkAPIResponse","VIDEO_WIDTH","overlayStyle","videoStyle","setApp","videoElemLoading","setVideoElemLoading","videoPlayerLoading","setVideoPlayerLoading","setVideoDimensions","setFullDuration","fullscreen","setFullscreen","setPlaying","setBookmarks","activeBookmark","overlayRef","fullscreenTargetRef","fullscreenTriggerRef","videoContainerRef","setupVideoElement","readRecordAPI","readRecordAPIResponse","videoData","createElement","b","codedWidth","codedHeight","filePath","seeking","setupVideoPlayer","innerHTML","appendChild","url","_player","Audio","this","duration","Infinity","remove","load","play","getDuration","ontimeupdate","dimensions","getRatioDimensions","pause","renderedDrawingControls","borderLeft","borderWidth","renderedDrawing","innerApp","renderedActiveBookmark","renderedNavigationControls","minWidth","p","mr","flexGrow","minW","direction","flexShrink","overflow","touchAction","useDailyStandup","useDisclosure","onOpen","referrerPolicy","toggleModal","setSize","setClassName","scroll","setScroll","openModalWithSize","openModalWithClass","openModalWithScroll","useModal","isRecordOpen","toggleRecord","dialogClassName","scrollable","additionalTransfrom","arrows","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","pauseOnHover","renderArrowsWhenDisabled","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","partialVisibilityGutter","mobile","tablet","rewind","rewindWithAnimation","rtl","shouldResetAutoplay","showDots","sliderClass","slidesToSlide"],"sourceRoot":""}