{"version":3,"file":"static/js/113.6c25f693.chunk.js","mappings":"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","sources":["pages/docs/hooks/useDailyStandup.ts","pages/docs/hooks/useMoment.ts","pages/docs/hooks/useWhiteboard.ts","pages/docs/hooks/useWhiteboardCard.ts","pages/docs/WhiteboardCard.tsx","pages/docs/CreateWhiteboardButton.tsx","pages/docs/WhiteboardPagination.tsx","pages/docs/WhiteboardContainer.tsx","components/VideoPlayer/layout.ts","components/VideoPlayer/Drawing.tsx","components/VideoPlayer/DrawingControlsColorSelector.tsx","components/VideoPlayer/DrawingControlsSizeSelector.tsx","components/VideoPlayer/DrawingControlsDashSelector.tsx","components/VideoPlayer/DrawingControls.tsx","components/VideoPlayer/VideoBookmarkForm.tsx","components/VideoPlayer/VideoBookmarkShow.tsx","components/VideoPlayer/TimeDisplay.tsx","components/VideoPlayer/VideoBookmarkTimeline.tsx","components/VideoPlayer/TimeControl.tsx","components/VideoPlayer/VideoVolume.tsx","components/VideoPlayer/VideoBookmark.ts","components/VideoPlayer/VideoBookmarkAdd.tsx","components/VideoPlayer/VideoPlayer.tsx","pages/docs/DailyStandupCard.tsx","pages/docs/CreateRecordButton.tsx","pages/docs/hooks/useModal.ts","pages/docs/DailyStandupContainer.tsx","pages/docs/Dashboard.tsx"],"sourcesContent":["import Carousel from 'react-multi-carousel';\nimport { readAllDailyStandups as readAllDailyStandupsAPI, viewDailyStandup as viewDailyStandupAPI } from 'helpers';\nimport { DailyStandup } from '../types';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useRedux } from 'hooks';\nimport { useMoment } from './';\n\nconst useDailyStandup = () => {\n  const [dailyStandups, setDailyStandups] = useState<DailyStandup[]>([]);\n  const [dailyStandupLoading, setDailyStandupLoading] = useState<boolean>(true);\n  const { appSelector } = useRedux();\n\n  const carouselRef = useRef<Carousel>(null);\n\n  const { getTimeDifference } = useMoment();\n\n  const { loading, user } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n  }));\n\n  const scope = 'team';\n  const teamId = user.currentTeam?.id;\n\n  const readAllDailyStandups = useCallback(async () => {\n    const pageIndex = 0;\n    const readAllDailyStandupsAPIResponse = await readAllDailyStandupsAPI({ teamId, scope, pageIndex });\n    for (const record of readAllDailyStandupsAPIResponse.data.records) {\n      if (getTimeDifference(record.createdDate) > 24 && record.seenMemberIdGroup?.indexOf(user.id) > -1) {\n        continue;\n      }\n      if (\n        dailyStandups.at(-1) &&\n        dailyStandups.at(-1)?.author === record.member.fullname &&\n        dailyStandups.at(-1)?.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(\" \")) === record.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(\" \"))\n      ) {\n        if (record.title.slice(-6) === 'screen') {\n          dailyStandups.at(-1)?.id.push(record.id);\n          (dailyStandups.at(-1) as DailyStandup).screenRecordId = record.id;\n          (dailyStandups.at(-1) as DailyStandup).screenRecordFileUrl = record.recordUrl;\n        } else {\n          dailyStandups.at(-1)?.id.push(record.id);\n          (dailyStandups.at(-1) as DailyStandup).camRecordFileUrl = record.recordUrl;\n        }\n      } else {\n        if (record.title.slice(-6) === 'screen') {\n          dailyStandups.push({\n            id: [record.id],\n            author: record.member.fullname,\n            title: record.title,\n            profileImageUrl: record.member.profileImageUrl,\n            createdDate: record.createdDate,\n            camRecordFileUrl: '',\n            screenRecordFileUrl: record.recordUrl,\n            screenRecordId: record.id,\n            seen: record.seenMemberIdGroup?.indexOf(user.id) > -1 ? true : false,\n          });\n        } else {\n          dailyStandups.push({\n            id: [record.id],\n            author: record.member.fullname,\n            title: record.title,\n            profileImageUrl: record.member.profileImageUrl,\n            createdDate: record.createdDate,\n            camRecordFileUrl: record.recordUrl,\n            screenRecordFileUrl: '',\n            screenRecordId: -1,\n            seen: record.seenMemberIdGroup?.indexOf(user.id) > -1 ? true : false,\n          });\n        }\n      }\n    }\n    setDailyStandups(dailyStandups.reverse());\n    setDailyStandupLoading(false);\n    let slide = dailyStandups.findIndex((dailyStandup) => !dailyStandup.seen);\n    slide = slide >= 0 ? slide : 0;\n    if (carouselRef && carouselRef.current) {\n      carouselRef.current.goToSlide(slide);\n    }\n  }, [dailyStandups, getTimeDifference, user.id, teamId]);\n\n  const onViewDailyStandups = async (dailyStandup: DailyStandup) => {\n    await viewDailyStandupAPI(dailyStandup.id[0]);\n    await viewDailyStandupAPI(dailyStandup.id[1]);\n    dailyStandup.seen = true;\n  };\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    readAllDailyStandups();\n  }, [loading, readAllDailyStandups]);\n\n  return { carouselRef, dailyStandups, dailyStandupLoading, setDailyStandups, setDailyStandupLoading, onViewDailyStandups };\n};\n\nexport default useDailyStandup;\n","import { useCallback } from 'react';\nimport moment from 'moment';\n\nconst useMoment = () => {\n  const convertDateTime = (datetime: string) => {\n    const convertedDatetime = new Date(datetime);\n    convertedDatetime.setTime(convertedDatetime.getTime() - convertedDatetime.getTimezoneOffset() * 60 * 1000);\n    return convertedDatetime;\n  };\n\n  const getTimeFromNow = (datetime: string) => {\n    return moment(convertDateTime(datetime)).fromNow();\n  };\n\n  const getTimeDifference = useCallback((datetime: string) => {\n    return moment().diff(moment(convertDateTime(datetime)), 'hours');\n  }, []);\n\n  return { convertDateTime, getTimeFromNow, getTimeDifference };\n};\n\nexport default useMoment;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { TDDocument, TDFile, TldrawApp } from '@krapi0314/tldraw';\nimport { useToggle, useRedux } from 'hooks';\nimport {\n  createWhiteboard as createWhiteboardAPI,\n  readWhiteboard as readWhiteboardAPI,\n  readAllWhiteboard as readAllWhiteboardAPI,\n  uploadWhiteboard as uploadWhiteboardAPI,\n  deleteWhiteboard as deleteWhiteboardAPI,\n  updateWhiteboard as updateWhiteboardAPI,\n} from 'helpers';\nimport { Whiteboard } from '../types';\n\nconst useWhiteboard = () => {\n  const [whiteboards, setWhiteboards] = useState<Whiteboard[]>([]);\n  const [whiteboardLoading, setWhiteboardLoading] = useState<boolean>(true);\n  const [whiteboardPageNumber, setWhiteboardPageNumber] = useState<number>(1);\n  const [numberOfWhiteboards, setNumberOfWhiteboards] = useState<number>(0);\n  const [isCreateWhiteboardOpen, toggleCreateWhiteboard] = useToggle();\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const scope = 'team';\n  const teamId = user.currentTeam?.id;\n  const whiteboardPageURL = '/whiteboard?url=';\n\n  const readAllWhiteboard = useCallback(async (pageIndex: number) => {\n    const readAllWhiteboardAPIResponse = await readAllWhiteboardAPI({ teamId, scope, pageIndex });\n    \n    const whiteboards = readAllWhiteboardAPIResponse.data.whiteboards.map((whiteboard): Whiteboard => {\n      return {\n        id: whiteboard.id,\n        title: whiteboard.title,\n        description: whiteboard.description,\n        createdDate: whiteboard.createdDate,\n        lastModifiedDate: whiteboard.lastModifiedDate,\n        scope: whiteboard.scope,\n        author: whiteboard.member.fullname,\n        authorProfileImageUrl: whiteboard.member.profileImageUrl,\n        whiteboardFileUrl: whiteboard.whiteboardUrl,\n      }\n    });\n\n    setWhiteboards(whiteboards);\n    setNumberOfWhiteboards(readAllWhiteboardAPIResponse.data.size_ALL_PAGE);\n    setWhiteboardLoading(false);\n  }, [teamId]);\n\n  useEffect(() => {\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  }, [whiteboardPageNumber, readAllWhiteboard]);\n\n  const onCreateWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\n\n    const createWhiteboardAPIResponse = await createWhiteboardAPI({ title, description, scope, teamId });\n    const { id, preSignedURL } = createWhiteboardAPIResponse.data;\n    const formData = createWhiteboardFormData(id, title);\n    await uploadWhiteboardAPI(preSignedURL, formData);\n    const readWhiteboardAPIResponse = await readWhiteboardAPI(id);\n    window.location.href = whiteboardPageURL + readWhiteboardAPIResponse.data.whiteboardUrl + '&id=' + id;\n  };\n\n  const createWhiteboardFormData = (whiteboardID: string, title: string) => {\n    const document: TDDocument = {\n      id: whiteboardID,\n      name: title,\n      version: TldrawApp.version,\n      pages: {\n        page: {\n          id: 'page',\n          name: 'Page 1',\n          childIndex: 1,\n          shapes: {},\n          bindings: {},\n        },\n      },\n      pageStates: {\n        page: {\n          id: 'page',\n          selectedIds: [],\n          camera: {\n            point: [0, 0],\n            zoom: 1,\n          },\n        },\n      },\n      assets: {},\n    };\n\n    const file: TDFile = {\n      name: document.name || 'New Document',\n      fileHandle: null,\n      document,\n      assets: {},\n    };\n\n    const json = JSON.stringify(file, null, 2);\n\n    const blob = new Blob([json], {\n      type: 'application/vnd.Tldraw+json',\n    });\n\n    const fileToUpload = new File([blob], title);\n\n    const formData = new FormData();\n    formData.append('data', fileToUpload);\n\n    return formData;\n  };\n\n  const onEditWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\n\n    await updateWhiteboardAPI(id, { title, description, scope });\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  };\n\n  const onDeleteWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\n    await deleteWhiteboardAPI(id);\n    const pageIndex = whiteboardPageNumber - 1;\n    readAllWhiteboard(pageIndex);\n  };\n\n  const onPageNumberClick = (e: React.MouseEvent<HTMLElement>) => {\n    setWhiteboardPageNumber(parseInt((e.target as HTMLLIElement).innerText));\n  };\n\n  return {\n    isCreateWhiteboardOpen,\n    whiteboards,\n    whiteboardLoading,\n    whiteboardPageNumber,\n    numberOfWhiteboards,\n    setWhiteboards,\n    setWhiteboardPageNumber,\n    readAllWhiteboard,\n    onCreateWhiteboard,\n    onEditWhiteboard,\n    onDeleteWhiteboard,\n    onPageNumberClick,\n    toggleCreateWhiteboard,\n  };\n};\n\nexport default useWhiteboard;\n","import React, { useState } from 'react';\nimport { useToggle } from 'hooks';\n\nconst useWhiteboardCard = () => {\n  const [isEditOpen, toggleEdit] = useToggle();\n  const [isDeleteOpen, toggleDelete] = useToggle();\n  const [isReadMore, setIsReadMore] = useState(true);\n  const toggleReadMore = () => {\n    setIsReadMore(!isReadMore);\n  };\n\n  const closeModalAfterFunction = (\n    f: (e: React.FormEvent<HTMLFormElement>) => Promise<void>,\n    event: React.FormEvent<HTMLFormElement>,\n    toggle: () => void\n  ) => {\n    f(event);\n    toggle();\n  };\n\n  return { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction };\n};\n\nexport default useWhiteboardCard;\n","import { Card, Dropdown, OverlayTrigger, Tooltip, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { WhiteboardCardProps } from './types';\nimport { useMoment, useWhiteboardCard } from './hooks';\n\nconst whiteboardPageURL = '/whiteboard?url=';\n\nconst WhiteboardCard = ({ whiteboard, onEditWhiteboard, onDeleteWhiteboard }: WhiteboardCardProps) => {\n  const { getTimeFromNow } = useMoment();\n  const { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction } =\n    useWhiteboardCard();\n\n  return (\n    <Card className=\"d-block\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\n            <i className=\"dripicons-dots-3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item>Share</Dropdown.Item>\n            <Dropdown.Item onClick={toggleEdit}>Edit</Dropdown.Item>\n            <Modal show={isEditOpen} onHide={toggleEdit}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleEdit} closeButton>\n                  <h4 className=\"modal-title\">Edit Whiteboard Information</h4>\n                </Modal.Header>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onEditWhiteboard, event, toggleEdit)}>\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mt-3 mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">\n                      Title\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"title\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.title}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"description\" className=\"form-label\">\n                      Description\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"description\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.description}\n                    />\n                  </div>\n\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Edit\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n            <Dropdown.Item>Duplicate</Dropdown.Item>\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\n              Delete\n            </Dropdown.Item>\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleDelete} closeButton>\n                  <h4 className=\"modal-title\">Delete {whiteboard.title}</h4>\n                </Modal.Header>\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\n                  Are you sure you want to delete this whiteboard permanently?\n                </p>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteWhiteboard, event, toggleDelete)}>\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-danger\" type=\"submit\">\n                      Delete\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"mt-0\">\n          <Link to={whiteboardPageURL + whiteboard.whiteboardFileUrl + '&id=' + whiteboard.id} className=\"text-title\">\n            {whiteboard.title.length > 25 ? whiteboard.title.slice(0, 25) + ' ...' : whiteboard.title}\n          </Link>\n        </h4>\n        {whiteboard.description && (\n          <p className=\"font-13 my-3\">\n            {isReadMore ? whiteboard.description.slice(0, 35) : whiteboard.description}\n            {whiteboard.description.length > 35 ? (\n              <span onClick={toggleReadMore} className=\"fw-bold text-info\" role=\"button\">\n                {isReadMore ? ' ...read more' : ' show less'}\n              </span>\n            ) : (\n              ''\n            )}\n          </p>\n        )}\n        <div>\n          <span className=\"font-13\">Author: </span>\n          <OverlayTrigger placement={'bottom'} overlay={<Tooltip>{whiteboard.author}</Tooltip>}>\n            <img src={whiteboard.authorProfileImageUrl} className=\"rounded-circle avatar-xs\" alt={whiteboard.author} />\n          </OverlayTrigger>\n        </div>\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\n          Last modified: {getTimeFromNow(whiteboard.lastModifiedDate)}\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WhiteboardCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useWhiteboard } from './hooks';\n\nconst CreateWhiteboardButton = () => {\n  const { isCreateWhiteboardOpen, toggleCreateWhiteboard, onCreateWhiteboard } = useWhiteboard();\n\n  return (\n    <>\n      <Button onClick={toggleCreateWhiteboard}>\n        <i className=\"mdi mdi-plus\"></i> Create Whiteboard\n      </Button>\n      <Modal show={isCreateWhiteboardOpen} onHide={toggleCreateWhiteboard}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleCreateWhiteboard} closeButton>\n            <h4 className=\"modal-title\">Create a new whiteboard</h4>\n          </Modal.Header>\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateWhiteboard}>\n            <div className=\"mt-3 mb-3\">\n              <label htmlFor=\"title\" className=\"form-label\">\n                Title\n              </label>\n              <input className=\"form-control\" type=\"text\" id=\"title\" maxLength={255} required placeholder=\"Untitled\" />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label\">\n                Description\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"textarea\"\n                id=\"description\"\n                maxLength={255}\n                required\n                placeholder=\"Description\"\n              />\n            </div>\n\n            <div className=\"mb-3 text-center\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateWhiteboardButton;\n","import { Pagination } from 'react-bootstrap';\nimport { WhiteboardPaginationProps } from './types';\n\nconst WhiteboardPagination: React.FC<WhiteboardPaginationProps> = ({\n  whiteboardPageNumber,\n  numberOfWhiteboards,\n  onPageNumberClick,\n}: WhiteboardPaginationProps) => {\n  const whiteboardPerPage = 12;\n  const items = [];\n\n  for (let number = 1; number <= Math.ceil(numberOfWhiteboards / whiteboardPerPage); number++) {\n    items.push(\n      <Pagination.Item key={number.toString()} active={number === whiteboardPageNumber} onClick={onPageNumberClick}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination className=\"mx-auto\">\n      <Pagination.Prev />\n      {items}\n      <Pagination.Next />\n    </Pagination>\n  );\n};\n\nexport default WhiteboardPagination;\n","import { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Whiteboard } from './types';\nimport WhiteboardCard from './WhiteboardCard';\nimport CreateWhiteboardButton from './CreateWhiteboardButton';\nimport WhiteboardPagination from './WhiteboardPagination';\nimport { useWhiteboard } from './hooks';\n\nconst WhiteboardContainer = () => {\n  const {\n    whiteboards,\n    whiteboardLoading,\n    whiteboardPageNumber,\n    numberOfWhiteboards,\n    onPageNumberClick,\n    onDeleteWhiteboard,\n    onEditWhiteboard,\n  } = useWhiteboard();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Whiteboards</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col sm={4}>\n          <CreateWhiteboardButton />\n        </Col>\n        <Col sm={8}>\n          <div className=\"text-sm-end\">\n            <div className=\"btn-group mb-3\">\n              <Button variant=\"primary\">All</Button>\n            </div>\n            <ButtonGroup className=\"mb-3 ms-1\">\n              <Button variant=\"light\">Owned by me</Button>\n              <Button variant=\"light\">Not owned by me</Button>\n            </ButtonGroup>\n          </div>\n        </Col>\n      </Row>\n      {!whiteboardLoading && (\n        <>\n          <Row>\n            {whiteboards.map((whiteboard: Whiteboard) => {\n              return (\n                <Col md={6} xxl={3} key={'wb-' + whiteboard.id}>\n                  <WhiteboardCard\n                    whiteboard={whiteboard}\n                    onEditWhiteboard={onEditWhiteboard}\n                    onDeleteWhiteboard={onDeleteWhiteboard}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n          <Row>\n            <Col className=\"d-flex\">\n              <WhiteboardPagination\n                whiteboardPageNumber={whiteboardPageNumber}\n                numberOfWhiteboards={numberOfWhiteboards}\n                onPageNumberClick={onPageNumberClick}\n              />\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\nexport default WhiteboardContainer;\n","/* eslint-disable import/prefer-default-export */\n\nexport function getRatioDimensions(\n    displayAspectRatio: string,\n    element: HTMLElement\n  ): [number, number] {\n    const [widthSplit, heightSplit] = displayAspectRatio.split(':');\n    const width = parseInt(widthSplit, 10);\n    const height = parseInt(heightSplit, 10);\n  \n    const ratioWidthHeight = width / height;\n    const ratioHeightWidth = height / width;\n  \n    const containerWidth = element.offsetWidth;\n    const containerHeight = element.offsetHeight;\n  \n    if (containerHeight * ratioWidthHeight <= containerWidth) {\n      return [containerHeight * ratioWidthHeight, containerHeight];\n    }\n  \n    return [containerWidth, containerWidth * ratioHeightWidth];\n  }\n  ","import { useRef, useEffect, useCallback } from 'react';\nimport { Tldraw, TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\nimport { Box } from '@chakra-ui/react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  playing: boolean;\n  onMount: (app: TldrawApp) => void;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  videoBookmark: VideoBookmark | null;\n};\n\nexport default function Drawing({ playing, onMount, scale, video, setVideo, videoBookmark }: Props) {\n  const tlDrawRef = useRef<TldrawApp | null>(null);\n  const outerRef = useRef(null);\n\n  const setVideoBookmarkDrawing = (video: Video, bookmark: VideoBookmark, drawing: object) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, drawing: drawing } : el)),\n    }));\n    if (videoBookmark) {\n      videoBookmark.drawing = drawing;\n    }\n  };\n\n  function handleMount(app: TldrawApp) {\n    tlDrawRef.current = app;\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_mounted');\n    tlDrawRef.current.style({ color: ColorStyle.Red });\n    onMount(app);\n  }\n\n  function handlePersist(app: TldrawApp) {\n    if (videoBookmark === null || playing === true) {\n      return;\n    }\n\n    setVideoBookmarkDrawing(video, videoBookmark, app.document);\n  }\n\n  const clearDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    const tool = tlDrawRef.current.useStore.getState().appState.activeTool;\n    tlDrawRef.current.deleteAll();\n    tlDrawRef.current.selectTool(tool);\n    tlDrawRef.current.toggleToolLock();\n  }, []);\n\n  const rescaleDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_resized');\n  }, [scale]);\n\n  /**\n   * Rescale drawing as parent scales\n   */\n  useEffect(() => {\n    rescaleDrawing();\n  }, [scale, rescaleDrawing]);\n\n  /**\n   * Load video bookmarks\n   */\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (videoBookmark?.drawing && videoBookmark.drawing) {\n      tlDrawRef.current.loadDocument(\n        JSON.parse(JSON.stringify(videoBookmark.drawing)) // we need to load a copy of the document\n      );\n\n      tlDrawRef.current.selectNone();\n      rescaleDrawing();\n    } else {\n      clearDrawing();\n    }\n  }, [clearDrawing, rescaleDrawing, videoBookmark]);\n\n  /**\n   * Clear drawings between time changes if enabled\n   */\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (playing === true) {\n      clearDrawing();\n    }\n  }, [playing, clearDrawing]);\n\n  return (\n    <Box position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" ref={outerRef}>\n      <Tldraw\n        // @ts-ignore\n        onMount={(app: TldrawApp) => handleMount(app)}\n        onPersist={(app: TldrawApp) => handlePersist(app)}\n        showUI={false}\n        style=\"{background-color: transparent !important}\"\n      />\n    </Box>\n  );\n}\n","import * as React from 'react';\n\nimport { Flex, Box, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\n\nimport { TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst colors = {\n  [ColorStyle.White]: '#f0f1f3',\n  [ColorStyle.LightGray]: '#c6cbd1',\n  [ColorStyle.Gray]: '#788492',\n  [ColorStyle.Black]: '#1d1d1d',\n  [ColorStyle.Green]: '#36b24d',\n  [ColorStyle.Cyan]: '#0e98ad',\n  [ColorStyle.Blue]: '#1c7ed6',\n  [ColorStyle.Indigo]: '#4263eb',\n  [ColorStyle.Violet]: '#7746f1',\n  [ColorStyle.Red]: '#ff2133',\n  [ColorStyle.Orange]: '#ff9433',\n  [ColorStyle.Yellow]: '#ffc936',\n};\n\nexport default function DrawingControlsColorSelector({ app }: PropsType) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleColourPick = React.useCallback(\n    (color: ColorStyle) => {\n      app.style({ color });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const swatchesData = Object.entries(colors) as Array<[ColorStyle, string]>;\n\n  const renderedSwatches = swatchesData.map(([key, value]) => {\n    return (\n      <Box\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        backgroundColor={value}\n        cursor=\"pointer\"\n        onClick={() => handleColourPick(key)}\n      />\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Box\n          width=\"2rem\"\n          height=\"2rem\"\n          // @ts-ignore\n          bgColor={colors[currentStyle.color]}\n          cursor=\"pointer\"\n          onClick={handleOpen}\n        />\n      </PopoverTrigger>\n      <PopoverContent width={`${swatchesData.length * 2}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport { Flex, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\nimport { TldrawApp, SizeStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst sizes = {\n  [SizeStyle.Small]: 'S',\n  [SizeStyle.Medium]: 'M',\n  [SizeStyle.Large]: 'L',\n};\n\nexport default function DrawingControlsSizeSelector({ app }: PropsType) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = React.useCallback(\n    (size: SizeStyle) => {\n      app.style({ size });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(sizes) as Array<[SizeStyle, string]>;\n\n  const renderedSwatches = sizesData.map(([key, value]) => {\n    return (\n      <Flex\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        cursor=\"pointer\"\n        onClick={() => handleSizePick(key)}\n        align=\"center\"\n        justify=\"center\"\n        border=\"1px\"\n        borderColor=\"whiteAlpha.400\"\n        background=\"whiteAlpha.200\"\n        padding=\"1rem\">\n        {value}\n      </Flex>\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}>\n          {\n            // @ts-ignore\n            sizes[currentStyle.size].slice(0, 1).toUpperCase()\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 3}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport {\n  Flex,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow,\n  Tooltip,\n  Box,\n} from '@chakra-ui/react';\n\nimport { TldrawApp, DashStyle } from '@krapi0314/tldraw';\n\nimport {\n  Circle as CircleIcon,\n  SquaresFilled as SquaresFilledIcon,\n  CircleDashed as CircleDashedIcon,\n  CircleDotted as CircleDottedIcon,\n} from 'tabler-icons-react';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst dashes = {\n  [DashStyle.Draw]: [<CircleIcon />, 'Line'],\n  [DashStyle.Solid]: [<SquaresFilledIcon />, 'Filled'],\n  [DashStyle.Dashed]: [<CircleDashedIcon />, 'Dashed'],\n  [DashStyle.Dotted]: [<CircleDottedIcon />, 'Dotted'],\n};\n\nexport default function DrawingControlsStyleSelector({ app }: PropsType) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = React.useCallback(\n    (dash: DashStyle) => {\n      app.style({ dash });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(dashes) as Array<[DashStyle, [JSX.Element, string]]>;\n\n  const renderedSwatches = sizesData\n    .filter(([key]) => {\n      return key !== DashStyle.Solid;\n    })\n    .map(([key, [icon, label]]) => {\n      return (\n        <Flex\n          mx={1}\n          my={1}\n          key={key}\n          width=\"3rem\"\n          height=\"2.5rem\"\n          cursor=\"pointer\"\n          onClick={() => handleSizePick(key)}\n          align=\"center\"\n          justify=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          background=\"whiteAlpha.200\"\n          boxSizing=\"border-box\">\n          <Tooltip label={label}>\n            <Box>{icon}</Box>\n          </Tooltip>\n        </Flex>\n      );\n    });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}>\n          {\n            // @ts-ignore\n            dashes[currentStyle.dash][0]\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 2.5}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport { css } from '@emotion/react';\n\nimport { Flex, Box, VStack, IconButton, Tooltip } from '@chakra-ui/react';\nimport { TDShapeType, TDToolType, TldrawApp } from '@krapi0314/tldraw';\nimport {\n  Click as ClickIcon,\n  Pencil as PencilIcon,\n  ArrowUpRight as ArrowUpRightIcon,\n  Rectangle as RectangleIcon,\n  Circle as CircleIcon,\n  Trash as TrashIcon,\n} from 'tabler-icons-react';\n\nimport DrawingControlsColorSelector from './DrawingControlsColorSelector';\nimport DrawingControlsSizeSelector from './DrawingControlsSizeSelector';\nimport DrawingControlsDashSelector from './DrawingControlsDashSelector';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst selectedStyle = css`\n  opacity: 1;\n`;\n\nconst unSelectedStyle = css`\n  opacity: 0.5;\n`;\n\nexport default function DrawingControls({ app }: PropsType) {\n  const activeTool = app.useStore((s) => s.appState.activeTool);\n\n  const selectTool = React.useCallback(\n    (type: TDToolType) => {\n      app.selectTool(type);\n      app.toggleToolLock();\n    },\n    [app]\n  );\n\n  return (\n    <>\n      <Box>\n        <VStack spacing={4}>\n          <Tooltip label=\"Select\" aria-label=\"Select\">\n            <IconButton\n              icon={<ClickIcon />}\n              aria-label=\"Select\"\n              css={activeTool === 'select' ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool('select')}\n            />\n          </Tooltip>\n          <Tooltip label=\"Pencil\" aria-label=\"Pencil\">\n            <IconButton\n              icon={<PencilIcon />}\n              aria-label=\"Pencil\"\n              css={activeTool === TDShapeType.Draw ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Draw)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Arrow\" aria-label=\"Arrow\">\n            <IconButton\n              icon={<ArrowUpRightIcon />}\n              aria-label=\"Arrow\"\n              css={activeTool === TDShapeType.Arrow ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Arrow)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Rectangle\" aria-label=\"Rectangle\">\n            <IconButton\n              icon={<RectangleIcon />}\n              aria-label=\"Rectangle\"\n              css={activeTool === TDShapeType.Rectangle ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Rectangle)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Ellipse\" aria-label=\"Ellipse\">\n            <IconButton\n              icon={<CircleIcon />}\n              aria-label=\"Ellipse\"\n              css={activeTool === TDShapeType.Ellipse ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Ellipse)}\n            />\n          </Tooltip>\n        </VStack>\n      </Box>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <Box>\n            <DrawingControlsColorSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsSizeSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsDashSelector app={app} />\n          </Box>\n        </Box>\n      </Flex>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <IconButton icon={<TrashIcon />} aria-label=\"Arrow\" css={selectedStyle} onClick={() => app.deleteAll()} />\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { usePopper } from 'react-popper';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { Box, Flex, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\n\nimport type { VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  onChangeContent: (content: string) => void;\n  onChangeIcon: (details: VideoBookmarkIcon) => void;\n  currentEmoji: string;\n};\n\nexport default function VideoBookmarkEditor({ bookmark, onChangeContent, onChangeIcon, currentEmoji }: Props) {\n  const [showEmojiPicker, setShowEmojiPicker] = React.useState<boolean>(false);\n  const [referenceElement, setReferenceElement] = React.useState<HTMLDivElement | null>(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement | null>(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'left',\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [20, 20],\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          fallbackPlacements: ['top', 'left', 'bottom', 'right'],\n        },\n      },\n    ],\n  });\n\n  const handleEmojiPicked = React.useCallback(\n    (details) => {\n      setShowEmojiPicker(false);\n      onChangeIcon(details);\n    },\n    [onChangeIcon]\n  );\n\n  /**\n   * Escape closes the emoji picker\n   */\n  useHotkeys(\n    'esc',\n    () => {\n      setShowEmojiPicker(false);\n    },\n    {},\n    [setShowEmojiPicker]\n  );\n\n  return (\n    <form>\n      <FormControl mb={4}>\n        <FormLabel>Icon</FormLabel>\n\n        <Flex\n          align=\"center\"\n          bgColor=\"gray.800\"\n          height=\"10\"\n          justify=\"center\"\n          rounded=\"xl\"\n          width=\"10\"\n          fontSize=\"lg\"\n          cursor=\"pointer\"\n          ref={setReferenceElement}\n          onClick={() => {\n            setShowEmojiPicker(!showEmojiPicker);\n          }}>\n          {currentEmoji}\n        </Flex>\n        {showEmojiPicker && (\n          <Box\n            ref={setPopperElement}\n            zIndex=\"1\"\n            style={styles.popper}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...attributes.popper}>\n            <Picker data={data} onEmojiSelect={(details: VideoBookmarkIcon) => handleEmojiPicked(details)} />\n          </Box>\n        )}\n      </FormControl>\n      <FormControl>\n        <FormLabel>Description</FormLabel>\n        <Textarea\n          value={bookmark.content}\n          onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            onChangeContent(event.target.value);\n          }}\n          autoFocus\n        />\n      </FormControl>\n    </form>\n  );\n}\n","import { css } from '@emotion/react';\n\nimport { Box, Flex, Button, ButtonGroup, Text, Spacer, IconButton } from '@chakra-ui/react';\nimport Draggable from 'react-draggable'; // The default\n\nimport VideoBookmarkForm from './VideoBookmarkForm';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark, VideoBookmarkCoordinates, VideoBookmarkIcon } from './VideoBookmark';\nimport { updateBookmark as updateBookmarkAPI, deleteBookmark as deleteBookmarkAPI } from 'helpers';\nimport React, { useState } from 'react';\n\ntype Props = {\n  bookmark: VideoBookmark | null;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  playing: boolean;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  editingBookmark: boolean;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst dragHandleStyles = css`\n  cursor: move;\n  height: 2rem;\n  background: repeating-linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.05),\n    rgba(255, 255, 255, 0.05) 10px,\n    rgba(255, 255, 255, 0.1) 10px,\n    rgba(255, 255, 255, 0.1) 20px\n  );\n`;\n\nexport default function VideoBookmarkShow({\n  video,\n  bookmark,\n  setActiveBookmark,\n  scale,\n  playing,\n  setCurrentTime,\n  editingBookmark,\n  setEditingBookmark,\n  setVideo,\n}: Props) {\n  if (playing === true) {\n    return null;\n  }\n\n  if (!bookmark) {\n    return null;\n  }\n\n  const [currentEmoji, setCurrentEmoji] = useState<string>(bookmark.icon);\n\n  function handleDelete() {\n    if (bookmark) {\n      deleteVideoBookmark(setVideo, bookmark);\n    }\n    setEditingBookmark(false);\n    setActiveBookmark(null);\n  }\n\n  const deleteVideoBookmark = (setVideo: React.Dispatch<React.SetStateAction<Video>>, bookmark: VideoBookmark) => {\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.filter((innerBookmark) => {\n        return bookmark.id !== innerBookmark.id;\n      }),\n    }));\n    deleteBookmarkAPI(parseInt(bookmark.id));\n  };\n\n  const setVideoBookmarkCoords = (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    bookmark: VideoBookmark,\n    coords: VideoBookmarkCoordinates,\n    scale: number\n  ) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) =>\n        idx === bookmarkIndex ? { ...el, position: { x: coords.x, y: coords.y }, scale: scale } : el\n      ),\n    }));\n  };\n\n  const setVideoBookmarkContent = (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    bookmark: VideoBookmark,\n    content: string\n  ) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, content: content } : el)),\n    }));\n\n    video.bookmarks[bookmarkIndex].content = content;\n    bookmark.content = content;\n  };\n\n  const setVideoBookmarkIcon = (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    bookmark: VideoBookmark,\n    icon: VideoBookmarkIcon\n  ) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    let hex = '';\n    if (icon.native.codePointAt(0) !== undefined) {\n      hex = icon.native.codePointAt(0)!.toString(16);\n    }\n    const iconString = String.fromCodePoint(parseInt('0x' + hex));\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, icon: iconString } : el)),\n    }));\n    bookmark.icon = iconString;\n    setCurrentEmoji(iconString);\n  };\n\n  const offset = scale / bookmark.scale;\n\n  const position = bookmark.position ? { x: bookmark.position.x * offset, y: bookmark.position.y * offset } : undefined;\n\n  const renderedContent = (() => {\n    if (editingBookmark === true) {\n      return (\n        <VideoBookmarkForm\n          onChangeContent={(content) => setVideoBookmarkContent(video, setVideo, bookmark, content)}\n          onChangeIcon={(details) => setVideoBookmarkIcon(video, setVideo, bookmark, details)}\n          bookmark={bookmark}\n          currentEmoji={currentEmoji}\n        />\n      );\n    }\n\n    return (\n      <Text style={{ whiteSpace: 'pre-wrap' }}>\n        {bookmark.icon} {bookmark.content}\n      </Text>\n    );\n  })();\n\n  const renderedPositiveAction = editingBookmark ? (\n    <Button\n      onClick={() => {\n        setEditingBookmark(false);\n        let hex = '';\n        if (bookmark.icon.codePointAt(0) !== undefined) {\n          hex = bookmark.icon.codePointAt(0)!.toString(16);\n        }\n        const emoji = hex;\n        const content = bookmark.content;\n        const time = bookmark.time;\n        const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n        const drawing = JSON.stringify(bookmark.drawing);\n        const scale = bookmark.scale;\n        const author = bookmark.author;\n        updateBookmarkAPI(parseInt(bookmark.id), { emoji, content, time, position, drawing, scale, author });\n      }}>\n      Done\n    </Button>\n  ) : (\n    <Button onClick={() => setEditingBookmark(true)}>Edit</Button>\n  );\n\n  return (\n    <Flex\n      position=\"absolute\"\n      left={0}\n      top={0}\n      right={0}\n      bottom={0}\n      align=\"flex-end\"\n      justify=\"flex-end\"\n      padding=\"4\"\n      pointerEvents=\"none\"\n      zIndex={3}>\n      <Draggable\n        key={bookmark.id}\n        onStop={(_event, data) => setVideoBookmarkCoords(video, setVideo, bookmark, { x: data.x, y: data.y }, scale)}\n        bounds=\"parent\"\n        handle=\"#dragHandle\"\n        position={position}>\n        <Box pointerEvents=\"all\" background=\"blackAlpha.900\" width=\"md\">\n          <Box id=\"dragHandle\" css={dragHandleStyles} />\n          {renderedContent && (\n            <Box padding=\"4\" borderBottom=\"1px\" borderColor=\"whiteAlpha.500\">\n              {renderedContent}\n            </Box>\n          )}\n\n          <Flex padding=\"4\">\n            <Spacer />\n            <ButtonGroup size=\"sm\">\n              <Button onClick={() => handleDelete()} colorScheme=\"red\">\n                Delete\n              </Button>\n              {renderedPositiveAction}\n            </ButtonGroup>\n            <Spacer />\n          </Flex>\n        </Box>\n      </Draggable>\n    </Flex>\n  );\n}\n","import { Text } from '@chakra-ui/react';\n\nexport function secondsToHms(input: number) {\n  const hours = Math.floor(input / 3600);\n  const minutes = Math.floor(input / 60) % 60;\n  const seconds = input % 60;\n\n  return [hours, minutes, seconds]\n    .map((v) => (v < 10 ? `0${v}` : v))\n    .filter((v, i) => v !== '00' || i > 0)\n    .join(':');\n}\n\ntype Props = {\n  currentTime: number;\n  fullDuration: number;\n};\n\nexport default function TimeDisplay({ currentTime, fullDuration }: Props) {\n  return (\n    <Text whiteSpace=\"nowrap\" fontSize=\"sm\" align=\"center\" my=\"auto\" mb=\"1\">\n      {secondsToHms(Math.round(currentTime))} / {secondsToHms(Math.round(fullDuration))}\n    </Text>\n  );\n}\n","import { Box, Tooltip } from '@chakra-ui/react';\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  video: Video;\n  size: 'small' | 'medium';\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setPlaying: React.Dispatch<React.SetStateAction<boolean>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n};\n\nexport default function VideoBookmarkTimeline({\n  video,\n  bookmark,\n  size = 'medium',\n  setCurrentTime,\n  setPlaying,\n  setActiveBookmark,\n}: Props) {\n  function truncateString(str: string, n: number) {\n    if (str.length > n) {\n      return `${str.substring(0, n)}...`;\n    }\n    return str;\n  }\n\n  function handleGoto() {\n    video.el.pause();\n    setPlaying(false);\n    setCurrentTime(bookmark.time);\n    video.el.currentTime = bookmark.time;\n    setActiveBookmark(bookmark);\n  }\n\n  const renderedIcon = (() => {\n    if (bookmark.icon) {\n      return bookmark.icon;\n    }\n\n    return <BookmarkIcon size={size === 'medium' ? 25 : 20} color={size === 'medium' ? '#eee' : '#999'} />;\n  })();\n\n  return (\n    <Tooltip label={`${bookmark.author}: ${truncateString(bookmark.content, 50)}`}>\n      <Box onClick={() => handleGoto()} cursor=\"pointer\">\n        {renderedIcon}\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport { Box, Flex, Slider, SliderFilledTrack, SliderThumb, SliderTrack } from '@chakra-ui/react';\n\nimport VideoBookmarkTimeline from './VideoBookmarkTimeline';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  video: Video;\n  setPlaying: React.Dispatch<React.SetStateAction<boolean>>;\n  fullDuration: number;\n  currentTime: number;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n};\n\nexport default function TimeControl({\n  video,\n  setPlaying,\n  fullDuration,\n  currentTime,\n  setCurrentTime,\n  setActiveBookmark,\n}: Props) {\n  const trackRef = useRef<HTMLDivElement | null>(null);\n  const [renderedCurrentBookmarks, setRenderedCurrentBookmarks] = useState<JSX.Element[]>([]);\n  const [trackDimensions, setTrackDimensions] = useState<DOMRect | null>(null); // tracks the dimensions of the track as it's resized\n\n  function handleSliderChange(time: number) {\n    setCurrentTime(time);\n    video.el.currentTime = time;\n  }\n\n  const setBookmarkButtons = () => {\n    setRenderedCurrentBookmarks(\n      trackDimensions === null || fullDuration === 0\n        ? []\n        : video.bookmarks.map((bookmark) => {\n            const percentage = bookmark.time / fullDuration;\n            const left = trackDimensions.width * percentage;\n            return (\n              <Flex\n                key={bookmark.id}\n                bgColor=\"gray.800\"\n                position=\"absolute\"\n                width=\"2rem\"\n                height=\"2rem\"\n                align=\"center\"\n                justify=\"center\"\n                top=\"-7px\"\n                left={`calc(${left}px - 1rem)`}\n                rounded=\"full\"\n                zIndex=\"1\">\n                <VideoBookmarkTimeline\n                  video={video}\n                  bookmark={bookmark}\n                  size=\"medium\"\n                  setCurrentTime={setCurrentTime}\n                  setPlaying={setPlaying}\n                  setActiveBookmark={setActiveBookmark}\n                />\n              </Flex>\n            );\n          })\n    );\n  };\n\n  useLayoutEffect(() => {\n    function handleResize() {\n      if (trackRef.current === null) {\n        return;\n      }\n\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\n      setBookmarkButtons();\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  useEffect(() => {\n    if (trackDimensions === null && trackRef.current) {\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\n    }\n    setBookmarkButtons();\n  }, [video.bookmarks, fullDuration, trackDimensions]);\n\n  return (\n    <Box position=\"relative\">\n      {renderedCurrentBookmarks}\n\n      <Slider\n        aria-label=\"Time control\"\n        focusThumbOnChange={false}\n        key=\"playing\"\n        max={fullDuration}\n        min={0}\n        onChange={(value: number) => handleSliderChange(value)}\n        step={1 / video.frameRate}\n        value={currentTime}>\n        <SliderTrack ref={trackRef}>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  );\n}\n","import { Box, Flex, SliderTrack, Slider, SliderFilledTrack, SliderThumb } from '@chakra-ui/react';\n\nimport { Volume as VolumeIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\n\ntype Props = {\n  video: Video;\n  setCurrentVolume: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport default function VideoVolume({ video, setCurrentVolume }: Props) {\n  function handleSliderChange(value: number) {\n    setCurrentVolume(value);\n    video.el.volume = value;\n  }\n\n  return (\n    <Flex align=\"center\" width=\"7rem\">\n      <Box mb={1}>\n        <VolumeIcon />\n      </Box>\n      <Slider\n        key=\"playing\"\n        aria-label=\"Video volume control\"\n        value={video.el.volume}\n        min={0}\n        max={1}\n        onChange={(value: number) => handleSliderChange(value)}\n        step={0.01}\n        focusThumbOnChange={false}\n        ml={2}\n        mb={1}>\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Flex>\n  );\n}\n","import { Video } from './Video';\nimport { APICore } from 'helpers/api/apiCore';\n\nconst api = new APICore();\nconst user = api.getLoggedInUser();\n\nexport type VideoBookmarkIcon = {\n  native: string;\n};\n\nexport type VideoBookmarkCoordinates = {\n  x: number;\n  y: number;\n};\n\nexport type VideoBookmark = {\n  id: string;\n  author: string;\n  icon: string;\n  content: string;\n  time: number;\n  position: VideoBookmarkCoordinates | null;\n  drawing: object | null;\n  scale: number;\n  video_id: string;\n};\n\nexport function create(\n  video: Video,\n  icon: string,\n  content: string,\n  time: number,\n  scale: number,\n  drawing: object\n): VideoBookmark {\n  return {\n    content,\n    drawing: JSON.parse(JSON.stringify(drawing)),\n    id: '',\n    icon: icon,\n    position: null,\n    scale,\n    time,\n    video_id: video.id,\n    author: user.fullname\n  };\n}\n","import { TldrawApp } from '@krapi0314/tldraw';\n\nimport { Box, IconButton, Tooltip } from '@chakra-ui/react';\n\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport { create, VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\nimport type { Video } from './Video';\nimport { createBookmark as createBookmarkAPI } from 'helpers';\n\ntype Props = {\n  app: TldrawApp;\n  disabled: boolean;\n  scale: number;\n  video: Video;\n  currentTime: number;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  setPlaying: React.Dispatch<React.SetStateAction<boolean>>;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n};\n\nexport default function VideoBookmarkAdd({\n  app,\n  disabled,\n  scale,\n  video,\n  currentTime,\n  setVideo,\n  setPlaying,\n  setEditingBookmark,\n  setActiveBookmark,\n}: Props) {\n  function handleCreate() {\n    video.el.pause();\n    setPlaying(false);\n    createVideoBookmark(video, setVideo, '🔖', '', currentTime, scale, app.document);\n    setEditingBookmark(true);\n  }\n\n  const createVideoBookmark = async (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    icon: string,\n    content: string,\n    time: number,\n    scale: number,\n    drawing: object\n  ) => {\n    const bookmark = create(video, icon, content, time, scale, drawing);\n    const drawingString = JSON.stringify(drawing);\n    const id = video.id;\n    const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n    let hex = '';\n    if (bookmark.icon.codePointAt(0) !== undefined) {\n      hex = bookmark.icon.codePointAt(0)!.toString(16);\n    }\n\n    const createBookmarkAPIResponse = await createBookmarkAPI({\n      recordId: id,\n      emoji: hex,\n      content,\n      time,\n      position,\n      drawing: drawingString,\n      scale,\n      author: bookmark.author,\n    });\n    bookmark.id = createBookmarkAPIResponse.data.id;\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: [...prevState.bookmarks, bookmark],\n    }));\n    setActiveBookmark(bookmark);\n  };\n\n  return (\n    <Tooltip label=\"Bookmark this moment (active when paused)\">\n      <Box>\n        <IconButton\n          onClick={() => handleCreate()}\n          icon={<BookmarkIcon />}\n          aria-label=\"Bookmark this moment\"\n          disabled={disabled}\n        />\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nimport { css } from '@emotion/react';\nimport { Box, Flex, IconButton, Text, Tooltip } from '@chakra-ui/react';\n\nimport { TldrawApp } from '@krapi0314/tldraw';\n\nimport { getRatioDimensions } from './layout';\nimport Drawing from './Drawing';\nimport DrawingControls from './DrawingControls';\nimport VideoBookmarkShow from './VideoBookmarkShow';\nimport TimeDisplay from './TimeDisplay';\nimport TimeControl from './TimeControl';\nimport VideoVolume from './VideoVolume';\nimport VideoBookmarkAdd from './VideoBookmarkAdd';\nimport { readRecord as readRecordAPI } from 'helpers';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\nimport {\n  PlayerPlay as PlayerPlayIcon,\n  PlayerPause as PlayerPauseIcon,\n  Maximize as MaximizeIcon,\n} from 'tabler-icons-react';\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst DISPLAY_ASPECT_RATIO = '16:9';\nconst FRAME_RATE = 30;\nconst DEFAULT_VOLUME = 0.8;\n\ntype Props = {\n  id: number;\n};\n\n// const VideoPlayer = ({ video: HTMLVideoElement }: Props) => {\nconst VideoPlayer = ({ id }: Props) => {\n  const [app, setApp] = useState<TldrawApp>();\n  const [fullscreen, setFullscreen] = useState<boolean>(false);\n  const [videoDimensions, setVideoDimensions] = useState<[number, number] | null>(null);\n  const [currentTime, setCurrentTime] = useState<number>(0);\n  const [currentVolume, setCurrentVolume] = useState<number>(DEFAULT_VOLUME);\n  const [fullDuration, setFullDuration] = useState<number>(0);\n  const [videoElemLoading, setVideoElemLoading] = useState<boolean>(true);\n  const [videoPlayerLoading, setVideoPlayerLoading] = useState<boolean>(true);\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [editingBookmark, setEditingBookmark] = useState<boolean>(false);\n  const [video, setVideo] = useState<Video>({} as Video);\n  const [bookmarks, setBookmarks] = useState<VideoBookmark[]>(video.bookmarks);\n  const [activeBookmark, setActiveBookmark] = useState<VideoBookmark | null>(null);\n\n  const overlayRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTargetRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTriggerRef = useRef<HTMLButtonElement | null>(null);\n  const videoContainerRef = useRef<HTMLDivElement | null>(null);\n\n  const setupVideoElement = useCallback(async () => {\n    const readRecordAPIResponse = await readRecordAPI(id);\n    const videoData = readRecordAPIResponse.data;\n\n    const el = document.createElement('video');\n    el.src = videoData.recordUrl;\n\n    setVideo({\n      bookmarks: videoData.bookmarks\n        ? videoData.bookmarks.map((b: any) => {\n            return {\n              ...b,\n              drawing: JSON.parse(b.drawing),\n              icon: b.emoji ? String.fromCodePoint(parseInt('0x' + b.emoji)) : '',\n            };\n          })\n        : [],\n      codedWidth: VIDEO_HEIGHT,\n      codedHeight: VIDEO_WIDTH,\n      displayAspectRatio: DISPLAY_ASPECT_RATIO,\n      el: el,\n      filePath: videoData.recordUrl,\n      frameRate: FRAME_RATE,\n      id: videoData.id,\n      name: videoData.title,\n      seeking: false,\n      volume: DEFAULT_VOLUME,\n    });\n    setBookmarks(videoData.bookmarks);\n    setVideoElemLoading(false);\n  }, [id]);\n\n  const getDuration = (url: string, setFullDuration: React.Dispatch<React.SetStateAction<number>>) => {\n    var _player = new Audio(url);\n    _player.addEventListener(\n      'durationchange',\n      function () {\n        if (this.duration != Infinity) {\n          var duration = this.duration;\n          _player.remove();\n          setFullDuration(duration);\n        }\n      },\n      false\n    );\n    _player.load();\n    _player.currentTime = 24 * 60 * 60;\n    _player.volume = 0;\n    _player.play();\n  };\n\n  const setupVideoPlayer = useCallback(() => {\n    if (videoContainerRef.current === null || video.el === undefined) {\n      return;\n    }\n    videoContainerRef.current.innerHTML = '';\n    videoContainerRef.current.appendChild(video.el);\n\n    video.el.volume = video.volume;\n    setCurrentVolume(video.el.volume);\n    getDuration(video.el.src, setFullDuration);\n\n    video.el.ontimeupdate = () => {\n      setCurrentTime(video.el.currentTime);\n    };\n\n    setVideoPlayerLoading(false);\n  }, [video]);\n\n  useEffect(() => {\n    if (overlayRef.current && video.displayAspectRatio) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, [video.displayAspectRatio]);\n\n  useEffect(() => {\n    if (videoElemLoading) {\n      setupVideoElement();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (videoPlayerLoading) {\n      setupVideoPlayer();\n    }\n  }, [videoElemLoading]);\n\n  useEffect(() => {\n    if (overlayRef.current) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, []);\n\n  const playVideo = () => {\n    if (videoContainerRef.current === null) {\n      return;\n    }\n    video.el.play();\n    setPlaying(!playing);\n  };\n\n  const pauseVideo = () => {\n    if (videoContainerRef.current === null) {\n      return;\n    }\n    video.el.pause();\n    setPlaying(!playing);\n  };\n\n  const overlayStyle = css`\n    width: ${VIDEO_WIDTH}px;\n    height: ${VIDEO_HEIGHT}px;\n  `;\n\n  const videoStyle = css`\n    video {\n      width: ${VIDEO_WIDTH}px;\n      height: ${VIDEO_HEIGHT}px;\n    }\n  `;\n\n  const renderedContent = (() => {\n    const renderedDrawingControls = app !== undefined && (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        justify=\"center\"\n        left={0}\n        pointerEvents=\"none\"\n        position=\"absolute\"\n        top={0}\n        zIndex={2}>\n        <Box\n          background=\"gray.900\"\n          borderColor=\"whiteAlpha.500\"\n          borderLeft=\"none\"\n          borderWidth=\"1px\"\n          boxSizing=\"border-box\"\n          padding={4}\n          pointerEvents=\"all\">\n          <DrawingControls app={app} />\n        </Box>\n      </Flex>\n    );\n\n    const renderedDrawing = (\n      <Drawing\n        onMount={(innerApp) => setApp(innerApp)}\n        scale={1}\n        playing={playing}\n        video={video}\n        setVideo={setVideo}\n        videoBookmark={activeBookmark ? activeBookmark : null}\n      />\n    );\n\n    const renderedActiveBookmark = activeBookmark !== undefined && (\n      <VideoBookmarkShow\n        video={video}\n        setVideo={setVideo}\n        bookmark={activeBookmark ? activeBookmark : null}\n        setActiveBookmark={setActiveBookmark}\n        scale={1}\n        playing={playing}\n        setCurrentTime={setCurrentTime}\n        editingBookmark={editingBookmark}\n        setEditingBookmark={setEditingBookmark}\n      />\n    );\n\n    const renderedNavigationControls = (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        boxSizing=\"border-box\"\n        justify=\"center\"\n        left={0}\n        position=\"absolute\"\n        right={0}\n        zIndex={2}>\n        <Flex\n          align=\"center\"\n          background=\"gray.900\"\n          borderBottom=\"none\"\n          borderColor=\"whiteAlpha.500\"\n          borderWidth=\"1px\"\n          minWidth=\"50vw\"\n          p={4}\n          pointerEvents=\"all\">\n          <Tooltip label={playing ? 'Pause' : 'Play'}>\n            <Box mr=\"2\">\n              {!playing && (\n                <IconButton\n                  onClick={() => {\n                    playVideo();\n                    setEditingBookmark(false);\n                    setActiveBookmark(null);\n                  }}\n                  icon={<PlayerPlayIcon />}\n                  aria-label=\"Play\"\n                />\n              )}\n              {playing && <IconButton onClick={() => pauseVideo()} icon={<PlayerPauseIcon />} aria-label=\"Pause\" />}\n            </Box>\n          </Tooltip>\n\n          <Box mx=\"2\">\n            <TimeDisplay currentTime={currentTime} fullDuration={fullDuration} />\n          </Box>\n\n          <Box flexGrow={1} mx=\"2\" minW=\"25vw\">\n            <TimeControl\n              video={video}\n              setPlaying={setPlaying}\n              fullDuration={fullDuration}\n              currentTime={currentTime}\n              setCurrentTime={setCurrentTime}\n              setActiveBookmark={setActiveBookmark}\n            />\n          </Box>\n\n          <Box mx=\"2\">\n            <VideoVolume video={video} setCurrentVolume={setCurrentVolume} />\n          </Box>\n\n          {app && (\n            <Box mx=\"2\">\n              <VideoBookmarkAdd\n                key={video.id}\n                app={app}\n                disabled={!!activeBookmark || editingBookmark || playing}\n                scale={1}\n                video={video}\n                setVideo={setVideo}\n                setPlaying={setPlaying}\n                currentTime={currentTime}\n                setEditingBookmark={setEditingBookmark}\n                setActiveBookmark={setActiveBookmark}\n              />\n            </Box>\n          )}\n\n          <Tooltip label=\"Presentation mode\">\n            <Box ml=\"2\">\n              <IconButton\n                onClick={() => setFullscreen(!fullscreen)}\n                icon={<MaximizeIcon />}\n                aria-label=\"Fullscreen video\"\n                ref={fullscreenTriggerRef}\n              />\n            </Box>\n          </Tooltip>\n        </Flex>\n      </Flex>\n    );\n    return (\n      <Flex direction=\"column\" width=\"100%\" height=\"calc(100vh - 5rem)\" ref={fullscreenTargetRef}>\n        <Flex flexGrow={1} flexShrink={1} overflow=\"hidden\" position=\"relative\">\n          {renderedDrawingControls}\n          {renderedNavigationControls}\n          <Flex align=\"center\" flexGrow={1} flexShrink={1} justifyContent=\"center\" ref={overlayRef} overflow=\"hidden\">\n            <Box position=\"relative\" css={overlayStyle} id=\"overlay\" style={{ touchAction: 'none' }}>\n              {renderedDrawing}\n              {renderedActiveBookmark}\n              <Box css={videoStyle} ref={videoContainerRef} />\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  })();\n  return (\n    <>\n      {videoElemLoading ? (\n        <p>loading</p>\n      ) : (\n        <Flex>\n          <Box width=\"100vw\" bgColor=\"black\">\n            {renderedContent}\n          </Box>\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default VideoPlayer;\n","import { VideoPlayer } from 'components/VideoPlayer';\nimport { Card } from 'react-bootstrap';\nimport { useDailyStandup, useMoment } from './hooks';\nimport { DailyStandup } from './types';\nimport {\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\n\nconst DailyStandupCard = ({ dailyStandup }: { dailyStandup: DailyStandup }) => {\n  const cam_w = 320,\n    cam_h = 240,\n    screen_w = 960,\n    screen_h = 540;\n  const { getTimeFromNow } = useMoment();\n  const { onViewDailyStandups } = useDailyStandup();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Card className=\"d-block me-3\">\n      <Card.Body\n        onClick={() => {\n          // openModalWithClass('modal-full-width');\n          onOpen();\n          onViewDailyStandups(dailyStandup);\n        }}\n        style={{ cursor: 'pointer' }}>\n        <div className={(dailyStandup.seen ? 'opacity-25' : '') + ' text-center'}>\n          <img\n            src={dailyStandup.profileImageUrl}\n            className=\"rounded-circle avatar-lg\"\n            alt={dailyStandup.author}\n            referrerPolicy=\"no-referrer\"\n          />\n        </div>\n        <h4 className={(dailyStandup.seen ? 'text-light' : '') + ' text-center font-weight-bold mt-2'}>\n          {dailyStandup.author}\n        </h4>\n        <p className={(dailyStandup.seen ? 'text-light' : 'text-muted') + ' text-center font-12 mb-1'}>\n          {getTimeFromNow(dailyStandup.createdDate)}\n        </p>\n        <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <VideoPlayer id={dailyStandup.screenRecordId} />\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n        {/* <Modal\n          backdrop=\"static\"\n          show={isViewOpen}\n          onHide={toggleView}\n          dialogClassName={className}\n          size={size}\n          scrollable={scroll}>\n          <Modal.Header onHide={toggleView} closeButton>\n            <h4 className=\"modal-title\">{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</h4>\n          </Modal.Header>\n          <Modal.Body>\n            <video\n              src={dailyStandup.camRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={cam_w}\n              height={cam_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n            <video\n              src={dailyStandup.screenRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={screen_w}\n              height={screen_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n          </Modal.Body>\n        </Modal> */}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DailyStandupCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useModal } from './hooks';\nimport { VideoRecorder } from 'components';\n\nconst CreateRecordButton = () => {\n  const { isOpen: isRecordOpen, size, className, scroll, toggleModal: toggleRecord, openModalWithClass } = useModal();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          openModalWithClass('modal-full-width');\n        }}\n      >\n        <i className=\"mdi mdi-plus\"></i> Record\n      </Button>\n      <Modal show={isRecordOpen} onHide={toggleRecord} dialogClassName={className} size={size} scrollable={scroll}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleRecord} closeButton>\n            <h4 className=\"modal-title\">Record</h4>\n          </Modal.Header>\n          <VideoRecorder />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateRecordButton;\n","import { useToggle } from 'hooks';\nimport { useState } from 'react';\n\nexport default function useModal() {\n  const [isOpen, toggleModal] = useToggle();\n\n  const [size, setSize] = useState<'sm' | 'lg' | 'xl'>();\n  const [className, setClassName] = useState<string>('');\n  const [scroll, setScroll] = useState<boolean>(false);\n\n  // Opens large modal\n  const openModalWithSize = (size: 'sm' | 'lg' | 'xl') => {\n    setSize(size);\n    setClassName('');\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens modal with custom class\n  const openModalWithClass = (className: string) => {\n    setClassName(className);\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens large modal\n  const openModalWithScroll = () => {\n    setScroll(true);\n    setSize('sm');\n    setClassName('');\n    toggleModal();\n  };\n\n  return {\n    isOpen,\n    size,\n    className,\n    scroll,\n    toggleModal,\n    openModalWithSize,\n    openModalWithClass,\n    openModalWithScroll,\n  };\n}\n","import { Row, Col } from 'react-bootstrap';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { useDailyStandup } from './hooks';\nimport { DailyStandup } from './types';\nimport DailyStandupCard from './DailyStandupCard';\nimport CreateRecordButton from './CreateRecordButton';\n\nconst DailyStandupContainer = () => {\n  const { carouselRef, dailyStandups, dailyStandupLoading } = useDailyStandup();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Daily Standups</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <CreateRecordButton />\n        </Col>\n      </Row>\n      <Row>\n        {!dailyStandupLoading && (\n          <Carousel\n            ref={carouselRef}\n            additionalTransfrom={0}\n            arrows\n            centerMode={false}\n            className=\"\"\n            containerClass=\"container\"\n            dotListClass=\"\"\n            draggable\n            focusOnSelect={false}\n            infinite={false}\n            itemClass=\"\"\n            keyBoardControl\n            minimumTouchDrag={80}\n            pauseOnHover\n            renderArrowsWhenDisabled={false}\n            renderButtonGroupOutside={false}\n            renderDotsOutside={false}\n            responsive={{\n              desktop: {\n                breakpoint: {\n                  max: 3000,\n                  min: 1024,\n                },\n                items: 6,\n                partialVisibilityGutter: 40,\n              },\n              mobile: {\n                breakpoint: {\n                  max: 464,\n                  min: 0,\n                },\n                items: 1,\n                partialVisibilityGutter: 30,\n              },\n              tablet: {\n                breakpoint: {\n                  max: 1024,\n                  min: 464,\n                },\n                items: 2,\n                partialVisibilityGutter: 30,\n              },\n            }}\n            rewind={false}\n            rewindWithAnimation={false}\n            rtl={false}\n            shouldResetAutoplay\n            showDots={false}\n            sliderClass=\"\"\n            slidesToSlide={1}\n          >\n            {dailyStandups.map((dailyStandup: DailyStandup, i: number) => {\n              return (\n                <div key={i}>\n                  <DailyStandupCard dailyStandup={dailyStandup} />\n                </div>\n              );\n            })}\n          </Carousel>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default DailyStandupContainer;\n","import WhiteboardContainer from './WhiteboardContainer';\nimport DailyStandupContainer from './DailyStandupContainer';\nimport { useRedux } from 'hooks';\n\nconst Dashboard = () => {\n  const { appSelector } = useRedux();\n\n  const { loading } = appSelector((state) => ({\n    loading: state.Auth.loading,\n  }));\n\n  return loading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : (\n    <>\n      <DailyStandupContainer />\n      <hr />\n      <WhiteboardContainer />\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["useState","dailyStandups","setDailyStandups","dailyStandupLoading","setDailyStandupLoading","appSelector","useRedux","carouselRef","useRef","getTimeDifference","useMoment","state","loading","Auth","user","teamId","currentTeam","id","readAllDailyStandups","useCallback","readAllDailyStandupsAPI","scope","pageIndex","readAllDailyStandupsAPIResponse","data","records","record","createdDate","seenMemberIdGroup","indexOf","at","author","member","fullname","title","slice","lastIndexOf","push","screenRecordId","screenRecordFileUrl","recordUrl","camRecordFileUrl","profileImageUrl","seen","reverse","slide","findIndex","dailyStandup","current","goToSlide","onViewDailyStandups","viewDailyStandupAPI","useEffect","convertDateTime","datetime","convertedDatetime","Date","setTime","getTime","getTimezoneOffset","moment","diff","getTimeFromNow","fromNow","whiteboards","setWhiteboards","whiteboardLoading","setWhiteboardLoading","whiteboardPageNumber","setWhiteboardPageNumber","numberOfWhiteboards","setNumberOfWhiteboards","useToggle","isCreateWhiteboardOpen","toggleCreateWhiteboard","readAllWhiteboard","readAllWhiteboardAPI","readAllWhiteboardAPIResponse","map","whiteboard","description","lastModifiedDate","authorProfileImageUrl","whiteboardFileUrl","whiteboardUrl","size_ALL_PAGE","onCreateWhiteboard","event","preventDefault","target","elements","namedItem","value","createWhiteboardAPI","createWhiteboardAPIResponse","preSignedURL","formData","createWhiteboardFormData","uploadWhiteboardAPI","readWhiteboardAPI","readWhiteboardAPIResponse","window","location","href","whiteboardID","document","name","version","TldrawApp","pages","page","childIndex","shapes","bindings","pageStates","selectedIds","camera","point","zoom","assets","file","fileHandle","json","JSON","stringify","blob","Blob","type","fileToUpload","File","FormData","append","onEditWhiteboard","updateWhiteboardAPI","onDeleteWhiteboard","deleteWhiteboardAPI","onPageNumberClick","e","parseInt","innerText","isEditOpen","toggleEdit","isDeleteOpen","toggleDelete","isReadMore","setIsReadMore","toggleReadMore","closeModalAfterFunction","f","toggle","useWhiteboardCard","Card","className","Dropdown","align","variant","as","onClick","Modal","show","onHide","closeButton","onSubmit","htmlFor","maxLength","required","placeholder","to","length","role","OverlayTrigger","placement","overlay","Tooltip","src","alt","useWhiteboard","Button","items","number","Math","ceil","Pagination","active","toString","Row","Col","sm","ButtonGroup","md","xxl","getRatioDimensions","displayAspectRatio","element","split","widthSplit","heightSplit","width","height","ratioWidthHeight","ratioHeightWidth","containerWidth","offsetWidth","containerHeight","offsetHeight","Drawing","playing","onMount","scale","video","setVideo","videoBookmark","tlDrawRef","outerRef","handleMount","app","setCamera","style","color","ColorStyle","handlePersist","bookmark","drawing","bookmarkIndex","bookmarks","innerBookmark","prevState","el","idx","setVideoBookmarkDrawing","clearDrawing","tool","useStore","getState","appState","activeTool","deleteAll","selectTool","toggleToolLock","rescaleDrawing","loadDocument","parse","selectNone","position","top","left","right","bottom","ref","onPersist","showUI","colors","DrawingControlsColorSelector","React","isOpen","setIsOpen","currentStyle","s","handleColourPick","swatchesData","Object","entries","renderedSwatches","key","mx","my","backgroundColor","cursor","onClose","bgColor","sizes","SizeStyle","DrawingControlsSizeSelector","handleSizePick","size","sizesData","justify","border","borderColor","background","padding","justifyContent","toUpperCase","dashes","DashStyle","DrawingControlsStyleSelector","dash","filter","icon","label","boxSizing","selectedStyle","css","unSelectedStyle","DrawingControls","spacing","TDShapeType","mt","pt","borderTop","VideoBookmarkEditor","onChangeContent","onChangeIcon","currentEmoji","showEmojiPicker","setShowEmojiPicker","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","modifiers","options","offset","fallbackPlacements","styles","attributes","handleEmojiPicked","details","useHotkeys","mb","rounded","fontSize","zIndex","popper","onEmojiSelect","content","onChange","autoFocus","dragHandleStyles","VideoBookmarkShow","setActiveBookmark","editingBookmark","setCurrentTime","setEditingBookmark","setCurrentEmoji","deleteVideoBookmark","deleteBookmarkAPI","x","y","undefined","renderedContent","setVideoBookmarkContent","hex","native","codePointAt","iconString","String","fromCodePoint","setVideoBookmarkIcon","whiteSpace","renderedPositiveAction","emoji","time","updateBookmarkAPI","pointerEvents","onStop","_event","coords","setVideoBookmarkCoords","bounds","handle","borderBottom","colorScheme","secondsToHms","input","floor","v","i","join","TimeDisplay","currentTime","fullDuration","round","VideoBookmarkTimeline","setPlaying","str","n","renderedIcon","substring","pause","TimeControl","trackRef","renderedCurrentBookmarks","setRenderedCurrentBookmarks","trackDimensions","setTrackDimensions","setBookmarkButtons","percentage","useLayoutEffect","handleResize","getBoundingClientRect","addEventListener","removeEventListener","focusThumbOnChange","max","min","step","frameRate","VideoVolume","setCurrentVolume","volume","handleSliderChange","ml","APICore","getLoggedInUser","create","video_id","VideoBookmarkAdd","disabled","createVideoBookmark","drawingString","createBookmarkAPI","recordId","createBookmarkAPIResponse","VIDEO_WIDTH","setApp","fullscreen","setFullscreen","setVideoDimensions","setFullDuration","videoElemLoading","setVideoElemLoading","videoPlayerLoading","setVideoPlayerLoading","setBookmarks","activeBookmark","overlayRef","fullscreenTargetRef","fullscreenTriggerRef","videoContainerRef","setupVideoElement","readRecordAPI","readRecordAPIResponse","videoData","createElement","b","codedWidth","codedHeight","filePath","seeking","setupVideoPlayer","innerHTML","appendChild","url","_player","Audio","this","duration","Infinity","remove","load","play","getDuration","ontimeupdate","dimensions","overlayStyle","videoStyle","renderedDrawingControls","borderLeft","borderWidth","renderedDrawing","innerApp","renderedActiveBookmark","renderedNavigationControls","minWidth","p","mr","flexGrow","minW","direction","flexShrink","overflow","touchAction","useDailyStandup","useDisclosure","onOpen","referrerPolicy","toggleModal","setSize","setClassName","scroll","setScroll","openModalWithSize","openModalWithClass","openModalWithScroll","useModal","isRecordOpen","toggleRecord","dialogClassName","scrollable","additionalTransfrom","arrows","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","pauseOnHover","renderArrowsWhenDisabled","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","partialVisibilityGutter","mobile","tablet","rewind","rewindWithAnimation","rtl","shouldResetAutoplay","showDots","sliderClass","slidesToSlide"],"sourceRoot":""}