{"version":3,"file":"static/js/172.26abc67a.chunk.js","mappings":"oKA4DA,IAlDkB,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,SACnB,GAAkCC,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,SACR,GAAkCC,EADlC,EAAkBA,cAC4B,SAACC,GAAD,MAAY,CACxDC,SAAUD,EAAME,KAAKD,SACrBE,YAAaH,EAAME,KAAKC,gBAFlBF,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,YAKlB,OACE,gCACGA,IACC,UAAC,IAAD,CAAUC,UAAU,OAApB,WACE,UAAC,WAAD,CAAiBA,UAAU,QAA3B,WACE,cAAGA,UAAU,aADf,IACgCD,EAAYE,SAE5C,SAAC,SAAD,CAAeD,UAAU,QAAzB,SACGH,EAASK,KAAI,SAACC,GACb,OACE,UAAC,SAAD,CAEEC,QAAS,WACPV,GAASW,EAAAA,EAAAA,IAASF,EAAKG,MAEzBC,OAAQJ,EAAKG,KAAOP,EAAYO,GALlC,WAME,cAAGN,UAAU,KANf,IAMwBG,EAAKF,OALtBE,EAAKG,aAYtB,iBAAKN,UAAU,kBAAf,WACE,UAAC,KAAD,CAAMQ,GAAG,iBAAiBR,UAAwB,aAAbR,EAA0B,sBAAwB,GAAvF,WACE,cAAGQ,UAAU,sDADf,uBAGA,UAAC,KAAD,CAAMQ,GAAG,iBAAiBR,UAAwB,SAAbR,EAAsB,sBAAwB,GAAnF,WACE,cAAGQ,UAAU,4DADf,mBAGA,UAAC,KAAD,CAAMQ,GAAG,wBAAT,WACE,cAAGR,UAAU,2CADf,qBAIF,gBAAKA,UAAU,OAAf,UACE,yBACE,iBAAMA,UAAU,sDAAhB,2B,kLC1BV,EAvBmC,WACjC,OAA8CS,EAAAA,EAAAA,KAAtCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,oBAEtB,OACE,kBAAMC,SAAUD,EAAhB,WACE,SAAC,KAAD,CACEE,MAAM,YACNC,KAAK,OACLb,KAAK,WACLc,eAAgB,OAEhBC,YAAaN,EACbO,UAAQ,GAFJ,aAIN,SAAC,KAAD,CAAWJ,MAAM,eAAeC,KAAK,OAAOb,KAAK,cAAcc,eAAgB,QAAY,gBAC3F,SAAC,KAAD,CAAWF,MAAM,OAAOC,KAAK,OAAOb,KAAK,OAAOc,eAAgB,QAAY,SAC5E,SAACG,EAAA,EAAD,CAAQC,MAAM,UAAUL,KAAK,SAA7B,8BCgCN,EAjDoC,WAClC,OACEL,EAAAA,EAAAA,KADMW,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,qBAAsBC,EAAvD,EAAuDA,mBAAoBC,EAA3E,EAA2EA,2BAG3E,OACE,iCACE,iBAAKC,MAAO,CAAEC,OAAQ,IAAKC,SAAU,YAArC,WACE,cAAG3B,UAAU,OAAOyB,MAAO,CAAEG,WAAY,OAAzC,4BAGA,iBAAK5B,UAAU,oBAAf,WACE,gBACE6B,IAAKT,EACLU,IAAI,kBACJ9B,UAAU,0BACVyB,MAAO,CAAEE,SAAU,WAAYI,MAAO,IAAKL,OAAQ,IAAKM,OAAQ,WAChEC,eAAe,iBAEjB,kBACEnB,KAAK,OAELoB,OAAO,YACPT,MAAO,CAAEU,QAAS,QAClBlC,KAAK,eACLmC,SAAUd,EACVe,IAAKhB,KAEP,gBACErB,UAAU,kBACVI,QAAS,WACHiB,EAAUiB,SACZjB,EAAUiB,QAAQC,SAJxB,UAQE,gBAAKvC,UAAU,eAAf,sCAIN,SAACkB,EAAA,EAAD,CAAQlB,UAAU,OAAOI,QAASmB,EAAlC,mBAGA,SAACL,EAAA,EAAD,CAAQlB,UAAU,oBAAoBI,QAASoB,EAA/C,wBCUN,EAhDyB,WACvB,OACE,iCACE,SAACgB,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,gBAAKzC,UAAU,iBAAf,UACE,eAAIA,UAAU,aAAd,6BAIN,SAACwC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,UAACA,EAAA,OAAD,YACE,gBAAK1C,UAAU,kBAAf,UACE,SAAC2C,EAAA,EAAD,CAAWnD,SAAS,gBAGtB,iBAAKQ,UAAU,mBAAf,WACE,eAAIA,UAAU,OAAd,0CACA,UAACwC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,SAAC,EAAD,OAEF,SAACH,EAAA,EAAD,CAAKG,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAA5B,UACE,SAAC,EAAD,sBAQd,SAAC,KAAD,CACEnB,SAAS,gBACToB,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,S,kLC6CpB,EApF4B,WAC1B,IAEQC,GAAS5D,GAFOF,EAAAA,EAAAA,MAAhBE,cAEqB,SAACC,GAAD,MAAY,CACvC2D,KAAM3D,EAAM4D,KAAKD,SADXA,KAIR,GAAwCE,EAAAA,EAAAA,UAAiBF,EAAKG,UAA9D,eAAOhD,EAAP,KAAqBiD,EAArB,KACA,GAAwCF,EAAAA,EAAAA,UAAiBF,EAAKK,iBAA9D,eAAOxC,EAAP,KAAqByC,EAArB,KACA,GAAgDJ,EAAAA,EAAAA,YAAhD,eAAOK,EAAP,KAAyBC,EAAzB,KAEM1C,GAAY2C,EAAAA,EAAAA,QAAyB,MAErCrD,EAAmB,mCAAG,WAAOsD,GAAP,8EAC1BA,EAAEC,iBACIR,EAAaO,EAAEE,OAA2BC,SAASC,UAAU,YAAiCC,MACnF,GAHS,UAIpBC,EAAAA,EAAAA,IAAqB,CAAEb,SAAAA,EAAUc,SADtB,KAHS,OAK1Bb,EAAgBD,GAChBH,EAAKG,SAAWA,EAChBe,eAAeC,QAAQ,gBAAiBC,KAAKC,UAAUrB,IACtDU,EAAEE,OAA2BU,QAC9BC,IAT0B,4CAAH,sDA+BnBvD,EAAkB,mCAAG,WAAO0C,GAAP,4EACzBA,EAAEC,iBACGJ,EAFoB,kEAKqBiB,EAAAA,EAAAA,MALrB,cAKjBC,EALiB,OAMjBC,EAAeD,EAA8BE,KAAKC,aANjC,WAOjBC,EAAAA,EAAAA,IAAsBH,EAAcnB,GAPnB,QAQvBuB,IARuB,4CAAH,sDAiBlBP,EAAmB,kBAAMQ,EAAAA,EAAAA,KAAM,0EAE/BD,EAAoB,kBACxBC,EAAAA,EAAAA,KACE,gEAEE,kBAFF,0DAOJ,MAAO,CACL5E,aAAAA,EACAU,aAAAA,EACA0C,iBAAAA,EACAzC,UAAAA,EACAV,oBAAAA,EACAW,qBArD2B,SAAC2C,GAC5B,GAAKA,EAAEE,OAAOoB,MAAd,CAIExB,EAAoBE,EAAEE,OAAOoB,MAAM,IAGrC,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACY,IAAtBF,EAAOG,YACT9B,EAAgB2B,EAAOI,SAI3BJ,EAAOK,cAAc5B,EAAEE,OAAOoB,MAAM,SAdlC1B,EAAgBN,EAAKK,kBAoDvBrC,mBAAAA,EACAC,2BAxBiC,WACjCqC,EAAgBN,EAAKK,iBACrBG,EAAoB,S,qBC6FxB,EArJwB,WACtB,OAAkCtE,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,SAER,GAA8BC,EAF9B,EAAkBA,cAEwB,SAACC,GAAD,MAAY,CACpD2D,KAAM3D,EAAM4D,KAAKD,KACjBxD,YAAaH,EAAME,KAAKC,gBAFlBwD,EAAR,EAAQA,KAAMxD,EAAd,EAAcA,YAKd,GAA8B0D,EAAAA,EAAAA,WAAkB,GAAhD,eAAOqC,EAAP,KAAgBC,EAAhB,KACA,GAAwCtC,EAAAA,EAAAA,UAAQ,OAAS1D,QAAT,IAASA,OAAT,EAASA,EAAaiG,YAAtE,eAAO5E,EAAP,KAAqByC,EAArB,KACA,GAA0CJ,EAAAA,EAAAA,YAA1C,eAAOwC,EAAP,KAAsBC,EAAtB,KACA,GAAqCC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAqBC,EAArB,KAEMhF,GAAY2C,EAAAA,EAAAA,QAAyB,OAE3CsC,EAAAA,EAAAA,YAAU,WACJvG,GACFgG,GAAW,KAEZ,KAEHO,EAAAA,EAAAA,YAAU,WACRzC,EAAe,OAAC9D,QAAD,IAACA,OAAD,EAACA,EAAaiG,cAC5B,CAACjG,IAEJ,IAAMwG,EAAY,mCAAG,WAAOtC,GAAP,yEACnBA,EAAEC,iBACIjE,EAASgE,EAAEE,OAA2BC,SAASC,UAAU,QAA6BC,MACtFkC,EAAOvG,EAAKwG,MAAM,EAAG,GAAKC,KAAKC,MACrCjH,GAASkH,EAAAA,EAAAA,IAAW3G,EAAMuG,IAJP,2CAAH,sDAOZK,EAAgB,mCAAG,WAAO5C,GAAP,0EACvBA,EAAEC,iBACGnE,EAFkB,iDAKjBE,EAASgE,EAAEE,OAA2BC,SAASC,UAAU,QAA6BC,MAC5F5E,GAASoH,EAAAA,EAAAA,IAAW/G,EAAYO,GAAIL,IACnCgE,EAAEE,OAA2BU,QAC9BC,IARuB,2CAAH,sDA8BhBiC,EAAe,mCAAG,WAAO9C,GAAP,4EACtBA,EAAEC,iBACG+B,GAAkBlG,EAFD,kEAKqBiH,EAAAA,EAAAA,IAAmBjH,EAAYO,IALpD,cAKd2G,EALc,OAMdhC,EAAegC,EAA2B/B,KAAKC,aANjC,WAOd+B,EAAAA,EAAAA,IAAmBjC,EAAcgB,GAPnB,QAQpBvG,GAASW,EAAAA,EAAAA,IAASN,EAAYO,KAC9B+E,IAToB,4CAAH,sDAkBf8B,EAAQ,mCAAG,WAAOlD,GAAP,4EACfA,EAAEC,iBACGnE,EAFU,wDAKTqH,EAAUnD,EAAEE,OAA2BC,SAASC,UAAU,SAA8BC,MACxF+C,EAA6B,CACjCC,SAAU,KACVC,YAAaH,GARA,UAUTI,EAAAA,EAAAA,IAAgBzH,EAAYO,GAAI+G,GAVvB,OAWdpD,EAAEE,OAA2BU,QAC9B4C,EAAiBL,GAZF,2CAAH,sDAoBRtC,EAAmB,YACvBQ,EAAAA,EAAAA,KAAM,sEAGFD,EAAoB,kBACxBC,EAAAA,EAAAA,KACE,4DAEE,kBAFF,0DAOEmC,EAAmB,SAACL,GAAD,OACvB9B,EAAAA,EAAAA,KACE,kDACqB,uBAAI8B,IADzB,SAcJ,MAAO,CACLtB,QAAAA,EACA1E,aAAAA,EACAsG,aAAAA,EACAzB,cAAAA,EACA5E,UAAAA,EACA+E,aAAAA,EACAvC,gBAAAA,EACA0C,aAAAA,EACAM,iBAAAA,EACAc,kBAhGwB,SAAC1D,GACzB,GAAKA,EAAEE,OAAOoB,MAAd,CAIEW,EAAiBjC,EAAEE,OAAOoB,MAAM,IAGlC,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACY,IAAtBF,EAAOG,YACT9B,EAAgB2B,EAAOI,SAI3BJ,EAAOK,cAAc5B,EAAEE,OAAOoB,MAAM,SAdlC1B,EAAe,OAAC9D,QAAD,IAACA,OAAD,EAACA,EAAaiG,aA+F/Be,gBAAAA,EACAa,wBAlE8B,WAC9B/D,EAA2B,OAAX9D,QAAW,IAAXA,GAAAA,EAAaiG,WAAb,OAA0BjG,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAaiG,WAAa0B,GACpExB,EAAiB,OAiEjBiB,SAAAA,EACAU,YAhDkB,SAAC5D,GACnBA,EAAEC,iBACFxE,GAASoI,EAAAA,EAAAA,GAAU/H,EAAYO,GAAIiD,EAAKjD,MA+CxC+F,aAAAA,EACA0B,wBAzB8B,SAC9BC,EACAC,EACAC,GAEAF,EAAEC,GACFC,Q,qCCxIAC,EAAU,SAAiB9F,GAC7B,OAAQA,GAAsB,oBAARA,EAA2B,SAAUiC,GACzDjC,EAAIC,QAAUgC,GAD2BjC,GAoC7C,IANA,SAAuB+F,EAAMC,GAC3B,OAAOC,EAAAA,EAAAA,UAAQ,WACb,OA3BG,SAAmBF,EAAMC,GAC9B,IAAIE,EAAIJ,EAAQC,GACZI,EAAIL,EAAQE,GAChB,OAAO,SAAU/D,GACXiE,GAAGA,EAAEjE,GACLkE,GAAGA,EAAElE,IAsBFmE,CAAUL,EAAMC,KACtB,CAACD,EAAMC,M,oCClCDK,GAAmB,EACnBC,GAAgB,EAE3B,IACE,IAAIC,EAAU,CACRC,cACF,OAAOH,GAAmB,GAGxBI,WAEF,OAAOH,EAAgBD,GAAmB,IAK1CK,EAAAA,IACFC,OAAOC,iBAAiB,OAAQL,EAASA,GACzCI,OAAOE,oBAAoB,OAAQN,GAAS,IAE9C,MAAO3E,IAiCT,KArBA,SAA0BkF,EAAMC,EAAWC,EAAST,GAClD,GAAIA,GAA8B,mBAAZA,IAA0BD,EAAe,CAC7D,IAAIG,EAAOF,EAAQE,KACfQ,EAAUV,EAAQU,QAClBC,EAAiBF,GAEhBV,GAAiBG,IACpBS,EAAiBF,EAAQG,QAAU,SAASC,EAAYxB,GACtDyB,KAAKR,oBAAoBE,EAAWK,EAAaH,GACjDD,EAAQM,KAAKD,KAAMzB,IAGrBoB,EAAQG,OAASD,GAGnBJ,EAAKF,iBAAiBG,EAAWG,EAAgBb,EAAmBE,EAAUU,GAGhFH,EAAKF,iBAAiBG,EAAWC,EAAST,K,oBCpD5C,MAAoC,qBAAXI,SAA0BA,OAAOY,WAAYZ,OAAOY,SAASC,gB,+CCUtF,IAPA,SAAgBV,EAAMC,EAAWC,EAAST,GAExC,OADAK,EAAAA,EAAAA,IAAiBE,EAAMC,EAAWC,EAAST,GACpC,YACLM,EAAAA,EAAAA,GAAoBC,EAAMC,EAAWC,EAAST,M,sBCDnC,SAASkB,EAAcX,GACpC,OAAOA,GAAQA,EAAKW,eAAiBF,S,qDCWvC,IATA,SAA6BT,EAAMC,EAAWC,EAAST,GACrD,IAAIU,EAAUV,GAA8B,mBAAZA,EAAwBA,EAAQU,QAAUV,EAC1EO,EAAKD,oBAAoBE,EAAWC,EAASC,GAEzCD,EAAQG,QACVL,EAAKD,oBAAoBE,EAAWC,EAAQG,OAAQF,K","sources":["pages/settings/LeftPanel.tsx","pages/settings/PersonalInfoForm.tsx","pages/settings/PersonalImageForm.tsx","pages/settings/PersonalSettings.tsx","pages/settings/hooks/usePersonalSettings.tsx","pages/settings/hooks/useTeamSettings.tsx","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Team } from './types';\nimport { Dropdown } from 'react-bootstrap';\nimport { useRedux } from 'hooks';\nimport { readTeam } from 'redux/actions';\n\ntype LeftPanelProps = {\n  selected: string;\n};\n\nconst LeftPanel = ({ selected }: LeftPanelProps) => {\n  const { dispatch, appSelector } = useRedux();\n  const { teamList, currentTeam } = appSelector((state) => ({\n    teamList: state.Team.teamList,\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  return (\n    <>\n      {currentTeam && (\n        <Dropdown className=\"mb-3\">\n          <Dropdown.Toggle className=\"w-100\">\n            <i className=\"mdi me-1\"></i> {currentTeam.name}\n          </Dropdown.Toggle>\n          <Dropdown.Menu className=\"w-100\">\n            {teamList.map((team: Team) => {\n              return (\n                <Dropdown.Item\n                  key={team.id}\n                  onClick={() => {\n                    dispatch(readTeam(team.id));\n                  }}\n                  active={team.id === currentTeam.id ? true : false}>\n                  <i className=\"\"></i> {team.name}\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <div className=\"email-menu-list\">\n        <Link to=\"/settings/user\" className={selected === 'personal' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-outline font-18 align-middle me-2\"></i>Personal Profile\n        </Link>\n        <Link to=\"/settings/team\" className={selected === 'team' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-group-outline font-18 align-middle me-2\"></i>Team Profile\n        </Link>\n        <Link to=\"/settings/create-team\">\n          <i className=\"mdi mdi-plus font-18 align-middle me-2\"></i>Create Team\n        </Link>\n      </div>\n      <div className=\"mt-4\">\n        <h4>\n          <span className=\"badge rounded-pill p-1 px-2 badge-secondary-lighten\">FREE</span>\n        </h4>\n      </div>\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { Button } from 'react-bootstrap';\nimport { FormInput } from 'components';\nimport { usePersonalSettings } from './hooks';\n\nconst PersonalInfoForm: React.FC = () => {\n  const { userFullname, onSubmitProfileInfo } = usePersonalSettings();\n\n  return (\n    <form onSubmit={onSubmitProfileInfo}>\n      <FormInput\n        label=\"Full Name\"\n        type=\"text\"\n        name=\"fullname\"\n        containerClass={'mb-3'}\n        key=\"fullname\"\n        placeholder={userFullname}\n        required\n      />\n      <FormInput label=\"Company Name\" type=\"text\" name=\"companyName\" containerClass={'mb-3'} key=\"companyName\" />\n      <FormInput label=\"Role\" type=\"text\" name=\"role\" containerClass={'mb-3'} key=\"role\" />\n      <Button color=\"primary\" type=\"submit\">\n        Save Changes\n      </Button>\n    </form>\n  );\n};\n\nexport default PersonalInfoForm;\n","import { Button } from 'react-bootstrap';\nimport { usePersonalSettings } from './hooks';\n\nconst PersonalImageForm: React.FC = () => {\n  const { previewImage, fileInput, onChangeProfileImage, onSaveProfileImage, onCancelChangeProfileImage } =\n    usePersonalSettings();\n\n  return (\n    <>\n      <div style={{ height: 190, position: 'relative' }}>\n        <p className=\"mb-1\" style={{ fontWeight: '600' }}>\n          Profile Image\n        </p>\n        <div className=\"overlay-container\">\n          <img\n            src={previewImage}\n            alt=\"profile preview\"\n            className=\"rounded ratio ratio-1x1\"\n            style={{ position: 'absolute', width: 150, height: 150, cursor: 'pointer' }}\n            referrerPolicy=\"no-referrer\"\n          />\n          <input\n            type=\"file\"\n            // accept='image/jpg, image/png, image/jpeg'\n            accept=\"image/png\"\n            style={{ display: 'none' }}\n            name=\"profileImage\"\n            onChange={onChangeProfileImage}\n            ref={fileInput}\n          />\n          <div\n            className=\"overlay rounded\"\n            onClick={() => {\n              if (fileInput.current) {\n                fileInput.current.click();\n              }\n            }}\n          >\n            <div className=\"overlay-text\">click to upload</div>\n          </div>\n        </div>\n      </div>\n      <Button className=\"me-2\" onClick={onSaveProfileImage}>\n        Save\n      </Button>\n      <Button className=\"btn btn-secondary\" onClick={onCancelChangeProfileImage}>\n        Cancel\n      </Button>\n    </>\n  );\n};\n\nexport default PersonalImageForm;\n","import { Row, Col, Card } from 'react-bootstrap';\nimport LeftPanel from './LeftPanel';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PersonalInfoForm from './PersonalInfoForm';\nimport PersonalImageForm from './PersonalImageForm';\n\nconst PersonalSettings = () => {\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Settings</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <div className=\"page-aside-left\">\n                <LeftPanel selected=\"personal\" />\n              </div>\n\n              <div className=\"page-aside-right\">\n                <h4 className=\"mb-3\">Change Personal Information</h4>\n                <Row>\n                  <Col md={7}>\n                    <PersonalInfoForm />\n                  </Col>\n                  <Col md={{ span: 3, offset: 2 }}>\n                    <PersonalImageForm />\n                  </Col>\n                </Row>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\n\nexport default PersonalSettings;\n","import { toast } from 'react-toastify';\nimport {\n  updateProfileInfo as updateProfileInfoAPI,\n  createProfileImage as createProfileImageAPI,\n  uploadProfileImage as uploadProfileImageAPI,\n} from 'helpers';\nimport { APICore } from 'helpers/api/apiCore';\nimport { useRef, useState } from 'react';\nimport { useRedux } from 'hooks';\n\nconst usePersonalSettings = () => {\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const [userFullname, setUserFullname] = useState<string>(user.fullname);\n  const [previewImage, setPreviewImage] = useState<string>(user.profileImageUrl);\n  const [profileImageFile, setProfileImageFile] = useState<null | File>();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const onSubmitProfileInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const fullname = ((e.target as HTMLFormElement).elements.namedItem('fullname') as HTMLInputElement).value;\n    const timezone = '';\n    await updateProfileInfoAPI({ fullname, timezone });\n    setUserFullname(fullname);\n    user.fullname = fullname;\n    sessionStorage.setItem('asyncrum_user', JSON.stringify(user));\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(user.profileImageUrl);\n      return;\n    } else {\n      setProfileImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveProfileImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!profileImageFile) {\n      return;\n    } else {\n      const createProfileImageAPIResponse = await createProfileImageAPI();\n      const presignedURL = createProfileImageAPIResponse.data.preSignedURL;\n      await uploadProfileImageAPI(presignedURL, profileImageFile);\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeProfileImage = () => {\n    setPreviewImage(user.profileImageUrl);\n    setProfileImageFile(null);\n  };\n\n  const changeInfoNotify = () => toast(<div>Personal information changed successfully!</div>);\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Profile image saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  return {\n    userFullname,\n    previewImage,\n    profileImageFile,\n    fileInput,\n    onSubmitProfileInfo,\n    onChangeProfileImage,\n    onSaveProfileImage,\n    onCancelChangeProfileImage,\n  };\n};\n\nexport default usePersonalSettings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useRedux, useToggle } from 'hooks';\nimport { toast } from 'react-toastify';\nimport {\n  createLogoImage as createLogoImageAPI,\n  uploadLogoImage as uploadLogoImageAPI,\n  inviteMember as inviteMemberAPI,\n} from 'helpers';\nimport { createTeam, readTeam, updateTeam, leaveTeam } from 'redux/actions';\nimport { Invitation } from '../types';\nimport defaultImage from 'assets/images/asyncrum-logo-small.png';\n\nconst useTeamSettings = () => {\n  const { dispatch, appSelector } = useRedux();\n\n  const { user, currentTeam } = appSelector((state) => ({\n    user: state.Auth.user,\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [previewImage, setPreviewImage] = useState<string>(currentTeam?.pictureUrl);\n  const [logoImageFile, setLogoImageFile] = useState<null | File>();\n  const [isDeleteOpen, toggleDelete] = useToggle();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (currentTeam) {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    setPreviewImage(currentTeam?.pictureUrl);\n  }, [currentTeam]);\n\n  const onCreateTeam = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    const code = name.slice(0, 3) + Date.now();\n    dispatch(createTeam(name, code));\n  };\n\n  const onSubmitTeamInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!currentTeam) {\n      return;\n    }\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    dispatch(updateTeam(currentTeam.id, name));\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeLogoImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(currentTeam?.pictureUrl);\n      return;\n    } else {\n      setLogoImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveLogoImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!logoImageFile || !currentTeam) {\n      return;\n    } else {\n      const createLogoImageAPIResponse = await createLogoImageAPI(currentTeam.id);\n      const presignedURL = createLogoImageAPIResponse.data.preSignedURL;\n      await uploadLogoImageAPI(presignedURL, logoImageFile);\n      dispatch(readTeam(currentTeam.id));\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeLogoImage = () => {\n    setPreviewImage(currentTeam?.pictureUrl ? currentTeam?.pictureUrl : defaultImage);\n    setLogoImageFile(null);\n  };\n\n  const onInvite = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!currentTeam) {\n      return;\n    }\n    const email = ((e.target as HTMLFormElement).elements.namedItem('email') as HTMLInputElement).value;\n    const invitationData: Invitation = {\n      memberId: null,\n      memberEmail: email,\n    };\n    await inviteMemberAPI(currentTeam.id, invitationData);\n    (e.target as HTMLFormElement).reset();\n    invitationNotify(email);\n  };\n\n  const onLeaveTeam = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(leaveTeam(currentTeam.id, user.id));\n  };\n\n  const changeInfoNotify = () => {\n    toast(<div>Team Information changed successfully!</div>);\n  };\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Team logo saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  const invitationNotify = (email: string) =>\n    toast(\n      <div>\n        Invitation sent to <b>{email}</b>!\n      </div>\n    );\n\n  const closeModalAfterFunction = (\n    f: (e: React.FormEvent<HTMLFormElement>) => void,\n    event: React.FormEvent<HTMLFormElement>,\n    toggle: () => void\n  ) => {\n    f(event);\n    toggle();\n  };\n\n  return {\n    loading,\n    previewImage,\n    defaultImage,\n    logoImageFile,\n    fileInput,\n    isDeleteOpen,\n    setPreviewImage,\n    onCreateTeam,\n    onSubmitTeamInfo,\n    onChangeLogoImage,\n    onSaveLogoImage,\n    onCancelChangeLogoImage,\n    onInvite,\n    onLeaveTeam,\n    toggleDelete,\n    closeModalAfterFunction,\n  };\n};\n\nexport default useTeamSettings;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;"],"names":["selected","useRedux","dispatch","appSelector","state","teamList","Team","currentTeam","className","name","map","team","onClick","readTeam","id","active","to","usePersonalSettings","userFullname","onSubmitProfileInfo","onSubmit","label","type","containerClass","placeholder","required","Button","color","previewImage","fileInput","onChangeProfileImage","onSaveProfileImage","onCancelChangeProfileImage","style","height","position","fontWeight","src","alt","width","cursor","referrerPolicy","accept","display","onChange","ref","current","click","Row","Col","Card","LeftPanel","md","span","offset","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","user","Auth","useState","fullname","setUserFullname","profileImageUrl","setPreviewImage","profileImageFile","setProfileImageFile","useRef","e","preventDefault","target","elements","namedItem","value","updateProfileInfoAPI","timezone","sessionStorage","setItem","JSON","stringify","reset","changeInfoNotify","createProfileImageAPI","createProfileImageAPIResponse","presignedURL","data","preSignedURL","uploadProfileImageAPI","changeImageNotify","toast","files","reader","FileReader","onload","readyState","result","readAsDataURL","loading","setLoading","pictureUrl","logoImageFile","setLogoImageFile","useToggle","isDeleteOpen","toggleDelete","useEffect","onCreateTeam","code","slice","Date","now","createTeam","onSubmitTeamInfo","updateTeam","onSaveLogoImage","createLogoImageAPI","createLogoImageAPIResponse","uploadLogoImageAPI","onInvite","email","invitationData","memberId","memberEmail","inviteMemberAPI","invitationNotify","defaultImage","onChangeLogoImage","onCancelChangeLogoImage","onLeaveTeam","leaveTeam","closeModalAfterFunction","f","event","toggle","toFnRef","refA","refB","useMemo","a","b","mergeRefs","optionsSupported","onceSupported","options","passive","once","canUseDOM","window","addEventListener","removeEventListener","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","this","call","document","createElement","ownerDocument"],"sourceRoot":""}