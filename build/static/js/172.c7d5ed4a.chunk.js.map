{"version":3,"file":"static/js/172.c7d5ed4a.chunk.js","mappings":"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","sources":["pages/settings/LeftPanel.tsx","pages/settings/PersonalInfoForm.tsx","pages/settings/PersonalImageForm.tsx","pages/settings/PersonalSettings.tsx","pages/settings/hooks/usePersonalSettings.tsx","pages/settings/hooks/useTeamSettings.tsx","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Team } from './types';\nimport { Dropdown } from 'react-bootstrap';\nimport { changeTeam } from 'helpers';\nimport { APICore } from 'helpers/api/apiCore';\n\ntype LeftPanelProps = {\n  selected: string;\n};\n\nconst LeftPanel = ({ selected }: LeftPanelProps) => {\n  const api = new APICore();\n  const user = api.getLoggedInUser();\n\n  return (\n    <>\n      {user.teams && (\n        <Dropdown className=\"mb-3\">\n          <Dropdown.Toggle className=\"w-100\">\n            <i className=\"mdi me-1\"></i> {user.currentTeam.name}\n          </Dropdown.Toggle>\n          <Dropdown.Menu className=\"w-100\">\n            {user.teams.map((team: Team) => {\n              return (\n                <Dropdown.Item\n                  key={team.id}\n                  onClick={() => {\n                    changeTeam(team.id);\n                  }}\n                  active={team.id === user.currentTeam.id ? true : false}>\n                  <i className=\"\"></i> {team.name}\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <div className=\"email-menu-list\">\n        <Link to=\"/settings/user\" className={selected === 'personal' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-outline font-18 align-middle me-2\"></i>Personal Profile\n        </Link>\n        <Link to=\"/settings/team\" className={selected === 'team' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-group-outline font-18 align-middle me-2\"></i>Team Profile\n        </Link>\n        <Link to=\"/settings/create-team\">\n          <i className=\"mdi mdi-plus font-18 align-middle me-2\"></i>Create Team\n        </Link>\n      </div>\n      <div className=\"mt-4\">\n        <h4>\n          <span className=\"badge rounded-pill p-1 px-2 badge-secondary-lighten\">FREE</span>\n        </h4>\n      </div>\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { Button } from 'react-bootstrap';\nimport { FormInput } from 'components';\nimport { usePersonalSettings } from './hooks';\n\nconst PersonalInfoForm: React.FC = () => {\n  const { userFullname, onSubmitProfileInfo } = usePersonalSettings();\n\n  return (\n    <form onSubmit={onSubmitProfileInfo}>\n      <FormInput\n        label=\"Full Name\"\n        type=\"text\"\n        name=\"fullname\"\n        containerClass={'mb-3'}\n        key=\"fullname\"\n        placeholder={userFullname}\n        required\n      />\n      <FormInput label=\"Company Name\" type=\"text\" name=\"companyName\" containerClass={'mb-3'} key=\"companyName\" />\n      <FormInput label=\"Role\" type=\"text\" name=\"role\" containerClass={'mb-3'} key=\"role\" />\n      <Button color=\"primary\" type=\"submit\">\n        Save Changes\n      </Button>\n    </form>\n  );\n};\n\nexport default PersonalInfoForm;\n","import { Button } from 'react-bootstrap';\nimport { usePersonalSettings } from './hooks';\n\nconst PersonalImageForm: React.FC = () => {\n  const { previewImage, fileInput, onChangeProfileImage, onSaveProfileImage, onCancelChangeProfileImage } =\n    usePersonalSettings();\n\n  return (\n    <>\n      <div style={{ height: 190, position: 'relative' }}>\n        <p className=\"mb-1\" style={{ fontWeight: '600' }}>\n          Profile Image\n        </p>\n        <div className=\"overlay-container\">\n          <img\n            src={previewImage}\n            alt=\"profile preview\"\n            className=\"rounded ratio ratio-1x1\"\n            style={{ position: 'absolute', width: 150, height: 150, cursor: 'pointer' }}\n            referrerPolicy=\"no-referrer\"\n          />\n          <input\n            type=\"file\"\n            // accept='image/jpg, image/png, image/jpeg'\n            accept=\"image/png\"\n            style={{ display: 'none' }}\n            name=\"profileImage\"\n            onChange={onChangeProfileImage}\n            ref={fileInput}\n          />\n          <div\n            className=\"overlay rounded\"\n            onClick={() => {\n              if (fileInput.current) {\n                fileInput.current.click();\n              }\n            }}\n          >\n            <div className=\"overlay-text\">click to upload</div>\n          </div>\n        </div>\n      </div>\n      <Button className=\"me-2\" onClick={onSaveProfileImage}>\n        Save\n      </Button>\n      <Button className=\"btn btn-secondary\" onClick={onCancelChangeProfileImage}>\n        Cancel\n      </Button>\n    </>\n  );\n};\n\nexport default PersonalImageForm;\n","import { Row, Col, Card } from 'react-bootstrap';\nimport LeftPanel from './LeftPanel';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PersonalInfoForm from './PersonalInfoForm';\nimport PersonalImageForm from './PersonalImageForm';\n\nconst PersonalSettings = () => {\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Settings</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <div className=\"page-aside-left\">\n                <LeftPanel selected=\"personal\" />\n              </div>\n\n              <div className=\"page-aside-right\">\n                <h4 className=\"mb-3\">Change Personal Information</h4>\n                <Row>\n                  <Col md={7}>\n                    <PersonalInfoForm />\n                  </Col>\n                  <Col md={{ span: 3, offset: 2 }}>\n                    <PersonalImageForm />\n                  </Col>\n                </Row>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\n\nexport default PersonalSettings;\n","import { toast } from 'react-toastify';\nimport {\n  updateProfileInfo as updateProfileInfoAPI,\n  createProfileImage as createProfileImageAPI,\n  uploadProfileImage as uploadProfileImageAPI,\n} from 'helpers';\nimport { APICore } from 'helpers/api/apiCore';\nimport { useRef, useState } from 'react';\nimport { useRedux } from 'hooks';\n\nconst usePersonalSettings = () => {\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const [userFullname, setUserFullname] = useState<string>(user.fullname);\n  const [previewImage, setPreviewImage] = useState<string>(user.profileImageUrl);\n  const [profileImageFile, setProfileImageFile] = useState<null | File>();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const onSubmitProfileInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const fullname = ((e.target as HTMLFormElement).elements.namedItem('fullname') as HTMLInputElement).value;\n    const nickname = '';\n    await updateProfileInfoAPI({ fullname, nickname });\n    setUserFullname(fullname);\n    user.fullname = fullname;\n    sessionStorage.setItem('asyncrum_user', JSON.stringify(user));\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(user.profileImageUrl);\n      return;\n    } else {\n      setProfileImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveProfileImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!profileImageFile) {\n      return;\n    } else {\n      const createProfileImageAPIResponse = await createProfileImageAPI();\n      const presignedURL = createProfileImageAPIResponse.data.preSignedURL;\n      await uploadProfileImageAPI(presignedURL, profileImageFile);\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeProfileImage = () => {\n    setPreviewImage(user.profileImageUrl);\n    setProfileImageFile(null);\n  };\n\n  const changeInfoNotify = () => toast(<div>Personal information changed successfully!</div>);\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Profile image saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  return {\n    userFullname,\n    previewImage,\n    profileImageFile,\n    fileInput,\n    onSubmitProfileInfo,\n    onChangeProfileImage,\n    onSaveProfileImage,\n    onCancelChangeProfileImage,\n  };\n};\n\nexport default usePersonalSettings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  createTeam as createTeamAPI,\n  readTeam as readTeamAPI,\n  updateTeamInfo as updateTeamInfoAPI,\n  createLogoImage as createLogoImageAPI,\n  uploadLogoImage as uploadLogoImageAPI,\n  inviteMember as inviteMemberAPI,\n} from 'helpers';\nimport { Member, Team, Invitation } from '../types';\nimport { APICore } from 'helpers/api/apiCore';\nimport defaultImage from 'assets/images/asyncrum-logo-small.png';\n\nconst useTeamSettings = () => {\n  const api = new APICore();\n  const user = api.getLoggedInUser();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [team, setTeam] = useState<Team>(user.currentTeam);\n  const [teamname, setTeamname] = useState<string>();\n  const [previewImage, setPreviewImage] = useState<string>();\n  const [logoImageFile, setLogoImageFile] = useState<null | File>();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (user.teams) {\n      getTeamData();\n    }\n  }, []);\n\n  useEffect(() => {\n    setPreviewImage(team?.pictureUrl);\n  }, [team]);\n\n  const onCreateTeam = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    const code = name.slice(0, 3) + Date.now();\n    const createTeamAPIResponse = await createTeamAPI({ name, code });\n    const newTeam = createTeamAPIResponse.data;\n    if (user['teams']) {\n      user['teams'].push(newTeam);\n    } else {\n      user['teams'] = [newTeam];\n    }\n    user['currentTeam'] = newTeam;\n    const readTeamAPIResponse = await readTeamAPI(newTeam.id);\n    const teaminfo: Team = {\n      id: readTeamAPIResponse.data.id,\n      name: readTeamAPIResponse.data.name,\n      code: readTeamAPIResponse.data.code,\n      pictureUrl: readTeamAPIResponse.data.pictureUrl,\n      members: readTeamAPIResponse.data.members.map((member: Member) => ({\n        fullname: member.fullname,\n        profileImageUrl: member.profileImageUrl,\n      })),\n    };\n    setTeam(teaminfo);\n    setTeamname(teaminfo.name);\n    setPreviewImage(defaultImage);\n  };\n\n  const getTeamData = async () => {\n    const readTeamAPIResponse = await readTeamAPI(user.currentTeam.id);\n    const teaminfo: Team = {\n      id: readTeamAPIResponse.data.id,\n      name: readTeamAPIResponse.data.name,\n      code: readTeamAPIResponse.data.code,\n      pictureUrl: readTeamAPIResponse.data.pictureUrl,\n      members: readTeamAPIResponse.data.members.map((member: Member) => ({\n        fullname: member.fullname,\n        profileImageUrl: member.profileImageUrl,\n      })),\n    };\n    setTeam(teaminfo);\n    setTeamname(teaminfo.name);\n    setPreviewImage(teaminfo.pictureUrl);\n    setLoading(false);\n    return teaminfo;\n  };\n\n  const onSubmitTeamInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!team) {\n      return;\n    }\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    await updateTeamInfoAPI(user.currentTeam.id, { name });\n    setTeamname(name);\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeLogoImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(team?.pictureUrl);\n      return;\n    } else {\n      setLogoImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveLogoImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!logoImageFile || !team) {\n      return;\n    } else {\n      const createLogoImageAPIResponse = await createLogoImageAPI(user.currentTeam.id);\n      const presignedURL = createLogoImageAPIResponse.data.preSignedURL;\n      await uploadLogoImageAPI(presignedURL, logoImageFile);\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeLogoImage = () => {\n    setPreviewImage(team?.pictureUrl ? team?.pictureUrl : defaultImage);\n    setLogoImageFile(null);\n  };\n\n  const onInvite = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!user.currentTeam) {\n      return;\n    }\n    const email = ((e.target as HTMLFormElement).elements.namedItem('email') as HTMLInputElement).value;\n    const invitationData: Invitation = {\n      memberId: null,\n      memberEmail: email,\n    };\n    await inviteMemberAPI(user.currentTeam.id, invitationData);\n    (e.target as HTMLFormElement).reset();\n    invitationNotify(email);\n  };\n\n  const changeInfoNotify = () => {\n    toast(<div>Team Information changed successfully!</div>);\n  };\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Team logo saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  const invitationNotify = (email: string) =>\n    toast(\n      <div>\n        Invitation sent to <b>{email}</b>!\n      </div>\n    );\n\n  return {\n    loading,\n    team,\n    teamname,\n    previewImage,\n    defaultImage,\n    logoImageFile,\n    fileInput,\n    setTeamname,\n    setPreviewImage,\n    onCreateTeam,\n    onSubmitTeamInfo,\n    onChangeLogoImage,\n    onSaveLogoImage,\n    onCancelChangeLogoImage,\n    onInvite,\n  };\n};\n\nexport default useTeamSettings;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;"],"names":["selected","user","APICore","getLoggedInUser","teams","className","currentTeam","name","map","team","onClick","changeTeam","id","active","to","usePersonalSettings","userFullname","onSubmitProfileInfo","onSubmit","label","type","containerClass","placeholder","required","Button","color","previewImage","fileInput","onChangeProfileImage","onSaveProfileImage","onCancelChangeProfileImage","style","height","position","fontWeight","src","alt","width","cursor","referrerPolicy","accept","display","onChange","ref","current","click","Row","Col","Card","LeftPanel","md","span","offset","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","appSelector","useRedux","state","Auth","useState","fullname","setUserFullname","profileImageUrl","setPreviewImage","profileImageFile","setProfileImageFile","useRef","e","preventDefault","target","elements","namedItem","value","updateProfileInfoAPI","nickname","sessionStorage","setItem","JSON","stringify","reset","changeInfoNotify","createProfileImageAPI","createProfileImageAPIResponse","presignedURL","data","preSignedURL","uploadProfileImageAPI","changeImageNotify","toast","files","reader","FileReader","onload","readyState","result","readAsDataURL","loading","setLoading","setTeam","teamname","setTeamname","logoImageFile","setLogoImageFile","useEffect","getTeamData","pictureUrl","onCreateTeam","code","slice","Date","now","createTeamAPI","createTeamAPIResponse","newTeam","push","readTeamAPI","readTeamAPIResponse","teaminfo","members","member","defaultImage","onSubmitTeamInfo","updateTeamInfoAPI","onSaveLogoImage","createLogoImageAPI","createLogoImageAPIResponse","uploadLogoImageAPI","onInvite","email","invitationData","memberId","memberEmail","inviteMemberAPI","invitationNotify","onChangeLogoImage","onCancelChangeLogoImage","toFnRef","refA","refB","useMemo","a","b","mergeRefs","optionsSupported","onceSupported","options","passive","once","canUseDOM","window","addEventListener","removeEventListener","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","document","createElement","ownerDocument"],"sourceRoot":""}