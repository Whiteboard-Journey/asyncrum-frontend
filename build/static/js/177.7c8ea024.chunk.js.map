{"version":3,"file":"static/js/177.7c8ea024.chunk.js","mappings":"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","sources":["pages/account/AccountLayout.tsx","pages/account/ForgetPassword.tsx","pages/account/hooks/useAccountLayout.ts","pages/account/hooks/useForgetPassword.ts","pages/account/hooks/useLogin.ts","pages/account/hooks/useOAuthLogin.ts","pages/account/hooks/useLogout.ts","pages/account/hooks/useRegister.ts"],"sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Logo from 'assets/images/asyncrum-logo-white.png';\nimport { useAccountLayout } from './hooks';\n\ntype AccountLayoutProps = {\n  bottomLinks?: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst AccountLayout = ({ bottomLinks, children }: AccountLayoutProps) => {\n  const { t } = useTranslation();\n\n  useAccountLayout();\n\n  return (\n    <>\n      <div className=\"account-pages pt-2 pt-sm-5 pb-4 pb-sm-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md={8} lg={6} xl={5} xxl={4}>\n              <Card>\n                {/* logo */}\n                <Card.Header className=\"pt-4 pb-3 text-center bg-primary\">\n                  <Link to=\"/\">\n                    <span>\n                      <img src={Logo} alt=\"\" height=\"36\" />\n                    </span>\n                  </Link>\n                </Card.Header>\n                <Card.Body className=\"p-4\">{children}</Card.Body>\n              </Card>\n\n              {/* bottom links */}\n              {bottomLinks}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <footer className=\"footer footer-alt\">{t(`2022 Â© Asyncrum - Software Maestro 13th Team WBJ`)}</footer>\n    </>\n  );\n};\n\nexport default AccountLayout;\n","import { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { VerticalForm, FormInput } from 'components';\nimport AccountLayout from './AccountLayout';\nimport { useForgetPassword } from './hooks';\n\nexport type UserData = {\n  username: string;\n};\n\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"mt-3\">\n      <Col className=\"text-center\">\n        <p className=\"text-muted\">\n          {t('Back to')}{' '}\n          <Link to={'/account/login'} className=\"text-muted ms-1\">\n            <b>{t('Log In')}</b>\n          </Link>\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nconst ForgetPassword = () => {\n  const { t } = useTranslation();\n  const { loading, passwordReset, resetPasswordSuccess, error, schemaResolver, onSubmit } = useForgetPassword();\n\n  return (\n    <AccountLayout bottomLinks={<BottomLink />}>\n      <div className=\"text-center m-auto\">\n        <h4 className=\"text-dark-50 text-center mt-0 font-weight-bold\">{t('Reset Password')}</h4>\n        <p className=\"text-muted mb-4\">\n          {t(\"Enter your email address and we'll send you an email with instructions to reset your password\")}\n        </p>\n      </div>\n\n      {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\n\n      {error && !resetPasswordSuccess && (\n        <Alert variant=\"danger\" className=\"my-2\">\n          {error}\n        </Alert>\n      )}\n\n      {!passwordReset && (\n        <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver}>\n          <FormInput\n            label={t('Username')}\n            type=\"text\"\n            name=\"username\"\n            placeholder={t('Enter your Username')}\n            containerClass={'mb-3'}\n          />\n\n          <div className=\"mb-3 mb-0 text-center\">\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n              {t('Submit')}\n            </Button>\n          </div>\n        </VerticalForm>\n      )}\n    </AccountLayout>\n  );\n};\n\nexport default ForgetPassword;\n","import { useEffect } from 'react';\n\nexport default function useAccountLayout() {\n  useEffect(() => {\n    if (document.body) document.body.classList.add('authentication-bg');\n\n    return () => {\n      if (document.body) document.body.classList.remove('authentication-bg');\n    };\n  }, []);\n}\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, forgotPassword } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../ForgetPassword';\n\nexport default function useForgetPassword() {\n  const { dispatch, appSelector } = useRedux();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, passwordReset, resetPasswordSuccess, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    passwordReset: state.Auth.passwordReset,\n    resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n  }));\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t('Please enter Username')),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(forgotPassword(formData['username']));\n  };\n\n  return {\n    loading,\n    passwordReset,\n    resetPasswordSuccess,\n    error,\n    schemaResolver,\n    onSubmit,\n  };\n}\n","import { useEffect } from 'react';\nimport { Location, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, loginUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../Login';\n\ntype LocationState = {\n  from?: Location;\n};\n\nexport default function useLogin() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const location: Location = useLocation();\n  let redirectUrl = '/';\n\n  if (location.state) {\n    const { from } = location.state as LocationState;\n    redirectUrl = from ? from.pathname : '/';\n  }\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, userLoggedIn, user, error } = appSelector((state) => ({\n    loading: state.Auth.loading as boolean,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    userLoggedIn: state.Auth.userLoggedIn,\n  }));\n\n  /*\n    form validation schema\n    */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t('Please enter username')),\n      password: yup.string().required(t('Please enter password')),\n    })\n  );\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (formData: UserData) => {\n    dispatch(loginUser(formData['username'], formData['password']));\n  };\n\n  return {\n    loading,\n    userLoggedIn,\n    user,\n    error,\n    schemaResolver,\n    onSubmit,\n    redirectUrl,\n  };\n}\n","import { useEffect } from 'react';\nimport { Location, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { resetAuth, oauthLoginUser, readAllTeam } from 'redux/actions';\nimport { useRedux } from 'hooks';\n\ntype LocationState = {\n  from?: Location;\n};\n\nexport default function useOAuthLogin() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const location: Location = useLocation();\n  let redirectUrl = '/';\n\n  if (location.state) {\n    const { from } = location.state as LocationState;\n    redirectUrl = from ? from.pathname : '/';\n  }\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, userLoggedIn, user, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    userLoggedIn: state.Auth.userLoggedIn,\n  }));\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (token: string) => {\n    dispatch(oauthLoginUser(token));\n    dispatch(readAllTeam());\n  };\n\n  return {\n    loading,\n    userLoggedIn,\n    user,\n    error,\n    onSubmit,\n    redirectUrl,\n  };\n}\n","import { useEffect } from 'react';\nimport { logoutUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\n\nexport default function useLogout() {\n  const { dispatch } = useRedux();\n\n  useEffect(() => {\n    dispatch(logoutUser());\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, signupUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../Register';\n\nexport default function useRegister() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const { loading, userSignUp, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    error: state.Auth.error,\n    userSignUp: state.Auth.userSignUp,\n  }));\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      fullname: yup.string().required(t('Please enter your full name')),\n      email: yup.string().required('Please enter your email').email('Please enter a valid email address'),\n      password: yup.string().required(t('Please enter password')),\n      confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n      checkboxsignup: yup.boolean().oneOf([true], 'You must agree to the terms and conditions'),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(signupUser(formData['fullname'], formData['email'], formData['password']));\n  };\n\n  return {\n    loading,\n    userSignUp,\n    error,\n    schemaResolver,\n    onSubmit,\n  };\n}\n"],"names":["bottomLinks","children","t","useTranslation","useAccountLayout","className","md","lg","xl","xxl","to","src","Logo","alt","height","BottomLink","useForgetPassword","loading","passwordReset","resetPasswordSuccess","error","schemaResolver","onSubmit","variant","message","resolver","label","type","name","placeholder","containerClass","disabled","useEffect","document","body","classList","add","remove","useRedux","dispatch","appSelector","resetAuth","state","Auth","user","yupResolver","yup","shape","username","required","formData","forgotPassword","useLogin","location","useLocation","redirectUrl","from","pathname","userLoggedIn","password","loginUser","useOAuthLogin","token","oauthLoginUser","readAllTeam","useLogout","logoutUser","useRegister","userSignUp","fullname","email","confirmPassword","oneOf","checkboxsignup","signupUser"],"sourceRoot":""}