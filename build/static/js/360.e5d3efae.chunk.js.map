{"version":3,"file":"static/js/360.e5d3efae.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","nodeType","onResolved","resolvedRef","setRef","earlyRef","nextRef","hasClass","element","classList","baseVal","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","propTypes","PropTypes","type","classNames","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","timeout","mountOnEnter"],"sourceRoot":""}