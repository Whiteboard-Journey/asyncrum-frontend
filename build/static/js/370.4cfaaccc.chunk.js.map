{"version":3,"file":"static/js/370.4cfaaccc.chunk.js","mappings":"kMAsEA,UA/DqB,WACjB,OAAkCA,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEZC,GAAkBC,EAAAA,EAAAA,QAAuB,MAEvCC,EAAqBH,GAAY,SAACI,GAAD,MAAY,CACjDD,iBAAkBC,EAAMC,OAAOF,qBAD3BA,iBAeFG,GAAmBC,EAAAA,EAAAA,cACrB,SAACC,GACG,GAAIL,EAAkB,CAClB,GAAIF,GAAmBA,EAAgBQ,SAAWR,EAAgBQ,QAAQC,SAASF,EAAEG,QACjF,OAEAZ,GAASa,EAAAA,EAAAA,UAIrB,CAACX,EAAiBF,EAAUI,IAUhC,OAPAU,EAAAA,EAAAA,YAAU,WAEN,OADAC,SAASC,iBAAiB,YAAaT,GAAkB,GAClD,WACHQ,SAASE,oBAAoB,YAAaV,GAAkB,QAKhE,iCACI,iBAAKW,UAAU,UAAUC,IAAKjB,EAA9B,WACI,iBAAKgB,UAAU,iBAAf,WACI,SAAC,KAAD,CAAME,GAAG,IAAIF,UAAU,2BAA2BG,QAhC9C,SAACZ,GACjBA,EAAEa,iBACFtB,GAASa,EAAAA,EAAAA,QA8BG,UACI,cAAGK,UAAU,iCAEjB,eAAIA,UAAU,MAAd,0BAGJ,SAAC,IAAD,CAAWK,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAxF,UACI,iBAAKT,UAAU,yBAAf,UACK,KACD,SAAC,KAAD,aAKZ,gBAAKA,UAAU","sources":["layouts/RightSidebar.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport SimpleBar from 'simplebar-react';\nimport { useRedux } from 'hooks';\nimport { hideRightSidebar } from 'redux/actions';\nimport { ThemeCustomizer } from 'components';\n\nconst RightSideBar = () => {\n    const { dispatch, appSelector } = useRedux();\n\n    const rightBarNodeRef = useRef<HTMLDivElement>(null);\n\n    const { showRightSidebar } = appSelector((state) => ({\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    /**\n     * Handles the close\n     */\n    const handleClose = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.preventDefault();\n        dispatch(hideRightSidebar());\n    };\n\n    /**\n     * Handle the click anywhere in doc\n     */\n    const handleOtherClick = useCallback(\n        (e) => {\n            if (showRightSidebar) {\n                if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\n                    return;\n                } else {\n                    dispatch(hideRightSidebar());\n                }\n            }\n        },\n        [rightBarNodeRef, dispatch, showRightSidebar]\n    );\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleOtherClick, false);\n        return () => {\n            document.removeEventListener('mousedown', handleOtherClick, false);\n        };\n    });\n\n    return (\n        <>\n            <div className=\"end-bar\" ref={rightBarNodeRef}>\n                <div className=\"rightbar-title\">\n                    <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\n                        <i className=\"dripicons-cross noti-icon\"></i>\n                    </Link>\n                    <h5 className=\"m-0\">Settings</h5>\n                </div>\n\n                <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\n                    <div className=\"rightbar-content h-100\">\n                        {' '}\n                        <ThemeCustomizer />\n                    </div>\n                </SimpleBar>\n            </div>\n\n            <div className=\"rightbar-overlay\"></div>\n        </>\n    );\n};\n\nexport default RightSideBar;\n"],"names":["useRedux","dispatch","appSelector","rightBarNodeRef","useRef","showRightSidebar","state","Layout","handleOtherClick","useCallback","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","className","ref","to","onClick","preventDefault","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"sourceRoot":""}