{"version":3,"file":"static/js/370.5bafa2be.chunk.js","mappings":"kMAsEA,UA/DqB,WACnB,OAAkCA,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEZC,GAAkBC,EAAAA,EAAAA,QAAuB,MAEvCC,EAAqBH,GAAY,SAACI,GAAD,MAAY,CACnDD,iBAAkBC,EAAMC,OAAOF,qBADzBA,iBAeFG,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACC,GAAIL,EAAkB,CACpB,GAAIF,GAAmBA,EAAgBQ,SAAWR,EAAgBQ,QAAQC,SAASF,EAAEG,QACnF,OAEAZ,GAASa,EAAAA,EAAAA,UAIf,CAACX,EAAiBF,EAAUI,IAU9B,OAPAU,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,iBAAiB,YAAaT,GAAkB,GAClD,WACLQ,SAASE,oBAAoB,YAAaV,GAAkB,QAK9D,iCACE,iBAAKW,UAAU,UAAUC,IAAKjB,EAA9B,WACE,iBAAKgB,UAAU,iBAAf,WACE,SAAC,KAAD,CAAME,GAAG,IAAIF,UAAU,2BAA2BG,QAhCtC,SAACZ,GACnBA,EAAEa,iBACFtB,GAASa,EAAAA,EAAAA,QA8BH,UACE,cAAGK,UAAU,iCAEf,eAAIA,UAAU,MAAd,kCAGF,SAAC,IAAD,CAAWK,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAxF,UACE,iBAAKT,UAAU,yBAAf,UACG,KACD,SAAC,KAAD,aAKN,gBAAKA,UAAU","sources":["layouts/RightSidebar.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useRedux } from 'hooks';\r\nimport { hideRightSidebar } from 'redux/actions';\r\nimport { ThemeCustomizer } from 'components';\r\n\r\nconst RightSideBar = () => {\r\n  const { dispatch, appSelector } = useRedux();\r\n\r\n  const rightBarNodeRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { showRightSidebar } = appSelector((state) => ({\r\n    showRightSidebar: state.Layout.showRightSidebar,\r\n  }));\r\n\r\n  /**\r\n   * Handles the close\r\n   */\r\n  const handleClose = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    dispatch(hideRightSidebar());\r\n  };\r\n\r\n  /**\r\n   * Handle the click anywhere in doc\r\n   */\r\n  const handleOtherClick = useCallback(\r\n    (e) => {\r\n      if (showRightSidebar) {\r\n        if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\r\n          return;\r\n        } else {\r\n          dispatch(hideRightSidebar());\r\n        }\r\n      }\r\n    },\r\n    [rightBarNodeRef, dispatch, showRightSidebar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleOtherClick, false);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOtherClick, false);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"end-bar\" ref={rightBarNodeRef}>\r\n        <div className=\"rightbar-title\">\r\n          <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\r\n            <i className=\"dripicons-cross noti-icon\"></i>\r\n          </Link>\r\n          <h5 className=\"m-0\">Display Settings</h5>\r\n        </div>\r\n\r\n        <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\r\n          <div className=\"rightbar-content h-100\">\r\n            {' '}\r\n            <ThemeCustomizer />\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n\r\n      <div className=\"rightbar-overlay\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightSideBar;\r\n"],"names":["useRedux","dispatch","appSelector","rightBarNodeRef","useRef","showRightSidebar","state","Layout","handleOtherClick","useCallback","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","className","ref","to","onClick","preventDefault","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"sourceRoot":""}