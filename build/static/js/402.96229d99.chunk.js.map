{"version":3,"file":"static/js/402.96229d99.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/automation-events/build/es5/bundle.js","../node_modules/broker-factory/src/helpers/port-map.ts","../node_modules/broker-factory/src/module.ts","../node_modules/broker-factory/src/helpers/extend-broker-implementation.ts","../node_modules/broker-factory/src/guards/message-port.ts","../node_modules/compilerr/build/es5/bundle.js","../node_modules/dashify/index.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/extendable-media-recorder-wav-encoder-broker/src/module.ts","../node_modules/extendable-media-recorder-wav-encoder/src/module.ts","../node_modules/extendable-media-recorder-wav-encoder/src/worker/worker.ts","../node_modules/media-encoder-host-broker/src/module.ts","../node_modules/media-encoder-host/src/module.ts","../node_modules/media-encoder-host/src/worker/worker.ts","../node_modules/extendable-media-recorder/src/factories/invalid-modification-error.ts","../node_modules/extendable-media-recorder/src/factories/not-supported-error.ts","../node_modules/rxjs-interop/source/symbols.ts","../node_modules/rxjs-interop/source/to-observer.ts","../node_modules/subscribable-things/src/factories/animation-frame.ts","../node_modules/subscribable-things/src/functions/emit-not-supported-error.ts","../node_modules/subscribable-things/src/module.ts","../node_modules/subscribable-things/src/factories/window.ts","../node_modules/subscribable-things/src/factories/wrap-subscribe-function.ts","../node_modules/rxjs-interop/source/patch.ts","../node_modules/subscribable-things/src/factories/mutations.ts","../node_modules/subscribable-things/src/factories/map-subscribable-thing.ts","../node_modules/subscribable-things/src/factories/prepend-subscribable-thing.ts","../node_modules/subscribable-things/src/factories/attribute.ts","../node_modules/subscribable-things/src/factories/geolocation.ts","../node_modules/subscribable-things/src/factories/intersections.ts","../node_modules/subscribable-things/src/factories/media-devices.ts","../node_modules/subscribable-things/src/factories/media-query-match.ts","../node_modules/subscribable-things/src/factories/metrics.ts","../node_modules/subscribable-things/src/factories/midi-inputs.ts","../node_modules/subscribable-things/src/factories/midi-outputs.ts","../node_modules/subscribable-things/src/factories/on.ts","../node_modules/subscribable-things/src/factories/online.ts","../node_modules/subscribable-things/src/factories/permission-state.ts","../node_modules/subscribable-things/src/factories/reports.ts","../node_modules/subscribable-things/src/factories/resizes.ts","../node_modules/subscribable-things/src/factories/unhandled-rejection.ts","../node_modules/subscribable-things/src/factories/video-frame.ts","../node_modules/subscribable-things/src/factories/wake-lock.ts","../node_modules/worker-factory/src/helpers/error-renderers.ts","../node_modules/recorder-audio-worklet/src/module.ts","../node_modules/worker-factory/src/helpers/extend-worker-implementation.ts","../node_modules/recorder-audio-worklet/src/factories/add-recorder-audio-worklet-module.ts","../node_modules/recorder-audio-worklet/src/worklet/worklet.ts","../node_modules/recorder-audio-worklet/src/factories/recorder-audio-worklet-node-factory.ts","../node_modules/recorder-audio-worklet/src/factories/listener.ts","../node_modules/recorder-audio-worklet/src/factories/post-message-factory.ts","../node_modules/recorder-audio-worklet/src/functions/validate-state.ts","../node_modules/standardized-audio-context/src/globals.ts","../node_modules/standardized-audio-context/src/helpers/is-constructible.ts","../node_modules/standardized-audio-context/src/helpers/split-import-statements.ts","../node_modules/standardized-audio-context/src/factories/add-audio-worklet-module.ts","../node_modules/standardized-audio-context/src/helpers/get-value-for-key.ts","../node_modules/standardized-audio-context/src/helpers/pick-element-from-set.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-active.ts","../node_modules/standardized-audio-context/src/guards/audio-worklet-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive-when-necessary.ts","../node_modules/standardized-audio-context/src/factories/analyser-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/is-owned-by-context.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.ts","../node_modules/standardized-audio-context/src/factories/index-size-error.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-get-channel-data-method.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/constants.ts","../node_modules/standardized-audio-context/src/helpers/is-active-audio-node.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-node-connections.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-param-connections.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-active-audio-node-input-connections.ts","../node_modules/standardized-audio-context/src/guards/audio-buffer-source-node.ts","../node_modules/standardized-audio-context/src/guards/biquad-filter-node.ts","../node_modules/standardized-audio-context/src/guards/constant-source-node.ts","../node_modules/standardized-audio-context/src/guards/gain-node.ts","../node_modules/standardized-audio-context/src/guards/oscillator-node.ts","../node_modules/standardized-audio-context/src/guards/stereo-panner-node.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-audio-graph.ts","../node_modules/standardized-audio-context/src/helpers/is-valid-latency-hint.ts","../node_modules/standardized-audio-context/src/guards/audio-node.ts","../node_modules/standardized-audio-context/src/guards/audio-node-output-connection.ts","../node_modules/standardized-audio-context/src/helpers/insert-element-in-set.ts","../node_modules/standardized-audio-context/src/helpers/add-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/add-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node-faker.ts","../node_modules/standardized-audio-context/src/helpers/connect-native-audio-node-to-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection.ts","../node_modules/standardized-audio-context/src/helpers/delete-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/disconnect-native-audio-node-from-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/is-part-of-a-cycle.ts","../node_modules/standardized-audio-context/src/helpers/is-passive-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-node-disconnect-method-support.ts","../node_modules/standardized-audio-context/src/helpers/visit-each-audio-node-once.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-node-disconnect-method.ts","../node_modules/standardized-audio-context/src/factories/audio-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/read-only-map.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/copy-from-channel.ts","../node_modules/standardized-audio-context/src/helpers/copy-to-channel.ts","../node_modules/standardized-audio-context/src/helpers/create-nested-arrays.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/detach-array-buffer.ts","../node_modules/standardized-audio-context/src/factories/delay-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/disconnect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/gain-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/invalid-state-error.ts","../node_modules/standardized-audio-context/src/factories/invalid-access-error.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/filter-buffer.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/test-promise-support.ts","../node_modules/standardized-audio-context/src/factories/minimal-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-option.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-analyser-node-get-float-time-domain-data-method-support.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-audio-param-value.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/compute-buffer-size.ts","../node_modules/standardized-audio-context/src/helpers/clone-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor-promise.ts","../node_modules/standardized-audio-context/src/factories/native-biquad-filter-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-splitter-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-channel-splitter-node.ts","../node_modules/standardized-audio-context/src/helpers/intercept-connections.ts","../node_modules/standardized-audio-context/src/factories/native-delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-gain-node.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/cache-test-result.ts","../node_modules/standardized-audio-context/src/factories/get-native-context.ts","../node_modules/standardized-audio-context/src/factories/add-audio-node-connections.ts","../node_modules/standardized-audio-context/src/factories/convert-number-to-unsigned-long.ts","../node_modules/standardized-audio-context/src/factories/add-audio-param-connections.ts","../node_modules/standardized-audio-context/src/factories/native-script-processor-node.ts","../node_modules/standardized-audio-context/src/factories/not-supported-error.ts","../node_modules/standardized-audio-context/src/factories/offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/periodic-wave-constructor.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/unknown-error.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/get-first-sample.ts","../node_modules/standardized-audio-context/src/helpers/is-dc-curve.ts","../node_modules/standardized-audio-context/src/helpers/overwrite-accessors.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/wrap-event-listener.ts","../node_modules/standardized-audio-context/src/module.ts","../node_modules/standardized-audio-context/src/factories/add-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/add-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/delete-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/window.ts","../node_modules/standardized-audio-context/src/factories/native-analyser-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-analyser-node-get-float-time-domain-data-method.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-renderer.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-node.ts","../node_modules/standardized-audio-context/src/factories/analyser-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/event-target-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/add-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/increment-cycle-counter-factory.ts","../node_modules/standardized-audio-context/src/factories/decrement-cycle-counter.ts","../node_modules/standardized-audio-context/src/factories/detect-cycles.ts","../node_modules/standardized-audio-context/src/guards/delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.ts","../node_modules/standardized-audio-context/src/factories/test-audio-buffer-constructor-support.ts","../node_modules/standardized-audio-context/src/factories/add-silent-connection.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-param.ts","../node_modules/standardized-audio-context/src/factories/connect-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.ts","../node_modules/standardized-audio-context/src/factories/render-automation.ts","../node_modules/standardized-audio-context/src/factories/get-audio-param-renderer.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-renderer.ts","../node_modules/standardized-audio-context/src/helpers/set-value-at-time-until-possible.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/set-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/monitor-connections.ts","../node_modules/standardized-audio-context/src/factories/wrap-channel-merger-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-merger-node-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-channel-splitter-options.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-convolver-node-factory.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/delay-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-dynamics-compressor-node-factory.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/gain-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/render-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/test-offline-audio-context-current-time-support.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-iir-filter-node-get-frequency-response-method.ts","../node_modules/standardized-audio-context/src/factories/audio-listener-factory.ts","../node_modules/standardized-audio-context/src/factories/minimal-base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-oscillator-node-factory.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/connected-native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-periodic-wave-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-periodic-wave-options.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/is-secure-context.ts","../node_modules/standardized-audio-context/src/factories/expose-current-frame-and-current-time.ts","../node_modules/standardized-audio-context/src/factories/get-or-create-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/evaluate-source.ts","../node_modules/standardized-audio-context/src/factories/fetch-source.ts","../node_modules/standardized-audio-context/src/factories/abort-error.ts","../node_modules/standardized-audio-context/src/factories/test-audio-worklet-processor-post-message-support.ts","../node_modules/standardized-audio-context/src/factories/is-native-context.ts","../node_modules/standardized-audio-context/src/factories/decode-audio-data.ts","../node_modules/standardized-audio-context/src/factories/data-clone-error.ts","../node_modules/standardized-audio-context/src/factories/encoding-error.ts","../node_modules/standardized-audio-context/src/factories/base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/media-element-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-element-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-track-audio-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-track-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/get-unrendered-audio-worklet-nodes.ts","../node_modules/standardized-audio-context/src/factories/add-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/connect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/delete-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/get-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-faker-factory.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/test-clonability-of-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/factories/get-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/set-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-worklet-node-options-clonability.ts","../node_modules/standardized-audio-context/src/factories/minimal-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/create-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/start-rendering.ts","../node_modules/extendable-media-recorder/src/factories/web-audio-media-recorder.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-param.ts","../node_modules/standardized-audio-context/src/factories/is-any-offline-audio-context.ts","../node_modules/extendable-media-recorder/src/module.ts","../node_modules/extendable-media-recorder/src/factories/window.ts","../node_modules/extendable-media-recorder/src/factories/blob-event-factory.ts","../node_modules/extendable-media-recorder/src/factories/native-blob-event-constructor.ts","../node_modules/extendable-media-recorder/src/factories/invalid-state-error.ts","../node_modules/extendable-media-recorder/src/factories/read-variable-size-integer.ts","../node_modules/extendable-media-recorder/src/functions/read-variable-size-integer-length.ts","../node_modules/extendable-media-recorder/src/factories/read-element-content.ts","../node_modules/extendable-media-recorder/src/factories/read-element-type.ts","../node_modules/extendable-media-recorder/src/factories/decode-web-m-chunk.ts","../node_modules/extendable-media-recorder/src/factories/webm-pcm-media-recorder.ts","../node_modules/extendable-media-recorder/src/factories/event-target-factory.ts","../node_modules/extendable-media-recorder/src/factories/native-media-recorder-constructor.ts","../node_modules/extendable-media-recorder/src/factories/native-media-recorder.ts","../node_modules/extendable-media-recorder/src/factories/media-recorder-constructor.ts","../node_modules/extendable-media-recorder/src/factories/event-target-constructor.ts","../node_modules/extendable-media-recorder/src/functions/wrap-event-listener.ts","../node_modules/extendable-media-recorder/src/factories/is-supported-promise.ts","../node_modules/fast-unique-numbers/build/es5/bundle.js","../node_modules/indefinite-article/indefinite-article.js","../node_modules/moment/moment.js","../node_modules/multi-buffer-data-view/build/es5/bundle.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-media-recorder/index.js","../node_modules/react-media-recorder/lib/index.js","../Webcam/webpack/universalModuleDefinition","../Webcam/webpack/bootstrap","../Webcam/src/react-webcam.tsx","../Webcam/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default[\"default\"](AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","export const PORT_MAP: WeakMap<MessagePort, number> = new WeakMap();\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IWorkerDefinition, IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nimport { IBrokerDefinition, IDefaultBrokerDefinition, IWorkerEvent } from './interfaces';\nimport { TBrokerImplementation } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst ONGOING_REQUESTS = new WeakMap<MessagePort | Worker, Map<number, { reject: Function; resolve: Function }>>();\n\nconst createOrGetOngoingRequests = (sender: MessagePort | Worker): Map<number, { reject: Function; resolve: Function }> => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return <Map<number, { reject: Function; resolve: Function }>>ONGOING_REQUESTS.get(sender);\n    }\n\n    const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n\n    return ongoingRequests;\n};\n\nexport const createBroker = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    brokerImplementation: TBrokerImplementation<T, U>\n): ((sender: MessagePort | Worker) => T & IDefaultBrokerDefinition) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n\n    return (sender: MessagePort | Worker) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n\n        sender.addEventListener('message', <EventListener>(({ data: message }: IWorkerEvent) => {\n            const { id } = message;\n\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = <{ reject: Function; resolve: Function }>ongoingRequests.get(id);\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }));\n\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n\n        const call = <V extends keyof U>(method: V, params: U[V]['params'] = null, transferables: U[V]['transferables'] = []) => {\n            return new Promise<U[V]['response']['result']>((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                if (params === null) {\n                    sender.postMessage({ id, method }, <Transferable[]>transferables);\n                } else {\n                    sender.postMessage({ id, method, params }, <Transferable[]>transferables);\n                }\n            });\n        };\n        const notify = <V extends keyof U>(method: V, params: U[V]['params'], transferables: U[V]['transferables'] = []) => {\n            sender.postMessage({ id: null, method, params }, <Transferable[]>transferables);\n        };\n\n        let functions: object = {};\n\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n\n        return <T & IDefaultBrokerDefinition>{ ...functions };\n    };\n};\n","import { IWorkerDefinition } from 'worker-factory';\nimport { IBrokerDefinition, IDefaultBrokerDefinition } from '../interfaces';\nimport { TBrokerImplementation } from '../types';\nimport { PORT_MAP } from './port-map';\n\nexport const extendBrokerImplementation = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    partialBrokerImplementation: TBrokerImplementation<T, U>\n): TBrokerImplementation<T & IDefaultBrokerDefinition, U> =>\n    <TBrokerImplementation<T & IDefaultBrokerDefinition, U>>{\n        ...partialBrokerImplementation,\n        connect: ({ call }) => {\n            return async (): Promise<MessagePort> => {\n                const { port1, port2 } = new MessageChannel();\n\n                const portId = <number>await call('connect', { port: port1 }, [port1]);\n\n                PORT_MAP.set(port2, portId);\n\n                return port2;\n            };\n        },\n        disconnect: ({ call }) => {\n            return async (port: MessagePort): Promise<void> => {\n                const portId = PORT_MAP.get(port);\n\n                if (portId === undefined) {\n                    throw new Error('The given port is not connected.');\n                }\n\n                await call('disconnect', { portId });\n            };\n        },\n        isSupported: ({ call }) => {\n            return () => call('isSupported');\n        }\n    };\n","export const isMessagePort = (sender: MessagePort | Worker): sender is MessagePort => {\n    return typeof (<MessagePort>sender).start === 'function';\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/toConsumableArray'), require('dashify'), require('indefinite-article')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/toConsumableArray', 'dashify', 'indefinite-article'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.compilerr = {}, global._toConsumableArray, global.dashify, global.indefiniteArticle));\n})(this, (function (exports, _toConsumableArray, dashify, indefiniteArticle) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);\n    var dashify__default = /*#__PURE__*/_interopDefaultLegacy(dashify);\n    var indefiniteArticle__default = /*#__PURE__*/_interopDefaultLegacy(indefiniteArticle);\n\n    var applyModifiers = function applyModifiers(name, modifiers) {\n      if (modifiers === undefined) {\n        return name;\n      }\n\n      return modifiers.reduce(function (modifiedName, modifier) {\n        if (modifier === 'capitalize') {\n          var head = modifiedName.charAt(0).toUpperCase();\n          var tail = modifiedName.slice(1);\n          return \"\".concat(head).concat(tail);\n        }\n\n        if (modifier === 'dashify') {\n          return dashify__default[\"default\"](modifiedName);\n        }\n\n        if (modifier === 'prependIndefiniteArticle') {\n          return \"\".concat(indefiniteArticle__default[\"default\"](modifiedName), \" \").concat(modifiedName);\n        }\n\n        return modifiedName;\n      }, name);\n    };\n\n    var buildRegex = function buildRegex(variable) {\n      var expression = variable.name + variable.modifiers.map(function (modifier) {\n        return \"\\\\.\".concat(modifier, \"\\\\(\\\\)\");\n      }).join('');\n      return new RegExp(\"\\\\$\\\\{\".concat(expression, \"}\"), 'g');\n    };\n\n    var preRenderString = function preRenderString(string, parameters) {\n      var expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n      var variables = [];\n      var expressionResult = expressionRegex.exec(string);\n\n      while (expressionResult !== null) {\n        var variable = {\n          modifiers: [],\n          name: expressionResult[1]\n        };\n\n        if (expressionResult[3] !== undefined) {\n          var modifiersRegex = /\\.[^(]+\\(\\)/g;\n          var modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n\n          while (modifiersRegexResult !== null) {\n            variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n            modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          }\n        }\n\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n      }\n\n      var preRenderedParts = variables.reduce(function (parts, variable) {\n        return parts.map(function (part) {\n          if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce(function (prts, prt, index) {\n              if (index === 0) {\n                return [prt];\n              }\n\n              if (variable.name in parameters) {\n                return [].concat(_toConsumableArray__default[\"default\"](prts), [applyModifiers(parameters[variable.name], variable.modifiers), prt]);\n              }\n\n              return [].concat(_toConsumableArray__default[\"default\"](prts), [function (prmtrs) {\n                return applyModifiers(prmtrs[variable.name], variable.modifiers);\n              }, prt]);\n            }, []);\n          }\n\n          return [part];\n        }).reduce(function (prts, part) {\n          return [].concat(_toConsumableArray__default[\"default\"](prts), _toConsumableArray__default[\"default\"](part));\n        }, []);\n      }, [string]);\n      return function (missingParameters) {\n        return preRenderedParts.reduce(function (renderedParts, preRenderedPart) {\n          if (typeof preRenderedPart === 'string') {\n            return [].concat(_toConsumableArray__default[\"default\"](renderedParts), [preRenderedPart]);\n          }\n\n          return [].concat(_toConsumableArray__default[\"default\"](renderedParts), [preRenderedPart(missingParameters)]);\n        }, []).join('');\n      };\n    };\n\n    var compile = function compile(template) {\n      var knownParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n      var renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n\n      function render() {\n        var causeOrMissingParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionalCause = arguments.length > 1 ? arguments[1] : undefined;\n        var hasNoOptionalCause = optionalCause === undefined && (causeOrMissingParameters instanceof Error || causeOrMissingParameters.code !== undefined && causeOrMissingParameters.code.slice(-9) === 'Exception');\n\n        var _ref = hasNoOptionalCause ? {\n          cause: causeOrMissingParameters,\n          missingParameters: {}\n        } : {\n          cause: optionalCause,\n          missingParameters: causeOrMissingParameters\n        },\n            cause = _ref.cause,\n            missingParameters = _ref.missingParameters;\n\n        var err = renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters));\n\n        if (cause !== null) {\n          err.cause = cause;\n        }\n\n        if (renderCode !== undefined) {\n          err.code = renderCode(missingParameters);\n        }\n\n        if (template.status !== undefined) {\n          err.status = template.status;\n        }\n\n        return err;\n      }\n\n      return render;\n    };\n\n    exports.compile = compile;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { createBroker } from 'broker-factory';\nimport { TExtendableMediaRecorderWavEncoderWorkerDefinition } from 'extendable-media-recorder-wav-encoder-worker';\nimport { IExtendableMediaRecorderWavEncoderBrokerDefinition } from './interfaces';\nimport { TExtendableMediaRecorderWavEncoderBrokerLoader, TExtendableMediaRecorderWavEncoderBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nexport const wrap: TExtendableMediaRecorderWavEncoderBrokerWrapper = createBroker<\n    IExtendableMediaRecorderWavEncoderBrokerDefinition,\n    TExtendableMediaRecorderWavEncoderWorkerDefinition\n>({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call(\n                'record',\n                { recordingId, sampleRate, typedArrays },\n                typedArrays.map(({ buffer }) => buffer)\n            );\n        };\n    }\n});\n\nexport const load: TExtendableMediaRecorderWavEncoderBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n","import { load } from 'extendable-media-recorder-wav-encoder-broker';\nimport { worker } from './worker/worker';\n\nconst blob: Blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n\nconst url: string = URL.createObjectURL(blob);\n\nconst extendableMediaRecorderWavEncoder = load(url);\n\nexport const characterize = extendableMediaRecorderWavEncoder.characterize;\n\nexport const connect = extendableMediaRecorderWavEncoder.connect;\n\nexport const disconnect = extendableMediaRecorderWavEncoder.disconnect;\n\nexport const encode = extendableMediaRecorderWavEncoder.encode;\n\nexport const isSupported = extendableMediaRecorderWavEncoder.isSupported;\n\nexport const record = extendableMediaRecorderWavEncoder.record;\n\nURL.revokeObjectURL(url);\n","// This is the minified and stringified code of the extendable-media-recorder-wav-encoder-worker package.\nexport const worker = `(()=>{var e={775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=o(t),a=o(r),i=o(n),u=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?a.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},c=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var a={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)a.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(a),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(c(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(s.default(e),[u(t[r.name],r.modifiers),n]):[].concat(s.default(e),[function(e){return u(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(s.default(e),s.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(s.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,s=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},a=s.cause,i=s.missingParameters,u=void 0===n?new Error:new Error(n(i));return null!==a&&(u.cause=a),void 0!==r&&(u.code=r(i)),void 0!==e.status&&(u.status=e.status),u}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(106),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),i=void 0===a?r.size:a<s?a+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*s);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,u=r(i),c=a(u,i),l=t(c);e.addUniqueNumber=l,e.generateUniqueNumber=c,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),s=[\"honest\",\"hour\",\"hono\"];for(t in s)if(0==o.indexOf(s[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),s=r(906),a=r(344);e.exports=function(e){return n(e)||o(e)||s(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,s=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),a=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),u=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),c=(e,t)=>async r=>{let{data:{id:n,method:o,params:u}}=r;const c=t[o];try{if(void 0===c)throw s({method:o});const t=void 0===u?c():c(u);if(void 0===t)throw a({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=(0,l.generateUniqueNumber)(d);return d.set(s,(()=>{o(),n.close(),d.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw u({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=c(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>e.reduce(((e,t)=>e+t.length),0),h=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let o=0;o<t;o+=1){const t=e[o];void 0===r[o]&&(r[o]=[]);const s=t.shift();if(void 0===s)break e;r[o].push(s),0===o&&(n+=s.length)}}if(n>t){const o=n-t;r.forEach(((t,r)=>{const n=t.pop(),s=n.length-o;t.push(n.subarray(0,s)),e[r].unshift(n.subarray(s))}))}return r},v=new Map,g=(e=>(t,r,n)=>{const o=e.get(t);if(void 0===o){const o={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,o),o}return o.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),o})(v),x=((e,t)=>(r,n,o,s)=>{const a=o>>3,i=\"subsequent\"===n?0:44,u=r.length,c=e(r[0]),l=new ArrayBuffer(c*u*a+i),d=new DataView(l);return\"subsequent\"!==n&&t(d,o,u,\"complete\"===n?c:Number.POSITIVE_INFINITY,s),r.forEach(((e,t)=>{let r=i+t*a;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=u*a}}))})),[l]})(m,((e,t,r,n,o)=>{const s=t>>3,a=Math.min(n*r*s,4294967251);e.setUint32(0,1380533830),e.setUint32(4,a+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,o,!0),e.setUint32(28,o*r*s,!0),e.setUint16(32,r*s,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,a,!0)})),w=new Map;p(self,{characterize:()=>({result:/^audio\\\\/wav$/}),encode:e=>{let{recordingId:t,timeslice:r}=e;const n=w.get(t);void 0!==n&&(w.delete(t),n.reject(new Error(\"Another request was made to initiate an encoding.\")));const o=v.get(t);if(null!==r){if(void 0===o||m(o.channelDataArrays[0])*(1e3/o.sampleRate)<r)return new Promise(((e,n)=>{w.set(t,{reject:n,resolve:e,timeslice:r})}));const e=h(o.channelDataArrays,Math.ceil(r*(o.sampleRate/1e3))),n=x(e,o.isComplete?\"initial\":\"subsequent\",16,o.sampleRate);return o.isComplete=!1,{result:n,transferables:n}}if(void 0!==o){const e=x(o.channelDataArrays,o.isComplete?\"complete\":\"subsequent\",16,o.sampleRate);return v.delete(t),{result:e,transferables:e}}return{result:[],transferables:[]}},record:e=>{let{recordingId:t,sampleRate:r,typedArrays:n}=e;const o=g(t,r,n),s=w.get(t);if(void 0!==s&&m(o.channelDataArrays[0])*(1e3/r)>=s.timeslice){const e=h(o.channelDataArrays,Math.ceil(s.timeslice*(r/1e3))),n=x(e,o.isComplete?\"initial\":\"subsequent\",16,r);o.isComplete=!1,w.delete(t),s.resolve({result:n,transferables:n})}return{result:null}}})})()})();`; // tslint:disable-line:max-line-length\n","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\nimport { TMediaEncoderHostWorkerDefinition } from 'media-encoder-host-worker';\nimport { IMediaEncoderHostBrokerDefinition } from './interfaces';\nimport { TMediaEncoderHostBrokerLoader, TMediaEncoderHostBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst encoderIds: Set<number> = new Set();\n\nexport const wrap: TMediaEncoderHostBrokerWrapper = createBroker<IMediaEncoderHostBrokerDefinition, TMediaEncoderHostWorkerDefinition>({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n\n            encoderIds.delete(encoderId);\n\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\n\nexport const load: TMediaEncoderHostBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\n\nconst blob: Blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n\nconst url: string = URL.createObjectURL(blob);\n\nconst mediaEncoderHost = loadWorker(url);\n\nexport const connect = mediaEncoderHost.connect;\n\nexport const disconnect = mediaEncoderHost.disconnect;\n\nexport const encode = mediaEncoderHost.encode;\n\nexport const instantiate = mediaEncoderHost.instantiate;\n\nexport const isSupported = mediaEncoderHost.isSupported;\n\nexport const register = mediaEncoderHost.register;\n\nURL.revokeObjectURL(url);\n","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=o(t),s=o(r),i=o(n),c=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?s.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},u=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var s={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)s.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(s),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(u(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(a.default(e),[c(t[r.name],r.modifiers),n]):[].concat(a.default(e),[function(e){return c(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(a.default(e),a.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(a.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,a=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},s=a.cause,i=a.missingParameters,c=void 0===n?new Error:new Error(n(i));return null!==s&&(c.cause=s),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(106),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,a=2*o,s=function(e,t){return function(r){var s=t.get(r),i=void 0===s?r.size:s<a?s+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),u=s(c,i),l=t(u);e.addUniqueNumber=l,e.generateUniqueNumber=u,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),a=[\"honest\",\"hour\",\"hono\"];for(t in a)if(0==o.indexOf(a[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var s=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<s.length;t++)if(o.match(s[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),a=r(906),s=r(344);e.exports=function(e){return n(e)||o(e)||a(e)||s()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,a=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),s=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),c=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),u=(e,t)=>async r=>{let{data:{id:n,method:o,params:c}}=r;const u=t[o];try{if(void 0===u)throw a({method:o});const t=void 0===c?u():u(c);if(void 0===t)throw s({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:a=[]}=r;e.postMessage({id:n,result:t},a)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),a=(0,l.generateUniqueNumber)(d);return d.set(a,(()=>{o(),n.close(),d.delete(a)})),{result:a}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw c({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=u(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>{e.onmessage=null,e.close()},h=new WeakMap,g=new WeakMap,v=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return h.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=h.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(g.has(e))return g.get(e);const t=new Map;return g.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((a,s)=>{const i=(0,l.generateUniqueNumber)(r);r.set(i,{reject:s,resolve:a}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let a={};for(const[e,r]of Object.entries(t))a={...a,[e]:r({call:n,notify:o})};return{...a}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),w=async(e,t)=>{const r=v(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},x=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(x),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(x,y),b=new Map,E=((e,t)=>r=>{const[n,o,a,s]=t(r);return a?new Promise((t=>{o.onmessage=a=>{let{data:i}=a;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,s,i)}})):n.encode(r,null)})(m,M),A=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(b),_=((e,t,r)=>(n,o,a)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const s=r(o),{port1:i,port2:c}=new MessageChannel,u=[s,i,!0,a];return t.set(n,u),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),u[2]=!1):s.record(n,a,r)},c})(m,x,A),I=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);p(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await E(t):await I(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=_(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await w(b,t)}}})})()})();`; // tslint:disable-line:max-line-length\n","import { TInvalidModificationErrorFactory } from '../types';\n\nexport const createInvalidModificationError: TInvalidModificationErrorFactory = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    } catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n\n        return err;\n    }\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    } catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n\n        return err;\n    }\n};\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\nexport const observable = Symbol.observable || \"@@observable\";\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nimport { Observer, PartialObserver } from \"./types\";\n\nconst noop = () => {};\nconst rethrow = (error: unknown) => {\n  /* eslint-disable-next-line etc/throw-error */\n  throw error;\n};\n\nexport function toObserver<T>(observer?: PartialObserver<T>): Observer<T> {\n  if (observer) {\n    if (observer.next && observer.error && observer.complete) {\n      return observer as Observer<T>;\n    }\n    return {\n      complete: (observer.complete ?? noop).bind(observer),\n      error: (observer.error ?? rethrow).bind(observer),\n      next: (observer.next ?? noop).bind(observer),\n    };\n  }\n  return {\n    complete: noop,\n    error: rethrow,\n    next: noop,\n  };\n}\n","import { TAnimationFrameFactory } from '../types';\n\nexport const createAnimationFrame: TAnimationFrameFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp): void {\n                animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n\n                observer.next(timestamp);\n            });\n\n            return () => window.cancelAnimationFrame(animationFrameHandle);\n        });\n};\n","import { TEmitNotSupportedErrorFunction } from '../types';\n\nexport const emitNotSupportedError: TEmitNotSupportedErrorFunction = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n\n    return () => {}; // tslint:disable-line:no-empty\n};\n","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\n\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\n\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\n\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\n\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\n\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\n\nexport const on = createOn(wrapSubscribeFunction);\n\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\n\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n","import { TWindow, TWindowFactory } from '../types';\n\n// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { Observer, Subscribable } from 'rxjs-interop';\nimport { TObserverParameters, TSubscribableThing, TSubscribeFunction, TWrapSubscribeFunctionFactory } from '../types';\n\nexport const createWrapSubscribeFunction: TWrapSubscribeFunctionFactory = (patch, toObserver) => {\n    const emptyFunction = () => {}; // tslint:disable-line:no-empty\n    const isNextFunction = <T>(args: TObserverParameters<T>): args is [Observer<T>['next']] => typeof args[0] === 'function';\n\n    return <T>(innerSubscribe: TSubscribeFunction<T>) => {\n        const subscribe = <TSubscribableThing<T>>((...args: TObserverParameters<T>) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n\n            return emptyFunction;\n        });\n\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args: Parameters<Subscribable<T>['subscribe']>) => ({ unsubscribe: subscribe(...args) })\n        });\n\n        return patch(subscribe);\n    };\n};\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nimport { observable } from \"./symbols\";\nimport { InteropObservable } from \"./types\";\n\nexport function patch<T extends InteropObservable<any>>(instance: T): T;\nexport function patch<T extends new (...args: any[]) => InteropObservable<any>>(\n  constructor: T\n): T;\nexport function patch(\n  arg: InteropObservable<any> | (new (...args: any[]) => InteropObservable<any>)\n): InteropObservable<any> | (new (...args: any[]) => InteropObservable<any>) {\n  if (!Symbol.observable) {\n    if (\n      typeof arg === \"function\" &&\n      arg.prototype &&\n      arg.prototype[Symbol.observable]\n    ) {\n      (arg.prototype as any)[observable] = arg.prototype[Symbol.observable];\n      delete arg.prototype[Symbol.observable];\n    } else {\n      (arg as any)[observable] = arg[Symbol.observable];\n      delete arg[Symbol.observable];\n    }\n  }\n  return arg;\n}\n","import { TMutationsFactory } from '../types';\n\nexport const createMutations: TMutationsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.MutationObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n\n            try {\n                mutationObserver.observe(htmlElement, options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => mutationObserver.disconnect();\n        });\n};\n","import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createMapSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TMappedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        map: (value: TValue) => TMappedValue\n    ): TSubscribableThing<TMappedValue> =>\n        wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n","import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createPrependSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TPrependedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        prependedValue: TPrependedValue\n    ): TSubscribableThing<TPrependedValue | TValue> =>\n        wrapSubscribeFunction((observer) => {\n            observer.next(prependedValue);\n\n            return subscribableThing(observer);\n        });\n","import { TSubscribableThing } from '../types';\nimport type { createMapSubscribableThing } from './map-subscribable-thing';\nimport type { createMutations } from './mutations';\nimport type { createPrependSubscribableThing } from './prepend-subscribable-thing';\n\nexport const createAttribute = (\n    mapSubscribableThing: ReturnType<typeof createMapSubscribableThing>,\n    mutations: ReturnType<typeof createMutations>,\n    prependSubscribableThing: ReturnType<typeof createPrependSubscribableThing>\n) => {\n    return (htmlElement: HTMLElement, name: string): TSubscribableThing<null | string> => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n\n        return prependSubscribableThing(\n            mapSubscribableThing(\n                mutations(htmlElement, {\n                    attributeFilter: [name],\n                    childList: false,\n                    subtree: false\n                }),\n                () => getAttribute()\n            ),\n            getAttribute()\n        );\n    };\n};\n","import { TEmitNotSupportedErrorFunction, TSubscribableThing, TWindow, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createGeolocation = (\n    emitNotSupportedError: TEmitNotSupportedErrorFunction,\n    window: null | TWindow,\n    wrapSubscribeFunction: TWrapSubscribeFunctionFunction\n) => {\n    return (options?: PositionOptions): TSubscribableThing<GeolocationPosition> =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.geolocation === undefined ||\n                window.navigator.geolocation.clearWatch === undefined ||\n                window.navigator.geolocation.watchPosition === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            const watchId = window.navigator.geolocation.watchPosition(\n                (position) => observer.next(position),\n                (err) => observer.error(err),\n                options\n            );\n\n            return () => window.navigator.geolocation.clearWatch(watchId);\n        });\n};\n","import { TIntersectionsFactory } from '../types';\n\nexport const createIntersections: TIntersectionsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.IntersectionObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n\n            try {\n                intersectionObserverObserver.observe(htmlElement);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => intersectionObserverObserver.disconnect();\n        });\n};\n","import { TMediaDevicesFactory } from '../types';\n\nexport const createMediaDevices: TMediaDevicesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.mediaDevices === undefined ||\n                window.navigator.mediaDevices.enumerateDevices === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n\n            const enumerateDevices = () => {\n                window.navigator.mediaDevices.enumerateDevices().then(\n                    (mediaDevices) => {\n                        if (isActive) {\n                            observer.next(mediaDevices);\n                        }\n                    },\n                    (err) => {\n                        if (isActive) {\n                            unsubscribe();\n\n                            observer.error(err);\n                        }\n                    }\n                );\n            };\n            const unsubscribe = () => {\n                isActive = false;\n                window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n            };\n\n            enumerateDevices();\n            window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n\n            return unsubscribe;\n        });\n};\n","import { TMediaQueryMatchFactory } from '../types';\n\nexport const createMediaQueryMatch: TMediaQueryMatchFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.matchMedia === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const mediaQueryList = window.matchMedia(mediaQueryString);\n\n            observer.next(mediaQueryList.matches);\n\n            mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n\n            return () => {\n                mediaQueryList.onchange = null;\n            };\n        });\n};\n","import { TMetricsFactory } from '../types';\n\nexport const createMetrics: TMetricsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.PerformanceObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n\n            try {\n                performanceObserver.observe(options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => performanceObserver.disconnect();\n        });\n};\n","import { TMidiInputsFactory } from '../types';\n\nexport const createMidiInputs: TMidiInputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiInputs = Array.from(midiAccess.inputs.values());\n\n            const emitMidiInputs = () => {\n                const midiAccessInputs = midiAccess.inputs;\n\n                if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                    midiInputs = Array.from(midiAccessInputs.values());\n\n                    observer.next(midiInputs);\n                }\n            };\n\n            observer.next(midiInputs);\n            midiAccess.addEventListener('statechange', emitMidiInputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n        });\n};\n","import { TMidiOutputsFactory } from '../types';\n\nexport const createMidiOutputs: TMidiOutputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiOutputs = Array.from(midiAccess.outputs.values());\n\n            const emitMidiOutputs = () => {\n                const midiAccessOutputs = midiAccess.outputs;\n\n                if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                    midiOutputs = Array.from(midiAccessOutputs.values());\n\n                    observer.next(midiOutputs);\n                }\n            };\n\n            observer.next(midiOutputs);\n            midiAccess.addEventListener('statechange', emitMidiOutputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n        });\n};\n","import { TEventHandler, TEventType, TOnFactory } from '../types';\n\nexport const createOn: TOnFactory = (wrapSubscribeFunction) => {\n    return (target, type, options) =>\n        wrapSubscribeFunction((observer) => {\n            const listener: TEventHandler<typeof target> = (event) => observer.next(<TEventType<typeof target, typeof type>>event);\n\n            target.addEventListener(type, listener, options);\n\n            return () => target.removeEventListener(type, listener, options);\n        });\n};\n","import { TOnlineFactory } from '../types';\n\nexport const createOnline: TOnlineFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.navigator === undefined || window.navigator.onLine === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const emitFalse = () => observer.next(false);\n            const emitTrue = () => observer.next(true);\n\n            window.addEventListener('offline', emitFalse);\n            window.addEventListener('online', emitTrue);\n\n            observer.next(window.navigator.onLine);\n\n            return () => {\n                window.removeEventListener('offline', emitFalse);\n                window.removeEventListener('online', emitTrue);\n            };\n        });\n};\n","import { TPermissionStateFactory } from '../types';\n\nexport const createPermissionState: TPermissionStateFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.permissions === undefined ||\n                window.navigator.permissions.query === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n            let unsubscribe = () => {\n                isActive = false;\n            };\n\n            window.navigator.permissions.query(permissionDescriptor).then(\n                (permissionStatus) => {\n                    if (isActive) {\n                        observer.next(permissionStatus.state);\n                    }\n\n                    if (isActive) {\n                        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n\n                        unsubscribe = () => {\n                            permissionStatus.onchange = null;\n                        };\n                    }\n                },\n                (err) => {\n                    if (isActive) {\n                        observer.error(err);\n                    }\n                }\n            );\n\n            return () => unsubscribe();\n        });\n};\n","import { TReportsFactory } from '../types';\n\nexport const createReports: TReportsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ReportingObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const reportingObserver = new window.ReportingObserver((reportList) => observer.next(reportList), options);\n\n            reportingObserver.observe();\n\n            return () => reportingObserver.disconnect();\n        });\n};\n","import { IResizeObserverEntry } from '../interfaces';\nimport { TResizesFactory } from '../types';\n\nexport const createResizes: TResizesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ResizeObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const resizeObserver = new window.ResizeObserver((entries) => observer.next(<IResizeObserverEntry[]>entries));\n\n            try {\n                resizeObserver.observe(htmlElement, options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => resizeObserver.disconnect();\n        });\n};\n","import { TUnhandledRejectionFactory } from '../types';\n\nexport const createUnhandledRejection: TUnhandledRejectionFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (coolingOffPeriod) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const possiblyUnhandledRejections = new Map<Promise<any>, { reason: any; timestamp: number }>();\n\n            let intervalId: null | number = null;\n\n            const deletePossiblyUnhandledRejection = ({ promise }: PromiseRejectionEvent) => possiblyUnhandledRejections.delete(promise);\n            const emitUnhandledRejection = () => {\n                const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n\n                possiblyUnhandledRejections.forEach(({ reason, timestamp }, promise) => {\n                    if (timestamp > latestTimestampToEmit) {\n                        return;\n                    }\n\n                    possiblyUnhandledRejections.delete(promise);\n                    observer.next(reason);\n                });\n\n                if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n                    window.clearInterval(intervalId);\n                    intervalId = null;\n                }\n            };\n            const registerPossiblyUnhandledRejection = (event: PromiseRejectionEvent) => {\n                event.preventDefault();\n\n                possiblyUnhandledRejections.set(event.promise, {\n                    reason: event.reason,\n                    timestamp: Date.now()\n                });\n\n                if (intervalId === null) {\n                    intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n                }\n            };\n\n            window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n\n            return () => {\n                if (intervalId !== null) {\n                    window.clearInterval(intervalId);\n                }\n\n                window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n                window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n            };\n        });\n};\n","import { TVideoFrameFactory } from '../types';\n\nexport const createVideoFrame: TVideoFrameFactory = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) =>\n        wrapSubscribeFunction((observer) => {\n            if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata): void {\n                videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n\n                observer.next({ ...metadata, now });\n            });\n\n            return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n        });\n};\n","import { IWakeLockSentinel } from '../interfaces';\nimport { TWakeLockFactory } from '../types';\n\nexport const createWakeLock: TWakeLockFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (type) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const releaseWakeLock = (wakeLockSentinel: IWakeLockSentinel) =>\n                wakeLockSentinel.release().catch(() => {\n                    // Ignore errors.\n                });\n            const removeReleaseEventListener = (wakeLockSentinel: IWakeLockSentinel) => {\n                wakeLockSentinel.onrelease = null;\n            };\n\n            let isActive = true;\n\n            const unsubscribeWhileRequesting = () => {\n                isActive = false;\n            };\n\n            let unsubscribe = unsubscribeWhileRequesting;\n\n            const requestWakeLock = () =>\n                window.navigator.wakeLock.request(type).then(\n                    (wakeLockSentinel) => {\n                        if (isActive) {\n                            observer.next(true);\n                        }\n\n                        if (isActive) {\n                            wakeLockSentinel.onrelease = () => {\n                                observer.next(false);\n\n                                unsubscribe = unsubscribeWhileRequesting;\n\n                                removeReleaseEventListener(wakeLockSentinel);\n                                requestWakeLock();\n                            };\n\n                            unsubscribe = () => {\n                                removeReleaseEventListener(wakeLockSentinel);\n                                releaseWakeLock(wakeLockSentinel);\n                            };\n                        } else {\n                            releaseWakeLock(wakeLockSentinel);\n                        }\n                    },\n                    (err) => {\n                        if (isActive) {\n                            observer.error(err);\n                        }\n                    }\n                );\n\n            requestWakeLock();\n\n            return () => unsubscribe();\n        });\n};\n","import { IAugmentedError, IParameterObject, compile } from 'compilerr';\n\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\n\nexport const renderMethodNotFoundError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\n\nexport const renderMissingResponseError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\n\nexport const renderUnexpectedResultError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\n\nexport const renderUnknownPortIdError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\n\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(\n    createListener,\n    createPostMessageFactory(generateUniqueNumber),\n    on,\n    validateState\n);\n\nexport { isSupported };\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IDefaultWorkerDefinition, IReceiver, IWorkerDefinition } from '../interfaces';\nimport { TDestroyWorkerFunction, TWorkerImplementation } from '../types';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\n\nconst DESTROY_WORKER_FUNCTIONS: Map<number, TDestroyWorkerFunction> = new Map();\n\nexport const extendWorkerImplementation = <T extends IWorkerDefinition>(\n    createWorker: (receiver: IReceiver, workerImplementation: TWorkerImplementation<T>) => TDestroyWorkerFunction,\n    partialWorkerImplementation: TWorkerImplementation<T>,\n    isSupportedFunction: () => boolean | Promise<boolean>\n): TWorkerImplementation<T> & TWorkerImplementation<IDefaultWorkerDefinition> => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n\n        destroyWorker();\n\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n\n            return { result: synchronousResult };\n        }\n\n        return { result: false };\n    }\n});\n","export const createAddRecorderAudioWorkletModule = (blobConstructor: typeof Blob, urlConstructor: typeof URL, worklet: string) => {\n    return async (addAudioWorkletModule: (url: string) => Promise<void>) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n\n        try {\n            await addAudioWorkletModule(url);\n        } finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n","import type {\n    IAudioWorkletNode,\n    TAudioWorkletNodeConstructor,\n    TContext,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeConstructor,\n    TNativeContext\n} from 'standardized-audio-context';\nimport type { on as onFunction } from 'subscribable-things';\nimport type { validateState as validateStateFunction } from '../functions/validate-state';\nimport { INativeRecorderAudioWorkletNode, IRecorderAudioWorkletNode } from '../interfaces';\nimport { TAnyRecorderAudioWorkletNodeOptions, TState } from '../types';\nimport type { createListener as createListenerFunction } from './listener';\nimport type { createPostMessageFactory } from './post-message-factory';\n\nexport const createRecorderAudioWorkletNodeFactory = (\n    createListener: typeof createListenerFunction,\n    createPostMessage: ReturnType<typeof createPostMessageFactory>,\n    on: typeof onFunction,\n    validateState: typeof validateStateFunction\n) => {\n    return <T extends TContext | TNativeContext>(\n        audioWorkletNodeConstructor: T extends TContext ? TAudioWorkletNodeConstructor : TNativeAudioWorkletNodeConstructor,\n        context: T,\n        options: Partial<TAnyRecorderAudioWorkletNodeOptions<T>> = {}\n    ): T extends TContext ? IRecorderAudioWorkletNode<T> : INativeRecorderAudioWorkletNode => {\n        type TAnyAudioWorkletNode = T extends TContext ? IAudioWorkletNode<T> : TNativeAudioWorkletNode;\n        type TAnyRecorderAudioWorkletNode = T extends TContext ? IRecorderAudioWorkletNode<T> : INativeRecorderAudioWorkletNode;\n\n        const audioWorkletNode: TAnyAudioWorkletNode = new (<any>audioWorkletNodeConstructor)(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n\n        audioWorkletNode.port.start();\n\n        let state: TState = 'inactive';\n\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get(): TAnyRecorderAudioWorkletNode['pause'] {\n                    return async () => {\n                        validateState(['recording'], state);\n\n                        state = 'paused';\n\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get(): TAnyRecorderAudioWorkletNode['port'] {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get(): TAnyRecorderAudioWorkletNode['record'] {\n                    return async (encoderPort: MessagePort) => {\n                        validateState(['inactive'], state);\n\n                        state = 'recording';\n\n                        return postMessage(\n                            {\n                                method: 'record',\n                                params: { encoderPort }\n                            },\n                            [encoderPort]\n                        );\n                    };\n                }\n            },\n            resume: {\n                get(): TAnyRecorderAudioWorkletNode['resume'] {\n                    return async () => {\n                        validateState(['paused'], state);\n\n                        state = 'recording';\n\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get(): TAnyRecorderAudioWorkletNode['stop'] {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n\n                        state = 'stopped';\n\n                        try {\n                            await postMessage({ method: 'stop' });\n                        } finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n\n        return <TAnyRecorderAudioWorkletNode>audioWorkletNode;\n    };\n};\n","import type { IWorkerEvent } from 'broker-factory';\nimport type { IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\n\nexport const createListener = (ongoingRequests: Map<number, { reject: Function; resolve: Function }>) => {\n    return ({ data: message }: IWorkerEvent) => {\n        const { id } = message;\n\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }\n    };\n};\n","import type { generateUniqueNumber as generateUniqueNumberFunction } from 'fast-unique-numbers';\n\nexport const createPostMessageFactory = (generateUniqueNumber: typeof generateUniqueNumberFunction) => {\n    return (ongoingRequests: Map<number, { reject: Function; resolve: Function }>, port: MessagePort) => {\n        return (message: { method: string; params?: object }, transferables: Transferable[] = []): Promise<void> => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n","import { TState } from '../types';\n\nexport const validateState = (expectedStates: TState[], currentState: TState): void => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(\n            `Expected the state to be ${expectedStates\n                .map((expectedState) => `\"${expectedState}\"`)\n                .join(' or ')} but it was \"${currentState}\".`\n        );\n    }\n};\n","import { IAudioNode, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from './interfaces';\nimport {\n    TAudioNodeConnectionsStore,\n    TAudioNodeStore,\n    TAudioParamConnectionsStore,\n    TAudioParamStore,\n    TContext,\n    TContextStore,\n    TCycleCounters,\n    TInternalStateEventListener,\n    TNativeAudioWorkletNode,\n    TNativeContext\n} from './types';\n\nexport const ACTIVE_AUDIO_NODE_STORE: WeakSet<IAudioNode<TContext>> = new WeakSet();\n\nexport const AUDIO_NODE_CONNECTIONS_STORE: TAudioNodeConnectionsStore = new WeakMap();\n\nexport const AUDIO_NODE_STORE: TAudioNodeStore = new WeakMap();\n\nexport const AUDIO_PARAM_CONNECTIONS_STORE: TAudioParamConnectionsStore = new WeakMap();\n\nexport const AUDIO_PARAM_STORE: TAudioParamStore = new WeakMap();\n\nexport const CONTEXT_STORE: TContextStore = new WeakMap();\n\nexport const EVENT_LISTENERS: WeakMap<IAudioNode<TContext>, Set<TInternalStateEventListener>> = new WeakMap();\n\nexport const CYCLE_COUNTERS: TCycleCounters = new WeakMap();\n\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS: WeakMap<\n    TNativeContext,\n    Map<string, IAudioWorkletProcessorConstructor>\n> = new WeakMap();\n\nexport const NODE_TO_PROCESSOR_MAPS: WeakMap<\n    TNativeContext,\n    WeakMap<TNativeAudioWorkletNode, Promise<IAudioWorkletProcessor>>\n> = new WeakMap();\n","import { TConstructor } from '../types';\n\nconst handler = {\n    construct(): any {\n        return handler;\n    }\n};\n\nexport const isConstructible = (constructible: TConstructor): boolean => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n\n        new proxy(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source: string, url: string): [string, string] => {\n    const importStatements = [];\n\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nimport { IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TAddAudioWorkletModuleFactory, TEvaluateAudioWorkletGlobalScopeFunction } from '../types';\n\nconst verifyParameterDescriptors = (parameterDescriptors: IAudioWorkletProcessorConstructor['parameterDescriptors']) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\n\nconst verifyProcessorCtor = <T extends IAudioWorkletProcessorConstructor>(processorCtor: T) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\n\nexport const createAddAudioWorkletModule: TAddAudioWorkletModuleFactory = (\n    cacheTestResult,\n    createNotSupportedError,\n    evaluateSource,\n    exposeCurrentFrameAndCurrentTime,\n    fetchSource,\n    getNativeContext,\n    getOrCreateBackupOfflineAudioContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    ongoingRequests,\n    resolvedRequests,\n    testAudioWorkletProcessorPostMessageSupport,\n    window\n) => {\n    let index = 0;\n\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n\n        const nativeContext = getNativeContext(context);\n\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise =\n            nativeContext.audioWorklet === undefined\n                ? fetchSource(moduleURL)\n                      .then(([source, absoluteUrl]) => {\n                          const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n\n                          /*\n                           * This is the unminified version of the code used below:\n                           *\n                           * ```js\n                           * ${ importStatements };\n                           * ((a, b) => {\n                           *     (a[b] = a[b] || [ ]).push(\n                           *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                           *             ${ sourceWithoutImportStatements }\n                           *         }\n                           *     );\n                           * })(window, '_AWGS');\n                           * ```\n                           */\n                          // tslint:disable-next-line:max-line-length\n                          const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n\n                          // @todo Evaluating the given source code is a possible security problem.\n                          return evaluateSource(wrappedSource);\n                      })\n                      .then(() => {\n                          const evaluateAudioWorkletGlobalScope = (<TEvaluateAudioWorkletGlobalScopeFunction[]>(<any>window)._AWGS).pop();\n\n                          if (evaluateAudioWorkletGlobalScope === undefined) {\n                              // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                              throw new SyntaxError();\n                          }\n\n                          exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                              evaluateAudioWorkletGlobalScope(\n                                  class AudioWorkletProcessor {},\n                                  undefined,\n                                  (name, processorCtor) => {\n                                      if (name.trim() === '') {\n                                          throw createNotSupportedError();\n                                      }\n\n                                      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n                                      if (nodeNameToProcessorConstructorMap !== undefined) {\n                                          if (nodeNameToProcessorConstructorMap.has(name)) {\n                                              throw createNotSupportedError();\n                                          }\n\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                                      } else {\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                                      }\n                                  },\n                                  nativeContext.sampleRate,\n                                  undefined,\n                                  undefined\n                              )\n                          );\n                      })\n                : Promise.all([\n                      fetchSource(moduleURL),\n                      Promise.resolve(\n                          cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport)\n                      )\n                  ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                      const currentIndex = index + 1;\n\n                      index = currentIndex;\n\n                      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                      /*\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * This is the unminified version of the code used below.\n                       *\n                       * ```js\n                       * class extends AudioWorkletProcessor {\n                       *\n                       *     __buffers = new WeakSet();\n                       *\n                       *     constructor () {\n                       *         super();\n                       *\n                       *         this.port.postMessage = ((postMessage) => {\n                       *             return (message, transferables) => {\n                       *                 const filteredTransferables = (transferables)\n                       *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                       *                     : transferables;\n                       *\n                       *                 return postMessage.call(this.port, message, filteredTransferables);\n                       *              };\n                       *         })(this.port.postMessage);\n                       *     }\n                       * }\n                       * ```\n                       */\n                      const patchedAudioWorkletProcessor = isSupportingPostMessage\n                          ? 'AudioWorkletProcessor'\n                          : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                      /*\n                       * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                       *\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                       *\n                       * This is the unminified version of the code used below:\n                       *\n                       * ```js\n                       * `${ importStatements };\n                       * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                       * })(\n                       *     ${ patchedAudioWorkletProcessor },\n                       *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                       *\n                       *         __collectBuffers = (array) => {\n                       *             array.forEach((element) => this.__buffers.add(element.buffer));\n                       *         };\n                       *\n                       *         process (inputs, outputs, parameters) {\n                       *             inputs.forEach(this.__collectBuffers);\n                       *             outputs.forEach(this.__collectBuffers);\n                       *             this.__collectBuffers(Object.values(parameters));\n                       *\n                       *             return super.process(\n                       *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                       *                 outputs,\n                       *                 parameters\n                       *             );\n                       *         }\n                       *\n                       *     })\n                       * );\n                       *\n                       * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                       *\n                       *     process () {\n                       *         return false;\n                       *     }\n                       *\n                       * })`\n                       * ```\n                       */\n                      const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                      const bufferRegistration = isSupportingPostMessage\n                          ? ''\n                          : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                      const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                      const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                      const url = URL.createObjectURL(blob);\n\n                      return nativeContext.audioWorklet\n                          .addModule(url, options)\n                          .then(() => {\n                              if (isNativeOfflineAudioContext(nativeContext)) {\n                                  return nativeContext;\n                              }\n\n                              // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                              const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n\n                              return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                          })\n                          .then((nativeContextOrBackupOfflineAudioContext) => {\n                              if (nativeAudioWorkletNodeConstructor === null) {\n                                  throw new SyntaxError();\n                              }\n\n                              try {\n                                  // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                                  new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                              } catch {\n                                  throw new SyntaxError();\n                              }\n                          })\n                          .finally(() => URL.revokeObjectURL(url));\n                  });\n\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        } else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n\n        promise\n            .then(() => {\n                const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n\n                if (updatedResolvedRequestsOfContext === undefined) {\n                    resolvedRequests.set(context, new Set([moduleURL]));\n                } else {\n                    updatedResolvedRequestsOfContext.add(moduleURL);\n                }\n            })\n            .finally(() => {\n                const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n\n                if (updatedOngoingRequestsOfContext !== undefined) {\n                    updatedOngoingRequestsOfContext.delete(moduleURL);\n                }\n            });\n\n        return promise;\n    };\n};\n","import { TGetValueForKeyFunction } from '../types';\n\nexport const getValueForKey: TGetValueForKeyFunction = (map, key) => {\n    const value = map.get(key);\n\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n\n    return value;\n};\n","import { TPickElementFromSetFunction } from '../types';\n\nexport const pickElementFromSet: TPickElementFromSetFunction = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n\n    const [matchingElement] = matchingElements;\n\n    set.delete(matchingElement);\n\n    return matchingElement;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioNodeInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioNode = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>,\n    source: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { EVENT_LISTENERS } from '../globals';\nimport { TGetEventListenersOfAudioNodeFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getEventListenersOfAudioNode: TGetEventListenersOfAudioNodeFunction = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToActive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n","import { IAudioNode, IAudioWorkletNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioWorkletNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioWorkletNode<T> => {\n    return 'port' in audioNode;\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToPassive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    activeInputs: Set<TActiveInputConnection<T>>[]\n) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAnalyserNode, IAnalyserOptions } from '../interfaces';\nimport { TAnalyserNodeConstructorFactory, TAudioNodeRenderer, TContext, TNativeAnalyserNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n} as const;\n\nexport const createAnalyserNodeConstructor: TAnalyserNodeConstructorFactory = (\n    audionNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class AnalyserNode<T extends TContext> extends audionNodeConstructor<T> implements IAnalyserNode<T> {\n        private _nativeAnalyserNode: TNativeAnalyserNode;\n\n        constructor(context: T, options?: Partial<IAnalyserOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n\n        get fftSize(): number {\n            return this._nativeAnalyserNode.fftSize;\n        }\n\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n\n        get frequencyBinCount(): number {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n\n        get maxDecibels(): number {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n\n            this._nativeAnalyserNode.maxDecibels = value;\n\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get minDecibels(): number {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n\n            this._nativeAnalyserNode.minDecibels = value;\n\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get smoothingTimeConstant(): number {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n\n        public getByteFrequencyData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n\n        public getByteTimeDomainData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n\n        public getFloatFrequencyData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n\n        public getFloatTimeDomainData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n","import { TNativeAudioNode, TNativeContext } from '../types';\n\nexport const isOwnedByContext = (nativeAudioNode: TNativeAudioNode, nativeContext: TNativeContext): boolean => {\n    return nativeAudioNode.context === nativeContext;\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer: TNativeAudioBuffer): boolean => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TIndexSizeErrorFactory } from '../types';\n\nexport const createIndexSizeError: TIndexSizeErrorFactory = () => new DOMException('', 'IndexSizeError');\n","import { createIndexSizeError } from '../factories/index-size-error';\nimport { TNativeAudioBuffer } from '../types';\n\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer: TNativeAudioBuffer): void => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel: number) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            } catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { IAudioBuffer, IAudioBufferOptions } from '../interfaces';\nimport { TAudioBufferConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createAudioBufferConstructor: TAudioBufferConstructorFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    testNativeAudioBufferConstructorSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    let nativeOfflineAudioContext: null | TNativeOfflineAudioContext = null;\n\n    return class AudioBuffer implements IAudioBuffer {\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyFromChannel!: (destination: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyToChannel!: (source: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public duration!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public getChannelData!: (channel: number) => Float32Array;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public length!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public numberOfChannels!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public sampleRate!: number;\n\n        constructor(options: IAudioBufferOptions) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer =\n                nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                    ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                    : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            } else if (\n                !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                    testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                )\n            ) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n\n            audioBufferStore.add(audioBuffer);\n\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(<any>instance)\n            );\n        }\n    };\n};\n","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\n\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsActiveAudioNodeFunction } from '../types';\n\nexport const isActiveAudioNode: TIsActiveAudioNodeFunction = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioBufferSourceNode, IAudioBufferSourceOptions, IAudioParam, IAudioScheduledSourceNodeEventMap } from '../interfaces';\nimport {\n    TAnyAudioBuffer,\n    TAudioBufferSourceNodeConstructorFactory,\n    TAudioBufferSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeAudioBufferSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n} as const;\n\nexport const createAudioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class AudioBufferSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IAudioBufferSourceNode<T>\n    {\n        private _audioBufferSourceNodeRenderer: TAudioBufferSourceNodeRenderer<T>;\n\n        private _isBufferNullified: boolean;\n\n        private _isBufferSet: boolean;\n\n        private _nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _playbackRate: IAudioParam;\n\n        constructor(context: T, options?: Partial<IAudioBufferSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = <TAudioBufferSourceNodeRenderer<T>>(\n                (isOffline ? createAudioBufferSourceNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(\n                this,\n                isOffline,\n                nativeAudioBufferSourceNode.playbackRate,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n\n                this._isBufferSet = true;\n            }\n        }\n\n        get loop(): boolean {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n\n        get loopEnd(): number {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n\n        get loopStart(): number {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get playbackRate(): IAudioParam {\n            return this._playbackRate;\n        }\n\n        public start(when = 0, offset = 0, duration?: number): void {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeAudioBufferSourceNode.stop(when);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TAudioNodeConnections, TContext, TGetAudioNodeConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioNodeConnections: TGetAudioNodeConnectionsFunction = <T extends TContext>(\n    audioNode: IAudioNode<T>\n): TAudioNodeConnections<T> => {\n    return <TAudioNodeConnections<T>>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioParamConnections, TContext, TGetAudioParamConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioParamConnections: TGetAudioParamConnectionsFunction = <T extends TContext>(\n    audioParam: IAudioParam\n): TAudioParamConnections<T> => {\n    return <TAudioParamConnections<T>>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\nexport const deactivateActiveAudioNodeInputConnections = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    trace: readonly IAudioNode<T>[]\n) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n\n    activeInputs.forEach((connections) =>\n        connections.forEach(([source]) => {\n            if (!trace.includes(audioNode)) {\n                deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n            }\n        })\n    );\n\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n              // Bug #149: Safari does not yet support the detune AudioParam.\n              audioNode.playbackRate\n          ]\n        : isAudioWorkletNode(audioNode)\n        ? Array.from(audioNode.parameters.values())\n        : isBiquadFilterNode(audioNode)\n        ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n        : isConstantSourceNode(audioNode)\n        ? [audioNode.offset]\n        : isGainNode(audioNode)\n        ? [audioNode.gain]\n        : isOscillatorNode(audioNode)\n        ? [audioNode.detune, audioNode.frequency]\n        : isStereoPannerNode(audioNode)\n        ? [audioNode.pan]\n        : [];\n\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAudioBufferSourceNode, IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioBufferSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioBufferSourceNode<T> => {\n    return 'playbackRate' in audioNode;\n};\n","import { IAudioNode, IBiquadFilterNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isBiquadFilterNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IBiquadFilterNode<T> => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n","import { IAudioNode, IConstantSourceNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isConstantSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IConstantSourceNode<T> => {\n    return 'offset' in audioNode;\n};\n","import { IAudioNode, IGainNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isGainNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IGainNode<T> => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n","import { IAudioNode, IOscillatorNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isOscillatorNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IOscillatorNode<T> => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n","import { IAudioNode, IStereoPannerNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isStereoPannerNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IStereoPannerNode<T> => {\n    return 'pan' in audioNode;\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\n\nexport const deactivateAudioGraph = <T extends TContext>(context: T): void => {\n    deactivateActiveAudioNodeInputConnections(<IAudioDestinationNode<T>>context.destination, []);\n};\n","import { IAudioContextOptions } from '../interfaces';\n\nexport const isValidLatencyHint = (latencyHint: IAudioContextOptions['latencyHint']) => {\n    return (\n        latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'))\n    );\n};\n","import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioNode = <T extends TContext>(\n    audioNodeOrAudioParam: IAudioNode<T> | IAudioParam\n): audioNodeOrAudioParam is IAudioNode<T> => {\n    return 'context' in audioNodeOrAudioParam;\n};\n","import { TAudioNodeOutputConnection, TContext, TOutputConnection } from '../types';\nimport { isAudioNode } from './audio-node';\n\nexport const isAudioNodeOutputConnection = <T extends TContext>(\n    outputConnection: TOutputConnection<T>\n): outputConnection is TAudioNodeOutputConnection<T> => {\n    return isAudioNode(outputConnection[0]);\n};\n","import { TInsertElementInSetFunction } from '../types';\n\nexport const insertElementInSet: TInsertElementInSetFunction = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n\n    set.add(element);\n\n    return true;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    [output, eventListener]: TPassiveAudioParamInputConnection,\n    ignoreDuplicates: boolean\n) => {\n    insertElementInSet(\n        activeInputs,\n        [source, output, eventListener],\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n        ignoreDuplicates\n    );\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n","import { INativeAudioNodeFaker } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\n\nexport const isNativeAudioNodeFaker = (\n    nativeAudioNodeOrNativeAudioNodeFaker: TNativeAudioNode | INativeAudioNodeFaker\n): nativeAudioNodeOrNativeAudioNodeFaker is INativeAudioNodeFaker => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { INativeAudioNodeFaker } from '../interfaces';\nimport { TConnectNativeAudioNodeToNativeAudioNodeFunction, TNativeAudioNode } from '../types';\n\nexport const connectNativeAudioNodeToNativeAudioNode: TConnectNativeAudioNodeToNativeAudioNodeFunction = (\n    nativeSourceAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    nativeDestinationAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    output: number,\n    input: number\n): [TNativeAudioNode, number, number] => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n\n    return [nativeDestinationAudioNode, output, input];\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\n\nexport const deleteActiveInputConnection = <T extends TContext>(\n    activeInputConnections: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n): null | TActiveInputConnection<T> => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n\n            return activeInputConnection;\n        }\n    }\n\n    return null;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TInternalStateEventListener } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const deleteEventListenerOfAudioNode = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    eventListener: TInternalStateEventListener\n) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { TDisconnectNativeAudioNodeFromNativeAudioNodeFunction } from '../types';\n\nexport const disconnectNativeAudioNodeFromNativeAudioNode: TDisconnectNativeAudioNodeFromNativeAudioNodeFunction = (\n    nativeSourceAudioNode,\n    nativeDestinationAudioNode,\n    output,\n    input\n) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    } else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n","import { AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode, INativeAudioNodeFaker } from '../interfaces';\nimport { TContext, TGetNativeAudioNodeFunction, TNativeAudioNode } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioNode: TGetNativeAudioNodeFunction = <T extends TContext, U extends TNativeAudioNode | INativeAudioNodeFaker>(\n    audioNode: IAudioNode<T>\n): U => {\n    return <U>getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n","import { AUDIO_PARAM_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TNativeAudioParam } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioParam = (audioParam: IAudioParam): TNativeAudioParam => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n","import { CYCLE_COUNTERS } from '../globals';\nimport { TIsPartOfACycleFunction } from '../types';\n\nexport const isPartOfACycle: TIsPartOfACycleFunction = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsPassiveAudioNodeFunction } from '../types';\n\nexport const isPassiveAudioNode: TIsPassiveAudioNodeFunction = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n","import { TNativeAudioContext, TNativeAudioWorkletNodeConstructor } from '../types';\n\nexport const testAudioNodeDisconnectMethodSupport = (\n    nativeAudioContext: TNativeAudioContext,\n    nativeAudioWorkletNodeConstructor: null | TNativeAudioWorkletNodeConstructor\n): Promise<boolean> => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        } else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n\n            channelData[0] = 1;\n            channelData[1] = 1;\n\n            const source = nativeAudioContext.createBufferSource();\n\n            source.buffer = ones;\n            source.loop = true;\n\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n\n                if (Array.prototype.some.call(chnnlDt, (sample: number) => sample === 1)) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n\n                source.stop();\n\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n\n            source.start();\n        }\n    });\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const visitEachAudioNodeOnce = <T extends TContext>(\n    cycles: IAudioNode<T>[][],\n    visitor: (audioNode: IAudioNode<T>, count: number) => void\n): void => {\n    const counts = new Map<IAudioNode<T>, number>();\n\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n","import { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const isNativeAudioNode = (\n    nativeAudioNodeOrAudioParam: TNativeAudioNode | TNativeAudioParam\n): nativeAudioNodeOrAudioParam is TNativeAudioNode => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode: TNativeAudioNode): void => {\n    const connections = new Map<TNativeAudioNode | TNativeAudioParam, { input: number; output: number }[]>();\n\n    nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            } else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n            disconnect.apply(nativeAudioNode);\n\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            } else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    } else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            } else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                } else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter(\n                            (connection) => connection.output !== output && (connection.input !== input || input === undefined)\n                        );\n\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        } else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    } else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nimport {\n    IAudioNode,\n    IAudioNodeRenderer,\n    IAudioParam,\n    IMinimalOfflineAudioContext,\n    INativeAudioNodeFaker,\n    IOfflineAudioContext\n} from '../interfaces';\nimport {\n    TAudioNodeConstructorFactory,\n    TChannelCountMode,\n    TChannelInterpretation,\n    TContext,\n    TInternalStateEventListener,\n    TNativeAudioNode,\n    TNativeAudioParam\n} from '../types';\n\nconst addConnectionToAudioParamOfAudioContext = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number,\n    isOffline: boolean\n): boolean => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n\n    const eventListener: TInternalStateEventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        } else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n\n    if (\n        insertElementInSet(\n            outputs,\n            [destination, output],\n            (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output,\n            true\n        )\n    ) {\n        eventListeners.add(eventListener);\n\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        } else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\nconst deleteInputConnectionOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n        return [passiveInputConnection[2], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n        return [passiveInputConnection[1], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\n\nconst deleteInputsOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioParam,\n    output: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\n\nconst deleteAnyConnection = <T extends TContext>(source: IAudioNode<T>, isOffline: boolean): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        } else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n\n        destinations.push(outputConnection[0]);\n    }\n\n    audioNodeConnectionsOfSource.outputs.clear();\n\n    return destinations;\n};\n\nconst deleteConnectionAtOutput = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    output: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n\n    return destinations;\n};\n\nconst deleteConnectionToDestination = <T extends TContext, U extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<U> | IAudioParam,\n    output?: number,\n    input?: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter(\n            (outputConnection) =>\n                outputConnection[0] === destination &&\n                (output === undefined || outputConnection[1] === output) &&\n                (input === undefined || outputConnection[2] === input)\n        )\n        .map((outputConnection) => {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n\n            return outputConnection[0];\n        });\n};\n\nexport const createAudioNodeConstructor: TAudioNodeConstructorFactory = (\n    addAudioNodeConnections,\n    addConnectionToAudioNode,\n    cacheTestResult,\n    createIncrementCycleCounter,\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    decrementCycleCounter,\n    detectCycles,\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n) => {\n    return class AudioNode<T extends TContext, EventMap extends Record<string, Event> = {}>\n        extends eventTargetConstructor<EventMap>\n        implements IAudioNode<T, EventMap>\n    {\n        private _context: T;\n\n        private _nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode;\n\n        constructor(\n            context: T,\n            isActive: boolean,\n            nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n            audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null\n        ) {\n            super(nativeAudioNode);\n\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n\n            const nativeContext = getNativeContext(context);\n\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (\n                isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })\n            ) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioNode.channelCount;\n        }\n\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n\n        get channelInterpretation(): TChannelInterpretation {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n\n        get context(): T {\n            return this._context;\n        }\n\n        get numberOfInputs(): number {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n\n        get numberOfOutputs(): number {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n\n        public connect<U extends TContext, V extends IAudioNode<U>>(destinationNode: V, output?: number, input?: number): V;\n        public connect(destinationParam: IAudioParam, output?: number): void;\n        // tslint:disable-next-line:invalid-void\n        public connect<U extends TContext, V extends IAudioNode<U>>(destination: V | IAudioParam, output = 0, input = 0): void | V {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(\n                        this._nativeAudioNode,\n                        nativeDestinationAudioNode,\n                        output,\n                        input\n                    );\n\n                    const isPassive = isPassiveAudioNode(this);\n\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                } catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n\n                    throw err;\n                }\n\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(\n                    this,\n                    <IAudioNode<TContext>>destination,\n                    output,\n                    input,\n                    isOffline\n                );\n\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], <IAudioNode<T>>(<unknown>destination));\n\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n\n                return destination;\n            }\n\n            const nativeAudioParam = getNativeAudioParam(destination);\n\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if ((<TNativeAudioParam & { name: string }>nativeAudioParam).name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            } catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n\n        public disconnect(output?: number): void;\n        public disconnect<U extends TContext>(destinationNode: IAudioNode<U>, output?: number, input?: number): void;\n        public disconnect(destinationParam: IAudioParam, output?: number): void;\n        public disconnect<U extends TContext>(\n            destinationOrOutput?: number | IAudioNode<U> | IAudioParam,\n            output?: number,\n            input?: number\n        ): void {\n            let destinations: (IAudioNode<T> | IAudioParam)[];\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            } else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            } else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n","import { IReadOnlyMap } from './interfaces';\n\nexport class ReadOnlyMap<T, U> implements IReadOnlyMap<T, U> {\n    private _map: Map<T, U>;\n\n    constructor(parameters: [T, U][]) {\n        this._map = new Map(parameters);\n    }\n\n    get size(): number {\n        return this._map.size;\n    }\n\n    public entries(): IterableIterator<[T, U]> {\n        return this._map.entries();\n    }\n\n    public forEach(callback: (audioParam: U, name: T, map: ReadOnlyMap<T, U>) => void, thisArg: any = null): void {\n        return this._map.forEach((value: U, key: T) => callback.call(thisArg, value, key, this));\n    }\n\n    public get(name: T): undefined | U {\n        return this._map.get(name);\n    }\n\n    public has(name: T): boolean {\n        return this._map.has(name);\n    }\n\n    public keys(): IterableIterator<T> {\n        return this._map.keys();\n    }\n\n    public values(): IterableIterator<U> {\n        return this._map.values();\n    }\n}\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport {\n    IAudioParam,\n    IAudioWorkletNode,\n    IAudioWorkletNodeEventMap,\n    IAudioWorkletNodeOptions,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TAudioNodeRenderer,\n    TAudioParamMap,\n    TAudioWorkletNodeConstructorFactory,\n    TContext,\n    TErrorEventHandler,\n    TNativeAudioContext,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n} as const;\n\nexport const createAudioWorkletNodeConstructor: TAudioWorkletNodeConstructorFactory = (\n    addUnrenderedAudioWorkletNode,\n    audioNodeConstructor,\n    createAudioParam,\n    createAudioWorkletNodeRenderer,\n    createNativeAudioWorkletNode,\n    getAudioNodeConnections,\n    getBackupOfflineAudioContext,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    sanitizeAudioWorkletNodeOptions,\n    setActiveAudioWorkletNodeInputs,\n    testAudioWorkletNodeOptionsClonability,\n    wrapEventListener\n) => {\n    return class AudioWorkletNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioWorkletNodeEventMap>\n        implements IAudioWorkletNode<T>\n    {\n        private _nativeAudioWorkletNode: TNativeAudioWorkletNode;\n\n        private _onprocessorerror: null | TErrorEventHandler<this>;\n\n        private _parameters: null | TAudioParamMap;\n\n        constructor(context: T, name: string, options?: Partial<IAudioWorkletNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap?.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext =\n                isOffline || nativeContext.state !== 'closed'\n                    ? nativeContext\n                    : getBackupOfflineAudioContext(<TNativeAudioContext>nativeContext) ?? nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(\n                nativeContextOrBackupOfflineAudioContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                nativeAudioWorkletNodeConstructor,\n                name,\n                processorConstructor,\n                mergedOptions\n            );\n            const audioWorkletNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null)\n            );\n\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n\n            const parameters: [string, IAudioParam][] = [];\n\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n\n                parameters.push([nm, audioParam]);\n            });\n\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, <IAudioWorkletNode<IMinimalOfflineAudioContext | IOfflineAudioContext>>this);\n            }\n\n            const { activeInputs } = getAudioNodeConnections(this);\n\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n\n        get onprocessorerror(): null | TErrorEventHandler<this> {\n            return this._onprocessorerror;\n        }\n\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, <EventListenerOrEventListenerObject>value) : null;\n\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : <null | TErrorEventHandler<this>>nativeOnProcessorError;\n        }\n\n        get parameters(): TAudioParamMap {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return <IReadOnlyMap<string, TNativeAudioParam>>this._nativeAudioWorkletNode.parameters;\n            }\n\n            return this._parameters;\n        }\n\n        get port(): MessagePort {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: string]: Float32Array },\n    key: string,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\n    parent: any,\n    key: number | string,\n    channelNumber: number,\n    bufferOffset: number\n): void {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n\n        // Bug #5: Safari does not support copyFromChannel().\n    } else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        } else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n\n            parent[key].set(slicedInput);\n        }\n    }\n}\n","import { TNativeAudioBuffer } from '../types';\n\nexport const copyToChannel = (\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n\n        // Bug #5: Safari does not support copyToChannel().\n    } else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n","export const createNestedArrays = (x: number, y: number | number[]): Float32Array[][] => {\n    const arrays: Float32Array[][] = [];\n\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n\n        const length = typeof y === 'number' ? y : y[i];\n\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n\n        arrays.push(array);\n    }\n\n    return arrays;\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioNode, IAudioWorkletProcessor } from '../interfaces';\nimport { TContext, TNativeAudioWorkletNode, TNativeOfflineAudioContext } from '../types';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioWorkletProcessor = <T extends TContext>(\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    proxy: IAudioNode<T>\n): Promise<IAudioWorkletProcessor> => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport {\n    IAudioWorkletNode,\n    IAudioWorkletNodeOptions,\n    IAudioWorkletProcessorConstructor,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport {\n    TAudioWorkletNodeRendererFactoryFactory,\n    TExposeCurrentFrameAndCurrentTimeFunction,\n    TNativeAudioBuffer,\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeGainNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst processBuffer = async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n    proxy: IAudioWorkletNode<T>,\n    renderedBuffer: null | TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    options: IAudioWorkletNodeOptions,\n    outputChannelCount: number[],\n    processorConstructor: undefined | IAudioWorkletProcessorConstructor,\n    exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction\n): Promise<null | TNativeAudioBuffer> => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer =\n        numberOfOutputChannels === 0\n            ? null\n            : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters: { [name: string]: Float32Array } = Array.from(proxy.parameters.keys()).reduce(\n        (prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n        {}\n    );\n\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                i / nativeOfflineAudioContext.sampleRate,\n                nativeOfflineAudioContext.sampleRate,\n                () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters)\n            );\n\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n\n            if (!activeSourceFlag) {\n                break;\n            }\n        } catch (error) {\n            proxy.dispatchEvent(\n                new ErrorEvent('processorerror', {\n                    colno: error.colno,\n                    filename: error.filename,\n                    lineno: error.lineno,\n                    message: error.message\n                })\n            );\n\n            break;\n        }\n    }\n\n    return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory: TAudioWorkletNodeRendererFactoryFactory = (\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        name: string,\n        options: IAudioWorkletNodeOptions,\n        processorConstructor: undefined | IAudioWorkletProcessorConstructor\n    ) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioWorkletNode | TNativeGainNode>();\n\n        let processedBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IAudioWorkletNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n            let nativeOutputNodes: null | [TNativeChannelSplitterNode, TNativeChannelMergerNode[], TNativeGainNode] = null;\n\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(\n                        createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: outputChannelCount[i]\n                        })\n                    );\n                }\n\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n\n                outputGainNode.connect = <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]\n            );\n\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters =\n                        processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                            numberOfChannels,\n                            // Ceil the length to the next full render quantum.\n                            // Bug #17: Safari does not yet expose the length.\n                            Math.ceil(proxy.context.length / 128) * 128,\n                            nativeOfflineAudioContext.sampleRate\n                        );\n                        const gainNodes: TNativeGainNode[] = [];\n                        const inputChannelSplitterNodes = [];\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(\n                                createNativeGainNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: options.channelCountMode,\n                                    channelInterpretation: options.channelInterpretation,\n                                    gain: 1\n                                })\n                            );\n                            inputChannelSplitterNodes.push(\n                                createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    numberOfOutputs: options.channelCount\n                                })\n                            );\n                        }\n\n                        const constantSourceNodes = await Promise.all(\n                            Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                                const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: audioParam.value\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n\n                                return constantSourceNode;\n                            })\n                        );\n\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                        await Promise.all(\n                            gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode))\n                        );\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n\n                    processedBufferPromise = processBuffer(\n                        proxy,\n                        numberOfChannels === 0 ? null : await renderBuffer(),\n                        nativeOfflineAudioContext,\n                        options,\n                        outputChannelCount,\n                        processorConstructor,\n                        exposeCurrentFrameAndCurrentTime\n                    );\n                }\n\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n\n                return outputGainNode;\n            }\n\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            } else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n\n            return nativeAudioWorkletNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioWorkletNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioWorkletNode | TNativeGainNode> {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IBiquadFilterNode, IBiquadFilterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TBiquadFilterNodeConstructorFactory, TBiquadFilterType, TContext, TNativeBiquadFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n} as const;\n\nexport const createBiquadFilterNodeConstructor: TBiquadFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class BiquadFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IBiquadFilterNode<T> {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _gain: IAudioParam;\n\n        private _nativeBiquadFilterNode: TNativeBiquadFilterNode;\n\n        private _Q: IAudioParam;\n\n        constructor(context: T, options?: Partial<IBiquadFilterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createBiquadFilterNodeRenderer() : null);\n\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.detune,\n                1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT),\n                -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT)\n            );\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.gain,\n                40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT),\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n\n        get Q(): IAudioParam {\n            return this._Q;\n        }\n\n        get type(): TBiquadFilterType {\n            return this._nativeBiquadFilterNode.type;\n        }\n\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            } catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n","import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n","import { IChannelSplitterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelSplitterNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n} as const;\n\nexport const createChannelSplitterNodeConstructor: TChannelSplitterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n) => {\n    return class ChannelSplitterNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelSplitterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioParam, IAudioScheduledSourceNodeEventMap, IConstantSourceNode, IConstantSourceOptions } from '../interfaces';\nimport {\n    TConstantSourceNodeConstructorFactory,\n    TConstantSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeConstantSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n} as const;\n\nexport const createConstantSourceNodeConstructor: TConstantSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRendererFactory,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class ConstantSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IConstantSourceNode<T>\n    {\n        private _constantSourceNodeRenderer: TConstantSourceNodeRenderer<T>;\n\n        private _nativeConstantSourceNode: TNativeConstantSourceNode;\n\n        private _offset: IAudioParam;\n\n        private _onended: null | TEventHandler<this>;\n\n        constructor(context: T, options?: Partial<IConstantSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = <TConstantSourceNodeRenderer<T>>(\n                (isOffline ? createConstantSourceNodeRendererFactory() : null)\n            );\n\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(\n                this,\n                isOffline,\n                nativeConstantSourceNode.offset,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._onended = null;\n        }\n\n        get offset(): IAudioParam {\n            return this._offset;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeConstantSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        public start(when = 0): void {\n            this._nativeConstantSourceNode.start(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeConstantSourceNode.stop(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { IConvolverNode, IConvolverOptions } from '../interfaces';\nimport { TAnyAudioBuffer, TAudioNodeRenderer, TContext, TConvolverNodeConstructorFactory, TNativeConvolverNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n} as const;\n\nexport const createConvolverNodeConstructor: TConvolverNodeConstructorFactory = (\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class ConvolverNode<T extends TContext> extends audioNodeConstructor<T> implements IConvolverNode<T> {\n        private _isBufferNullified: boolean;\n\n        private _nativeConvolverNode: TNativeConvolverNode;\n\n        constructor(context: T, options?: Partial<IConvolverOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createConvolverNodeRenderer() : null);\n\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeConvolverNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n\n                setAudioNodeTailTime(this, 0);\n            } else {\n                this._isBufferNullified = false;\n\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n\n        get normalize(): boolean {\n            return this._nativeConvolverNode.normalize;\n        }\n\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n","export const detachArrayBuffer = (arrayBuffer: ArrayBuffer): Promise<void> => {\n    const { port1, port2 } = new MessageChannel();\n\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n\n            port1.close();\n            port2.close();\n\n            resolve();\n        };\n\n        port2.onmessage = () => closeAndResolve();\n\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        } finally {\n            closeAndResolve();\n        }\n    });\n};\n","import { IAudioParam, IDelayNode, IDelayOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TDelayNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n} as const;\n\nexport const createDelayNodeConstructor: TDelayNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DelayNode<T extends TContext> extends audioNodeConstructor<T> implements IDelayNode<T> {\n        private _delayTime: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDelayOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n\n        get delayTime(): IAudioParam {\n            return this._delayTime;\n        }\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TDisconnectMultipleOutputsFactory, TIndexSizeErrorFactory, TNativeAudioNode } from '../types';\n\nconst getOutputAudioNodeAtIndex = (\n    createIndexSizeError: TIndexSizeErrorFactory,\n    outputAudioNodes: TNativeAudioNode[],\n    output: number\n): TNativeAudioNode => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n\n    return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs: TDisconnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n","import { IAudioParam, IDynamicsCompressorNode, IDynamicsCompressorOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TDynamicsCompressorNodeConstructorFactory,\n    TNativeAudioParam,\n    TNativeDynamicsCompressorNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n} as const;\n\nexport const createDynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DynamicsCompressorNode<T extends TContext> extends audioNodeConstructor<T> implements IDynamicsCompressorNode<T> {\n        private _attack: IAudioParam;\n\n        private _knee: IAudioParam;\n\n        private _nativeDynamicsCompressorNode: TNativeDynamicsCompressorNode;\n\n        private _ratio: IAudioParam;\n\n        private _release: IAudioParam;\n\n        private _threshold: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDynamicsCompressorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDynamicsCompressorNodeRenderer() : null);\n\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n\n            setAudioNodeTailTime(this, 0.006);\n        }\n\n        get attack(): IAudioParam {\n            return this._attack;\n        }\n\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount(): number {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n\n            this._nativeDynamicsCompressorNode.channelCount = value;\n\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        get knee(): IAudioParam {\n            return this._knee;\n        }\n\n        get ratio(): IAudioParam {\n            return this._ratio;\n        }\n\n        get reduction(): number {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value === 'number') {\n                return (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value;\n            }\n\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n\n        get release(): IAudioParam {\n            return this._release;\n        }\n\n        get threshold(): IAudioParam {\n            return this._threshold;\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IGainNode, IGainOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TGainNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n} as const;\n\nexport const createGainNodeConstructor: TGainNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class GainNode<T extends TContext> extends audioNodeConstructor<T> implements IGainNode<T> {\n        private _gain: IAudioParam;\n\n        constructor(context: T, options?: Partial<IGainOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createGainNodeRenderer() : null);\n\n            super(context, false, nativeGainNode, gainNodeRenderer);\n\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n    };\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => new DOMException('', 'InvalidStateError');\n","import { TInvalidAccessErrorFactory } from '../types';\n\nexport const createInvalidAccessError: TInvalidAccessErrorFactory = () => new DOMException('', 'InvalidAccessError');\n","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nimport { IIIRFilterNode, IIIRFilterOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TIIRFilterNodeConstructorFactory, TNativeIIRFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createIIRFilterNodeConstructor: TIIRFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class IIRFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IIIRFilterNode<T> {\n        private _nativeIIRFilterNode: TNativeIIRFilterNode;\n\n        constructor(\n            context: T,\n            options: { feedback: IIIRFilterOptions['feedback']; feedforward: IIIRFilterOptions['feedforward'] } & Partial<IIIRFilterOptions>\n        ) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(\n                nativeContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                mergedOptions\n            );\n            const iirFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null)\n            );\n\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (\n    feedback: Float64Array,\n    feedbackLength: number,\n    feedforward: Float64Array,\n    feedforwardLength: number,\n    minLength: number,\n    xBuffer: Float32Array,\n    yBuffer: Float32Array,\n    bufferIndex: number,\n    bufferLength: number,\n    input: Float32Array,\n    output: Float32Array\n) => {\n    const inputLength = input.length;\n\n    let i = bufferIndex;\n\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n        output[j] = y;\n    }\n\n    return i;\n};\n","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IIIRFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TIIRFilterNodeRendererFactoryFactory,\n    TNativeAudioBuffer,\n    TNativeAudioBufferSourceNode,\n    TNativeIIRFilterNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst filterFullBuffer = (\n    renderedBuffer: TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    feedback: Iterable<number>,\n    feedforward: Iterable<number>\n) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(\n        renderedBuffer.numberOfChannels,\n        renderedBuffer.length,\n        renderedBuffer.sampleRate\n    );\n\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n\n        filterBuffer(\n            convertedFeedback,\n            feedbackLength,\n            convertedFeedforward,\n            feedforwardLength,\n            minLength,\n            xBuffer,\n            yBuffer,\n            0,\n            bufferLength,\n            input,\n            output\n        );\n    }\n\n    return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory: TIIRFilterNodeRendererFactoryFactory = (\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(feedback: Iterable<number>, feedforward: Iterable<number>) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode | TNativeIIRFilterNode>();\n\n        let filteredBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IIIRFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode: null | TNativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode<T, TNativeIIRFilterNode>(proxy);\n\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(<number[]>feedforward, <number[]>feedback);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode\n            );\n\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                        proxy.context.destination.channelCount,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n\n                const filteredBuffer = await filteredBufferPromise;\n\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n\n                return nativeAudioBufferSourceNode;\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n\n            return nativeIIRFilterNode;\n        };\n\n        return {\n            render(\n                proxy: IIIRFilterNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode | TNativeIIRFilterNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n","import { TNativeContext } from '../types';\n\nexport const testPromiseSupport = (nativeContext: TNativeContext): boolean => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(<ArrayBuffer>uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n\n        if (promise === undefined) {\n            return false;\n        }\n\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n\n        return true;\n    } catch {\n        // Ignore errors.\n    }\n\n    return false;\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IMinimalOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TMinimalOfflineAudioContextConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createMinimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructorFactory = (\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor<IMinimalOfflineAudioContext>\n        implements IMinimalOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","export const assignNativeAudioNodeOption = <T extends keyof any, U extends any>(\n    nativeAudioNode: Record<T, U>,\n    options: Record<T, U>,\n    option: T\n) => {\n    const value = options[option];\n\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n","import { IAudioNodeOptions } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\nimport { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\n\nexport const assignNativeAudioNodeOptions = (nativeAudioNode: TNativeAudioNode, options: IAudioNodeOptions): void => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode: TNativeAnalyserNode): boolean => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n","export const assignNativeAudioNodeAudioParamValue = <T extends { [key: string]: any }, U extends { [key: string]: any }>(\n    nativeAudioNode: T,\n    options: U,\n    audioParam: keyof T & keyof U\n) => {\n    const value = options[audioParam];\n\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            (<(when: number, offset: number, duration?: number) => void>start).call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n","import { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\n\nexport const createAudioWorkletProcessorPromise = async (\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nimport { TNativeChannelSplitterNodeFactory } from '../types';\n\nexport const createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n\n    return nativeChannelSplitterNode;\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n","import { TNativeAudioNode } from '../types';\n\nexport const interceptConnections = <T extends object>(\n    original: T,\n    interceptor: TNativeAudioNode\n): T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] } => {\n    (<T & { connect: TNativeAudioNode['connect'] }>original).connect = interceptor.connect.bind(interceptor);\n\n    (<T & { disconnect: TNativeAudioNode['disconnect'] }>original).disconnect = interceptor.disconnect.bind(interceptor);\n\n    return <T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] }>original;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDelayNodeFactory } from '../types';\n\nexport const createNativeDelayNode: TNativeDelayNodeFactory = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n\n    return nativeDelayNode;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeGainNodeFactory } from '../types';\n\nexport const createNativeGainNode: TNativeGainNodeFactory = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n\n    return nativeGainNode;\n};\n","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeIIRFilterNode, TNativeIIRFilterNodeFakerFactoryFactory } from '../types';\n\nfunction divide(a: [number, number], b: [number, number]): [number, number] {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a: [number, number], b: [number, number]): [number, number] {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient: Float64Array, z: [number, number]): [number, number] {\n    let result: [number, number] = [0, 0];\n\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n\n        result[0] += coefficient[i];\n    }\n\n    return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory: TNativeIIRFilterNodeFakerFactoryFactory = (\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n\n        const bufferLength = 32;\n        const bufferIndexes: number[] = [];\n        const xBuffers: Float32Array[] = [];\n        const yBuffers: Float32Array[] = [];\n\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event: AudioProcessingEvent) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n\n            const numberOfChannels = inputBuffer.numberOfChannels;\n\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n\n                bufferIndexes[i] = filterBuffer(\n                    convertedFeedback,\n                    feedbackLength,\n                    convertedFeedforward,\n                    feedforwardLength,\n                    minLength,\n                    xBuffers[i],\n                    yBuffers[i],\n                    bufferIndexes[i],\n                    bufferLength,\n                    input,\n                    output\n                );\n            }\n        };\n\n        const nyquist = nativeContext.sampleRate / 2;\n\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeIIRFilterNode['channelCountMode'] {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeIIRFilterNode['channelInterpretation'] {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context(): TNativeIIRFilterNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs(): number {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args: any[]): void {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n\n                const length = frequencyHz.length;\n\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z: [number, number] = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n","import { TCacheTestResultFactory } from '../types';\n\nexport const createCacheTestResult: TCacheTestResultFactory = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n\n        const ongoingTest = ongoingTests.get(tester);\n\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n\n        try {\n            const synchronousTestResult = test();\n\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                        ongoingTests.delete(tester);\n                        testResults.set(tester, finalTestResult);\n\n                        return finalTestResult;\n                    });\n            }\n\n            testResults.set(tester, synchronousTestResult);\n\n            return synchronousTestResult;\n        } catch {\n            testResults.set(tester, false);\n\n            return false;\n        }\n    };\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TContext, TGetNativeContextFactory, TNativeAudioContext, TNativeOfflineAudioContext } from '../types';\nimport { createInvalidStateError } from './invalid-state-error';\n\nexport const createGetNativeContext: TGetNativeContextFactory = (contextStore) => {\n    return <T extends TContext>(\n        context: T\n    ): T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext => {\n        const nativeContext = contextStore.get(context);\n\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n\n        return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext>(\n            nativeContext\n        );\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TActiveInputConnection, TAddAudioNodeConnectionsFactory, TContext, TNativeAudioNode } from '../types';\n\nexport const createAddAudioNodeConnections: TAddAudioNodeConnectionsFactory = (audioNodeConnectionsStore) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null,\n        nativeAudioNode: TNativeAudioNode\n    ) => {\n        const activeInputs = [];\n\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set<TActiveInputConnection<T>>());\n        }\n\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n","import { TConvertNumberToUnsignedLongFactory } from '../types';\n\nexport const createConvertNumberToUnsignedLong: TConvertNumberToUnsignedLongFactory = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n\n        return unit32Array[0];\n    };\n};\n","import { IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAddAudioParamConnectionsFactory, TContext } from '../types';\n\nexport const createAddAudioParamConnections: TAddAudioParamConnectionsFactory = (audioParamConnectionsStore) => {\n    return <T extends TContext>(\n        audioParam: IAudioParam,\n        audioParamRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null\n    ) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n","import { TNativeScriptProcessorNodeFactory } from '../types';\n\nexport const createNativeScriptProcessorNode: TNativeScriptProcessorNodeFactory = (\n    nativeContext,\n    bufferSize,\n    numberOfInputChannels,\n    numberOfOutputChannels\n) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => new DOMException('', 'NotSupportedError');\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TNativeOfflineAudioContext, TOfflineAudioContextConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createOfflineAudioContextConstructor: TOfflineAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor<IOfflineAudioContext> implements IOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions);\n        constructor(numberOfChannels: number, length: number, sampleRate: number);\n        constructor(a: number | IOfflineAudioContextOptions, b?: number, c?: number) {\n            let options: IOfflineAudioContextOptions;\n\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            } else if (typeof a === 'object') {\n                options = a;\n            } else {\n                throw new Error('The given parameters are not valid.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport {\n    IAudioParam,\n    IAudioScheduledSourceNodeEventMap,\n    IMinimalOfflineAudioContext,\n    IOscillatorNode,\n    IOscillatorNodeRenderer,\n    IOscillatorOptions\n} from '../interfaces';\nimport {\n    TContext,\n    TEventHandler,\n    TNativeOscillatorNode,\n    TOscillatorNodeConstructorFactory,\n    TOscillatorNodeRenderer,\n    TOscillatorType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n} as const;\n\nexport const createOscillatorNodeConstructor: TOscillatorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class OscillatorNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IOscillatorNode<T>\n    {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _nativeOscillatorNode: TNativeOscillatorNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _oscillatorNodeRenderer: TOscillatorNodeRenderer<T>;\n\n        constructor(context: T, options?: Partial<IOscillatorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = <TOscillatorNodeRenderer<T>>(isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                (<IOscillatorNodeRenderer<IMinimalOfflineAudioContext>>this._oscillatorNodeRenderer).periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeOscillatorNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get type(): TOscillatorType {\n            return this._nativeOscillatorNode.type;\n        }\n\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n\n        public setPeriodicWave(periodicWave: PeriodicWave): void {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n\n        public start(when = 0): void {\n            this._nativeOscillatorNode.start(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeOscillatorNode.stop(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IPannerNode, IPannerOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TContext,\n    TDistanceModelType,\n    TNativePannerNode,\n    TPannerNodeConstructorFactory,\n    TPanningModelType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n} as const;\n\nexport const createPannerNodeConstructor: TPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class PannerNode<T extends TContext> extends audioNodeConstructor<T> implements IPannerNode<T> {\n        private _nativePannerNode: TNativePannerNode;\n\n        private _orientationX: IAudioParam;\n\n        private _orientationY: IAudioParam;\n\n        private _orientationZ: IAudioParam;\n\n        private _positionX: IAudioParam;\n\n        private _positionY: IAudioParam;\n\n        private _positionZ: IAudioParam;\n\n        constructor(context: T, options?: Partial<IPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createPannerNodeRenderer() : null);\n\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get coneInnerAngle(): number {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n\n        get coneOuterAngle(): number {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n\n        get coneOuterGain(): number {\n            return this._nativePannerNode.coneOuterGain;\n        }\n\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n\n        get distanceModel(): TDistanceModelType {\n            return this._nativePannerNode.distanceModel;\n        }\n\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n\n        get maxDistance(): number {\n            return this._nativePannerNode.maxDistance;\n        }\n\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n\n        get orientationX(): IAudioParam {\n            return this._orientationX;\n        }\n\n        get orientationY(): IAudioParam {\n            return this._orientationY;\n        }\n\n        get orientationZ(): IAudioParam {\n            return this._orientationZ;\n        }\n\n        get panningModel(): TPanningModelType {\n            return this._nativePannerNode.panningModel;\n        }\n\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n\n        get positionX(): IAudioParam {\n            return this._positionX;\n        }\n\n        get positionY(): IAudioParam {\n            return this._positionY;\n        }\n\n        get positionZ(): IAudioParam {\n            return this._positionZ;\n        }\n\n        get refDistance(): number {\n            return this._nativePannerNode.refDistance;\n        }\n\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n\n        get rolloffFactor(): number {\n            return this._nativePannerNode.rolloffFactor;\n        }\n\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n","import { IPeriodicWave, IPeriodicWaveOptions } from '../interfaces';\nimport { TContext, TPeriodicWaveConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n} as const;\n\nexport const createPeriodicWaveConstructor: TPeriodicWaveConstructorFactory = (\n    createNativePeriodicWave,\n    getNativeContext,\n    periodicWaveStore,\n    sanitizePeriodicWaveOptions\n) => {\n    return class PeriodicWave<T extends TContext> implements IPeriodicWave {\n        constructor(context: T, options?: Partial<IPeriodicWaveOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n\n            periodicWaveStore.add(periodicWave);\n\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(<any>instance)\n            );\n        }\n    };\n};\n","import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n","import { TUnknownErrorFactory } from '../types';\n\nexport const createUnknownError: TUnknownErrorFactory = () => new DOMException('', 'UnknownError');\n","import { IWaveShaperNode, IWaveShaperOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TNativeWaveShaperNode, TOverSampleType, TWaveShaperNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n} as const;\n\nexport const createWaveShaperNodeConstructor: TWaveShaperNodeConstructorFactory = (\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class WaveShaperNode<T extends TContext> extends audioNodeConstructor<T> implements IWaveShaperNode<T> {\n        private _isCurveNullified: boolean;\n\n        private _nativeWaveShaperNode: TNativeWaveShaperNode;\n\n        constructor(context: T, options?: Partial<IWaveShaperOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createWaveShaperNodeRenderer() : null);\n\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get curve(): null | Float32Array {\n            if (this._isCurveNullified) {\n                return null;\n            }\n\n            return this._nativeWaveShaperNode.curve;\n        }\n\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            } else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n\n        get oversample(): TOverSampleType {\n            return this._nativeWaveShaperNode.oversample;\n        }\n\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n","import { TGetFirstSampleFunction } from '../types';\n\nexport const getFirstSample: TGetFirstSampleFunction = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n\n    return buffer[0];\n};\n","import { TIsDCCurveFunction } from '../types';\n\nexport const isDCCurve: TIsDCCurveFunction = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n\n    const length = curve.length;\n\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n","import { TOverwriteAccessorsFunction } from '../types';\n\nexport const overwriteAccessors: TOverwriteAccessorsFunction = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n\n    const { get, set } = <Required<PropertyDescriptor>>Object.getOwnPropertyDescriptor(prototype, property);\n\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeAudioNode, TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction } from '../types';\nimport { interceptConnections } from './intercept-connections';\n\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls: TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction = (\n    nativeAudioScheduledSourceNode,\n    nativeContext\n) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            (<(destinaton: TNativeAudioNode) => void>disconnect).call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                } catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            } else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","import {\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent\n} from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport {\n    AUDIO_NODE_CONNECTIONS_STORE,\n    AUDIO_NODE_STORE,\n    AUDIO_PARAM_CONNECTIONS_STORE,\n    AUDIO_PARAM_STORE,\n    CONTEXT_STORE,\n    CYCLE_COUNTERS\n} from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\nimport {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioContext,\n    IAudioNode,\n    IAudioWorkletNode,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IOfflineAudioContextConstructor,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IStereoPannerNode,\n    IWaveShaperNode\n} from './interfaces';\nimport {\n    TActiveAudioWorkletNodeInputsStore,\n    TAddAudioWorkletModuleFunction,\n    TAnalyserNodeConstructor,\n    TAudioBufferConstructor,\n    TAudioBufferSourceNodeConstructor,\n    TAudioBufferStore,\n    TAudioContextConstructor,\n    TAudioParamAudioNodeStore,\n    TAudioWorkletNodeConstructor,\n    TBackupOfflineAudioContextStore,\n    TBiquadFilterNodeConstructor,\n    TChannelMergerNodeConstructor,\n    TChannelSplitterNodeConstructor,\n    TConstantSourceNodeConstructor,\n    TContext,\n    TConvolverNodeConstructor,\n    TDecodeAudioDataFunction,\n    TDelayNodeConstructor,\n    TDynamicsCompressorNodeConstructor,\n    TGainNodeConstructor,\n    TIIRFilterNodeConstructor,\n    TMediaElementAudioSourceNodeConstructor,\n    TMediaStreamAudioDestinationNodeConstructor,\n    TMediaStreamAudioSourceNodeConstructor,\n    TMediaStreamTrackAudioSourceNodeConstructor,\n    TMinimalAudioContextConstructor,\n    TMinimalOfflineAudioContextConstructor,\n    TOscillatorNodeConstructor,\n    TPannerNodeConstructor,\n    TPeriodicWaveConstructor,\n    TStereoPannerNodeConstructor,\n    TUnrenderedAudioWorkletNodeStore,\n    TWaveShaperNodeConstructor\n} from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore: TAudioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(\n    createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),\n    createAddConnectionToAudioNode(\n        addActiveInputConnectionToAudioNode,\n        addPassiveInputConnectionToAudioNode,\n        connectNativeAudioNodeToNativeAudioNode,\n        deleteActiveInputConnectionToAudioNode,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getAudioNodeTailTime,\n        getEventListenersOfAudioNode,\n        getNativeAudioNode,\n        insertElementInSet,\n        isActiveAudioNode,\n        isPartOfACycle,\n        isPassiveAudioNode\n    ),\n    cacheTestResult,\n    createIncrementCycleCounterFactory(\n        CYCLE_COUNTERS,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        isActiveAudioNode\n    ),\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    createDecrementCycleCounter(\n        connectNativeAudioNodeToNativeAudioNode,\n        CYCLE_COUNTERS,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        getNativeContext,\n        isActiveAudioNode,\n        isNativeOfflineAudioContext\n    ),\n    createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey),\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n);\nconst analyserNodeConstructor: TAnalyserNodeConstructor = createAnalyserNodeConstructor(\n    audioNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\n\ntype analyserNodeConstructor<T extends TContext> = IAnalyserNode<T>;\n\nexport { analyserNodeConstructor as AnalyserNode };\n\nconst audioBufferStore: TAudioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor: TAudioBufferConstructor = createAudioBufferConstructor(\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\ntype audioBufferConstructor = IAudioBuffer;\n\nexport { audioBufferConstructor as AudioBuffer };\n\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClamping,\n    createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst createAudioParam = createAudioParamFactory(\n    createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),\n    audioParamAudioNodeStore,\n    AUDIO_PARAM_STORE,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n);\nconst audioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\n\ntype audioBufferSourceNodeConstructor<T extends TContext> = IAudioBufferSourceNode<T>;\n\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\n\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors),\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor: TBiquadFilterNodeConstructor = createBiquadFilterNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelMergerNodeConstructor: TChannelMergerNodeConstructor = createChannelMergerNodeConstructor(\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelSplitterNodeConstructor: TChannelSplitterNodeConstructor = createChannelSplitterNodeConstructor(\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst constantSourceNodeConstructor: TConstantSourceNodeConstructor = createConstantSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRenderer,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst convolverNodeConstructor: TConvolverNodeConstructor = createConvolverNodeConstructor(\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst delayNodeConstructor: TDelayNodeConstructor = createDelayNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst dynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createGainNodeRenderer = createGainNodeRendererFactory(\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst gainNodeConstructor: TGainNodeConstructor = createGainNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor)\n);\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor: TIIRFilterNodeConstructor = createIIRFilterNodeConstructor(\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createAudioListener = createAudioListenerFactory(\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n);\nconst unrenderedAudioWorkletNodeStore: TUnrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst oscillatorNodeConstructor: TOscillatorNodeConstructor = createOscillatorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst pannerNodeConstructor: TPannerNodeConstructor = createPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor: TPeriodicWaveConstructor = createPeriodicWaveConstructor(\n    createNativePeriodicWave,\n    getNativeContext,\n    new WeakSet(),\n    sanitizePeriodicWaveOptions\n);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst stereoPannerNodeConstructor: TStereoPannerNodeConstructor = createStereoPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst waveShaperNodeConstructor: TWaveShaperNodeConstructor = createWaveShaperNodeConstructor(\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore: TBackupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n);\n\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule: undefined | TAddAudioWorkletModuleFunction = isSecureContext\n    ? createAddAudioWorkletModule(\n          cacheTestResult,\n          createNotSupportedError,\n          createEvaluateSource(window),\n          exposeCurrentFrameAndCurrentTime,\n          createFetchSource(createAbortError),\n          getNativeContext,\n          getOrCreateBackupOfflineAudioContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          new WeakMap(),\n          new WeakMap(),\n          createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n          // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n          <NonNullable<typeof window>>window\n      )\n    : undefined;\n\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\n\nexport const decodeAudioData: TDecodeAudioDataFunction = createDecodeAudioData(\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    new WeakSet(),\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n);\nconst mediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructor =\n    createMediaStreamAudioDestinationNodeConstructor(\n        audioNodeConstructor,\n        createNativeMediaStreamAudioDestinationNode,\n        getNativeContext,\n        isNativeOfflineAudioContext\n    );\nconst mediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructor =\n    createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor: TAudioContextConstructor = createAudioContextConstructor(\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n);\n\ntype audioContextConstructor = IAudioContext;\n\nexport { audioContextConstructor as AudioContext };\n\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore: TActiveAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor: undefined | TAudioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(\n          addUnrenderedAudioWorkletNode,\n          audioNodeConstructor,\n          createAudioParam,\n          createAudioWorkletNodeRenderer,\n          createNativeAudioWorkletNode,\n          getAudioNodeConnections,\n          getBackupOfflineAudioContext,\n          getNativeContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          sanitizeAudioWorkletNodeOptions,\n          setActiveAudioWorkletNodeInputs,\n          testAudioWorkletNodeOptionsClonability,\n          wrapEventListener\n      )\n    : undefined;\n\ntype audioWorkletNodeConstructor<T extends TContext> = undefined | IAudioWorkletNode<T>;\n\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\n\ntype biquadFilterNodeConstructor<T extends TContext> = IBiquadFilterNode<T>;\n\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\n\ntype channelMergerNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelMergerNodeConstructor as ChannelMergerNode };\n\ntype channelSplitterNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\n\ntype constantSourceNodeConstructor<T extends TContext> = IConstantSourceNode<T>;\n\nexport { convolverNodeConstructor as ConvolverNode };\n\ntype convolverNodeConstructor<T extends TContext> = IConvolverNode<T>;\n\nexport { constantSourceNodeConstructor as ConstantSourceNode };\n\ntype delayNodeConstructor<T extends TContext> = IDelayNode<T>;\n\nexport { delayNodeConstructor as DelayNode };\n\ntype dynamicsCompressorNodeConstructor<T extends TContext> = IDynamicsCompressorNode<T>;\n\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\n\ntype gainNodeConstructor<T extends TContext> = IGainNode<T>;\n\nexport { gainNodeConstructor as GainNode };\n\ntype iIRFilterNodeConstructor<T extends TContext> = IIIRFilterNode<T>;\n\nexport { iIRFilterNodeConstructor as IIRFilterNode };\n\ntype mediaElementAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaElementAudioSourceNode<T>;\n\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\n\ntype mediaStreamAudioDestinationNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioDestinationNode<T>;\n\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\n\ntype mediaStreamAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioSourceNode<T>;\n\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\n\ntype mediaStreamTrackAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamTrackAudioSourceNode<T>;\n\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\n\nconst minimalAudioContextConstructor: TMinimalAudioContextConstructor = createMinimalAudioContextConstructor(\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n);\n\ntype minimalAudioContextConstructor = IMinimalAudioContext;\n\nexport { minimalAudioContextConstructor as MinimalAudioContext };\n\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n);\nconst startRendering = createStartRendering(\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\nconst minimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n);\n\ntype minimalOfflineAudioContextConstructor = IMinimalOfflineAudioContext;\n\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\n\nconst offlineAudioContextConstructor: IOfflineAudioContextConstructor = createOfflineAudioContextConstructor(\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n);\n\ntype offlineAudioContextConstructor = IOfflineAudioContext;\n\nexport { offlineAudioContextConstructor as OfflineAudioContext };\n\ntype oscillatorNodeConstructor<T extends TContext> = IOscillatorNode<T>;\n\nexport { oscillatorNodeConstructor as OscillatorNode };\n\ntype pannerNodeConstructor<T extends TContext> = IPannerNode<T>;\n\nexport { pannerNodeConstructor as PannerNode };\n\ntype periodicWaveConstructor = IPeriodicWave;\n\nexport { periodicWaveConstructor as PeriodicWave };\n\ntype stereoPannerNodeConstructor<T extends TContext> = IStereoPannerNode<T>;\n\nexport { stereoPannerNodeConstructor as StereoPannerNode };\n\ntype waveShaperNodeConstructor<T extends TContext> = IWaveShaperNode<T>;\n\nexport { waveShaperNodeConstructor as WaveShaperNode };\n\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\n\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\n\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\n\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\n\nexport const isSupported = () =>\n    createIsSupportedPromise(\n        cacheTestResult,\n        createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),\n        createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextOptionsSupport(nativeAudioContextConstructor),\n        createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n        createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        testDomExceptionConstructorSupport,\n        createTestIsSecureContextSupport(window),\n        createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),\n        createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),\n        testTransferablesSupport\n    );\n","import { TAddActiveInputConnectionToAudioNodeFactory } from '../types/add-active-input-connection-to-audio-node-factory';\n\nexport const createAddActiveInputConnectionToAudioNode: TAddActiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(\n            activeInputs[input],\n            [source, output, eventListener],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n            ignoreDuplicates\n        );\n    };\n};\n","import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n","import { TDeleteActiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createDeleteActiveInputConnectionToAudioNode: TDeleteActiveInputConnectionToAudioNodeFactory = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(\n            activeInputs[input],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n        );\n    };\n};\n","import { TGetAudioNodeTailTimeFactory } from '../types';\n\nexport const createGetAudioNodeTailTime: TGetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode) => audioNodeTailTimeStore.get(audioNode) ?? 0;\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nimport { TNativeAnalyserNodeFactoryFactory } from '../types';\n\nexport const createNativeAnalyserNodeFactory: TNativeAnalyserNodeFactoryFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (\n            !cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () =>\n                testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode)\n            )\n        ) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n\n        return nativeAnalyserNode;\n    };\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode: TNativeAnalyserNode): void => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array: Float32Array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n\n        return array;\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TRenderInputsOfAudioNodeFactory } from '../types';\n\nexport const createRenderInputsOfAudioNode: TRenderInputsOfAudioNodeFactory = (\n    getAudioNodeConnections,\n    getAudioNodeRenderer,\n    isPartOfACycle\n) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        await Promise.all(\n            audioNodeConnections.activeInputs\n                .map((connections, input) =>\n                    Array.from(connections).map(async ([source, output]) => {\n                        const audioNodeRenderer = getAudioNodeRenderer(source);\n                        const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n                        const destination = <IAudioDestinationNode<typeof audioNode.context>>audioNode.context.destination;\n\n                        if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                            renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n                        }\n                    })\n                )\n                .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], [])\n        );\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAnalyserNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAnalyserNodeRendererFactoryFactory, TNativeAnalyserNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAnalyserNodeRendererFactory: TAnalyserNodeRendererFactoryFactory = (\n    createNativeAnalyserNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAnalyserNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAnalyserNode>();\n\n        const createAnalyserNode = async (proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode<T, TNativeAnalyserNode>(proxy);\n\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n\n            return nativeAnalyserNode;\n        };\n\n        return {\n            render(proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAnalyserNode> {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativeOfflineAudioContextConstructorFactory } from '../types';\n\nexport const createNativeOfflineAudioContextConstructor: TNativeOfflineAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? (<any>window).webkitOfflineAudioContext : null;\n};\n","import { TIsNativeOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsNativeOfflineAudioContext: TIsNativeOfflineAudioContextFactory = (nativeOfflineAudioContextConstructor) => {\n    return (anything): anything is TNativeOfflineAudioContext => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n","import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TNativeAudioContextConstructorFactory } from '../types';\n\nexport const createNativeAudioContextConstructor: TNativeAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n\n    return window.hasOwnProperty('webkitAudioContext') ? (<any>window).webkitAudioContext : null;\n};\n","import { TIsNativeAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeAudioContext: TIsNativeAudioContextFactory = (nativeAudioContextConstructor) => {\n    return (anything): anything is TNativeAudioContext => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n","import { TIsNativeAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsNativeAudioNode: TIsNativeAudioNodeFactory = (window) => {\n    return (anything): anything is TNativeAudioNode => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n","import { TIsNativeAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsNativeAudioParam: TIsNativeAudioParamFactory = (window) => {\n    return (anything): anything is TNativeAudioParam => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n","import { TNativeAudioWorkletNodeConstructorFactory } from '../types';\n\nexport const createNativeAudioWorkletNodeConstructor: TNativeAudioWorkletNodeConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { IAudioNode } from '../interfaces';\nimport { TAddConnectionToAudioNodeFactory, TContext, TInternalStateEventListener } from '../types';\n\nexport const createAddConnectionToAudioNode: TAddConnectionToAudioNodeFactory = (\n    addActiveInputConnectionToAudioNode,\n    addPassiveInputConnectionToAudioNode,\n    connectNativeAudioNodeToNativeAudioNode,\n    deleteActiveInputConnectionToAudioNode,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getAudioNodeTailTime,\n    getEventListenersOfAudioNode,\n    getNativeAudioNode,\n    insertElementInSet,\n    isActiveAudioNode,\n    isPartOfACycle,\n    isPassiveAudioNode\n) => {\n    const tailTimeTimeoutIds = new WeakMap<IAudioNode<TContext>, number>();\n\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n\n        const eventListener: TInternalStateEventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            } else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                const tailTime = getAudioNodeTailTime(destination);\n\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                } else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n\n                    tailTimeTimeoutIds.set(\n                        destination,\n                        setTimeout(() => {\n                            if (isActiveAudioNode(destination)) {\n                                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                            }\n                        }, tailTime * 1000)\n                    );\n                }\n            }\n        };\n\n        if (\n            insertElementInSet(\n                outputs,\n                [destination, output, input],\n                (outputConnection) =>\n                    outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input,\n                true\n            )\n        ) {\n            eventListeners.add(eventListener);\n\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            } else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n\n            return true;\n        }\n\n        return false;\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TIncrementCycleCounterFactoryFactory } from '../types';\n\nexport const createIncrementCycleCounterFactory: TIncrementCycleCounterFactoryFactory = (\n    cycleCounters,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    isActiveAudioNode\n) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                            disconnectNativeAudioNodeFromNativeAudioNode(\n                                nativeSourceAudioNode,\n                                nativeDestinationAudioNode,\n                                output[1],\n                                output[2]\n                            );\n                        } else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n\n                cycleCounters.set(audioNode, count);\n            } else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TDecrementCycleCounterFactory } from '../types';\n\nexport const createDecrementCycleCounter: TDecrementCycleCounterFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    cycleCounters,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    getNativeContext,\n    isActiveAudioNode,\n    isNativeOfflineAudioContext\n) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    } else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        } else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nimport { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext, TDetectCyclesFactory } from '../types';\n\nexport const createDetectCycles: TDetectCyclesFactory = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles<T extends TContext>(chain: IAudioNode<T>[], nextLink: IAudioNode<T> | IAudioParam): IAudioNode<T>[][] {\n        const audioNode = isAudioNode(nextLink) ? nextLink : <IAudioNode<T>>getValueForKey(audioParamAudioNodeStore, nextLink);\n\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n\n        const { outputs } = getAudioNodeConnections(audioNode);\n\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n","import { IAudioNode, IDelayNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isDelayNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IDelayNode<T> => {\n    return 'delayTime' in audioNode;\n};\n","import { TNativeAudioBufferConstructorFactory } from '../types';\n\nexport const createNativeAudioBufferConstructor: TNativeAudioBufferConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n\n    return null;\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFactory = (\n    convertNumberToUnsignedLong,\n    createIndexSizeError\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory = (\n    convertNumberToUnsignedLong\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n","import { TTestAudioBufferConstructorSupportFactory } from '../types';\n\n// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport: TTestAudioBufferConstructorSupportFactory = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n","import { IAudioParam, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TNativeAudioParam, TNativeOfflineAudioContext, TRenderInputsOfAudioParamFactory } from '../types';\n\nexport const createRenderInputsOfAudioParam: TRenderInputsOfAudioParamFactory = (\n    getAudioNodeRenderer,\n    getAudioParamConnections,\n    isPartOfACycle\n) => {\n    return async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioParam: IAudioParam,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        nativeAudioParam: TNativeAudioParam\n    ): Promise<void> => {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        await Promise.all(\n            Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n                const audioNodeRenderer = getAudioNodeRenderer(source);\n                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n\n                if (!isPartOfACycle(source)) {\n                    renderedNativeAudioNode.connect(nativeAudioParam, output);\n                }\n            })\n        );\n    };\n};\n","import { TConnectAudioParamFactory } from '../types';\n\nexport const createConnectAudioParam: TConnectAudioParamFactory = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeAudioBufferSourceNodeFactory: TNativeAudioBufferSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClampling,\n    wrapAudioBufferSourceNodeStopMethodNullifiedBuffer,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n\n        // Bug #149: Safari does not yet support the detune AudioParam.\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () =>\n                testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () =>\n                testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () =>\n                testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n\n        return nativeAudioBufferSourceNode;\n    };\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n\n        return (when = 0, offset = 0, duration?: number) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.start();\n    } catch {\n        return true;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            } else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory } from '../types';\n\nexport const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer: TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory = (\n    overwriteAccessors\n) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n\n        overwriteAccessors(\n            nativeAudioBufferSourceNode,\n            'buffer',\n            (get) => () => {\n                const value = get.call(nativeAudioBufferSourceNode);\n\n                return value === nullifiedBuffer ? null : value;\n            },\n            (set) => (value) => {\n                return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n            }\n        );\n    };\n};\n","import { TRenderAutomationFactory } from '../types';\n\nexport const createRenderAutomation: TRenderAutomationFactory = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n\n        audioParamRenderer.replay(nativeAudioParam);\n\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { IMinimalOfflineAudioContext } from '../interfaces';\nimport { TGetAudioParamRendererFactory } from '../types';\n\nexport const createGetAudioParamRenderer: TGetAudioParamRendererFactory = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections<IMinimalOfflineAudioContext>(audioParam);\n\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n\n        return audioParamConnections.renderer;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioBufferSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioBufferSourceNodeRendererFactoryFactory, TNativeAudioBufferSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAudioBufferSourceNodeRendererFactory: TAudioBufferSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode>();\n\n        let start: null | [number, number] | [number, number, number] = null;\n        let stop: null | number = null;\n\n        const createAudioBufferSourceNode = async (\n            proxy: IAudioBufferSourceNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode<T, TNativeAudioBufferSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            } else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            return nativeAudioBufferSourceNode;\n        };\n\n        return {\n            set start(value: [number, number] | [number, number, number]) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IAudioBufferSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode> {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { AutomationEventList } from 'automation-events';\nimport { IAudioNode, IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioParamFactoryFactory, TContext, TNativeAudioParam } from '../types';\n\nexport const createAudioParamFactory: TAudioParamFactoryFactory = (\n    addAudioParamConnections,\n    audioParamAudioNodeStore,\n    audioParamStore,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        isAudioParamOfOfflineAudioContext: boolean,\n        nativeAudioParam: TNativeAudioParam,\n        maxValue: null | number = null,\n        minValue: null | number = null\n    ): IAudioParam => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue(): number {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue(): number {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue(): number {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value(): number {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime: number): IAudioParam {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                } else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n\n                    const currentLastEvent = Array.from(automationEventList).pop();\n\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        } else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(\n                                currentLastEvent.values,\n                                currentLastEvent.startTime,\n                                currentLastEvent.duration\n                            );\n                        }\n                    }\n                }\n\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            linearRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            setTargetAtTime(target: number, startTime: number, timeConstant: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n\n                return audioParam;\n            },\n            setValueAtTime(value: number, startTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n\n                return audioParam;\n            },\n            setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): IAudioParam {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n\n                    const timeOfLastSample = lastSample / sampleRate;\n\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                } else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n\n                return audioParam;\n            }\n        };\n\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n\n        addAudioParamConnections(\n            audioParam,\n            <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null>audioParamRenderer\n        );\n\n        return audioParam;\n    };\n};\n","import { TAudioParamRendererFactory, TNativeAudioParam } from '../types';\n\nexport const createAudioParamRenderer: TAudioParamRendererFactory = (automationEventList) => {\n    return {\n        replay(audioParam: TNativeAudioParam): void {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                } else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n\n                    audioParam.setValueAtTime(value, startTime);\n                } else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                } else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n","import { TSetValueAtTimeUntilPossibleFunction } from '../types';\n\nexport const setValueAtTimeUntilPossible: TSetValueAtTimeUntilPossibleFunction = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    } catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n","import { IAudioDestinationNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TAudioDestinationNodeRendererFactory,\n    TNativeAudioDestinationNode,\n    TNativeOfflineAudioContext,\n    TRenderInputsOfAudioNodeFunction\n} from '../types';\n\nexport const createAudioDestinationNodeRenderer: TAudioDestinationNodeRendererFactory = <\n    T extends IMinimalOfflineAudioContext | IOfflineAudioContext\n>(\n    renderInputsOfAudioNode: TRenderInputsOfAudioNodeFunction\n) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioDestinationNode>();\n\n    const createAudioDestinationNode = async (proxy: IAudioDestinationNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        return nativeAudioDestinationNode;\n    };\n\n    return {\n        render(\n            proxy: IAudioDestinationNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ): Promise<TNativeAudioDestinationNode> {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n","import { TNativeAudioDestinationNode, TNativeAudioDestinationNodeFactoryFactory, TNativeGainNode } from '../types';\n\nexport const createNativeAudioDestinationNodeFactory: TNativeAudioDestinationNodeFactoryFactory = (\n    createNativeGainNode,\n    overwriteAccessors\n) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            } catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n\n        overwriteAccessors(\n            gainNode,\n            'channelCount',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n\n                try {\n                    nativeAudioDestinationNode.channelCount = value;\n                } catch (err) {\n                    // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                    if (value > nativeAudioDestinationNode.maxChannelCount) {\n                        throw err;\n                    }\n                }\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelCountMode',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelCountMode = value;\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelInterpretation',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelInterpretation = value;\n            }\n        );\n\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n\n        return <{ maxChannelCount: TNativeAudioDestinationNode['maxChannelCount'] } & TNativeGainNode>gainNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IBiquadFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TBiquadFilterNodeRendererFactoryFactory, TNativeBiquadFilterNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createBiquadFilterNodeRendererFactory: TBiquadFilterNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeBiquadFilterNodes = new WeakMap<TNativeOfflineAudioContext, TNativeBiquadFilterNode>();\n\n        const createBiquadFilterNode = async (proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode<T, TNativeBiquadFilterNode>(proxy);\n\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            return nativeBiquadFilterNode;\n        };\n\n        return {\n            render(proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeBiquadFilterNode> {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSetAudioNodeTailTimeFactory } from '../types';\n\nexport const createSetAudioNodeTailTime: TSetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n","import { TMonitorConnectionsFactory, TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const createMonitorConnections: TMonitorConnectionsFactory = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set<[TNativeAudioNode, number, number] | [TNativeAudioParam, number]>();\n\n        nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n                const wasDisconnected = connections.size === 0;\n\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    (<(destination: TNativeAudioNode, output?: number, input?: number) => TNativeAudioNode>connect).call(\n                        nativeAudioNode,\n                        destination,\n                        output,\n                        input\n                    );\n\n                    insertElementInSet(\n                        connections,\n                        [destination, output, input],\n                        (connection) => connection[0] === destination && connection[1] === output && connection[2] === input,\n                        true\n                    );\n\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n\n                    return destination;\n                }\n\n                connect.call(nativeAudioNode, destination, output);\n\n                insertElementInSet(\n                    connections,\n                    [destination, output],\n                    (connection) => connection[0] === destination && connection[1] === output,\n                    true\n                );\n\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n\n                return;\n            };\n        })(nativeAudioNode.connect);\n\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n                const wasConnected = connections.size > 0;\n\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n\n                    connections.clear();\n                } else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    (<(output: number) => void>disconnect).call(nativeAudioNode, destinationOrOutput);\n\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                } else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        (<(destination: TNativeAudioNode, output?: number, input?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output,\n                            input\n                        );\n                    } else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        (<(destination: TNativeAudioParam, output?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output\n                        );\n                    }\n\n                    for (const connection of connections) {\n                        if (\n                            connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)\n                        ) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n\n                const isDisconnected = connections.size === 0;\n\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n\n        return nativeAudioNode;\n    };\n};\n","import { TWrapChannelMergerNodeFactory } from '../types';\n\nexport const createWrapChannelMergerNode: TWrapChannelMergerNodeFactory = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelMergerNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelMergerNodeRendererFactory: TChannelMergerNodeRendererFactoryFactory = (\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelSplitterNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelSplitterNodeRendererFactory: TChannelSplitterNodeRendererFactoryFactory = (\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSanitizeChannelSplitterOptionsFunction } from '../types';\n\nexport const sanitizeChannelSplitterOptions: TSanitizeChannelSplitterOptionsFunction = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport {\n    TNativeAudioBufferSourceNode,\n    TNativeAudioNode,\n    TNativeConstantSourceNode,\n    TNativeConstantSourceNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeConstantSourceNodeFakerFactory: TNativeConstantSourceNodeFakerFactoryFactory = (\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeConstantSourceNode['channelCountMode'] {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeConstantSourceNode['channelInterpretation'] {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context(): TNativeConstantSourceNode['context'] {\n                return gainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [];\n            },\n            get numberOfInputs(): number {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return gainNode.numberOfOutputs;\n            },\n            get offset(): TNativeConstantSourceNode['offset'] {\n                return gainNode.gain;\n            },\n            get onended(): TNativeConstantSourceNode['onended'] {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = <TNativeAudioBufferSourceNode['onended']>value;\n            },\n            addEventListener(...args: any[]): void {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0): void {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0): void {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeConstantSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeConstantSourceNodeFactory: TNativeConstantSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n\n        return nativeConstantSourceNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConstantSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConstantSourceNodeRendererFactoryFactory, TNativeConstantSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConstantSourceNodeRendererFactory: TConstantSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConstantSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConstantSourceNode>();\n\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createConstantSourceNode = async (proxy: IConstantSourceNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode<T, TNativeConstantSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            return nativeConstantSourceNode;\n        };\n\n        return {\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IConstantSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeConstantSourceNode> {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeConvolverNodeFactoryFactory } from '../types';\n\nexport const createNativeConvolverNodeFactory: TNativeConvolverNodeFactoryFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCount',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCountMode',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        return nativeConvolverNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConvolverNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConvolverNodeRendererFactoryFactory, TNativeConvolverNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConvolverNodeRendererFactory: TConvolverNodeRendererFactoryFactory = (\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConvolverNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConvolverNode>();\n\n        const createConvolverNode = async (proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode<T, TNativeConvolverNode>(proxy);\n\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n\n            return nativeConvolverNode;\n        };\n\n        return {\n            render(proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeConvolverNode> {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDelayNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDelayNodeRendererFactoryFactory, TNativeDelayNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDelayNodeRendererFactory: TDelayNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(maxDelayTime: number) => {\n        const renderedNativeDelayNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDelayNode>();\n\n        const createDelayNode = async (proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode<T, TNativeDelayNode>(proxy);\n\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n\n            return nativeDelayNode;\n        };\n\n        return {\n            render(proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeDelayNode> {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDynamicsCompressorNodeFactoryFactory } from '../types';\n\nexport const createNativeDynamicsCompressorNodeFactory: TNativeDynamicsCompressorNodeFactoryFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n\n        return nativeDynamicsCompressorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDynamicsCompressorNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDynamicsCompressorNodeRendererFactoryFactory, TNativeDynamicsCompressorNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDynamicsCompressorNodeRendererFactory: TDynamicsCompressorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDynamicsCompressorNode>();\n\n        const createDynamicsCompressorNode = async (\n            proxy: IDynamicsCompressorNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode<T, TNativeDynamicsCompressorNode>(proxy);\n\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            return nativeDynamicsCompressorNode;\n        };\n\n        return {\n            render(\n                proxy: IDynamicsCompressorNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeDynamicsCompressorNode> {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IGainNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGainNodeRendererFactoryFactory, TNativeGainNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createGainNodeRendererFactory: TGainNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeGainNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode>();\n\n        const createGainNode = async (proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode<T, TNativeGainNode>(proxy);\n\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n\n            return nativeGainNode;\n        };\n\n        return {\n            render(proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeGainNode> {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IOfflineAudioCompletionEvent } from '../interfaces';\nimport { TNativeAudioBuffer, TRenderNativeOfflineAudioContextFactory } from '../types';\n\nexport const createRenderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFactory = (\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    testOfflineAudioContextCurrentTimeSupport\n) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(\n                cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)\n            ).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n\n        return new Promise<TNativeAudioBuffer>((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n\n            nativeOfflineAudioContext.oncomplete = (event: IOfflineAudioCompletionEvent) => {\n                gainNode.disconnect();\n\n                resolve(event.renderedBuffer);\n            };\n\n            gainNode.connect(nativeOfflineAudioContext.destination);\n\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeIIRFilterNodeFactoryFactory } from '../types';\n\nexport const createNativeIIRFilterNodeFactory: TNativeIIRFilterNodeFactoryFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(<number[]>options.feedforward, <number[]>options.feedback);\n\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n\n        return nativeIIRFilterNode;\n    };\n};\n","import { createInvalidAccessError } from '../factories/invalid-access-error';\nimport { TNativeIIRFilterNode } from '../types';\n\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode: TNativeIIRFilterNode): void => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioListenerFactoryFactory } from '../types';\n\nexport const createAudioListenerFactory: TAudioListenerFactoryFactory = (\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation: [number, number, number, number, number, number] = [0, 0, -1, 0, 1, 0];\n            let lastPosition: [number, number, number] = [0, 0, 0];\n\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n\n                isScriptProcessorNodeCreated = true;\n\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation: [number, number, number, number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                        lastOrientation = orientation;\n                    }\n\n                    const positon: [number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n                        lastPosition = positon;\n                    }\n                };\n\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index: number) => (value: number) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index: number) => (value: number) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input: number, initialValue: number, setValue: (value: number) => void) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n\n                constantSourceNode.connect(channelMergerNode, 0, input);\n\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get(): number {\n                        return initialValue;\n                    }\n                });\n\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam(\n                    <any>{ context },\n                    isOffline,\n                    constantSourceNode.offset,\n                    MOST_POSITIVE_SINGLE_FLOAT,\n                    MOST_NEGATIVE_SINGLE_FLOAT\n                );\n\n                overwriteAccessors(\n                    audioParam,\n                    'value',\n                    (get) => () => get.call(audioParam),\n                    (set) => (value) => {\n                        try {\n                            set.call(audioParam, value);\n                        } catch (err) {\n                            if (err.code !== 9) {\n                                throw err;\n                            }\n                        }\n\n                        createScriptProcessorNode();\n\n                        if (isOffline) {\n                            // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                            setValue(value);\n                        }\n                    }\n                );\n\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelAndHoldAtTime']>) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelScheduledValues']>) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['exponentialRampToValueAtTime']>) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['linearRampToValueAtTime']>) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setTargetAtTime']>) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueAtTime']>) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueCurveAtTime']>) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n\n                return audioParam;\n            };\n\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } =\n            nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n\n        return {\n            get forwardX(): IAudioParam {\n                return forwardX;\n            },\n            get forwardY(): IAudioParam {\n                return forwardY;\n            },\n            get forwardZ(): IAudioParam {\n                return forwardZ;\n            },\n            get positionX(): IAudioParam {\n                return positionX;\n            },\n            get positionY(): IAudioParam {\n                return positionY;\n            },\n            get positionZ(): IAudioParam {\n                return positionZ;\n            },\n            get upX(): IAudioParam {\n                return upX;\n            },\n            get upY(): IAudioParam {\n                return upY;\n            },\n            get upZ(): IAudioParam {\n                return upZ;\n            }\n        };\n    };\n};\n","import { CONTEXT_STORE } from '../globals';\nimport { IAudioDestinationNode, IAudioListener, IMinimalBaseAudioContext, IMinimalBaseAudioContextEventMap } from '../interfaces';\nimport { TAudioContextState, TContext, TEventHandler, TMinimalBaseAudioContextConstructorFactory, TNativeContext } from '../types';\n\nexport const createMinimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructorFactory = (\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n) => {\n    return class MinimalBaseAudioContext<T extends TContext>\n        extends eventTargetConstructor<IMinimalBaseAudioContextEventMap>\n        implements IMinimalBaseAudioContext<T>\n    {\n        private _destination: IAudioDestinationNode<T>;\n\n        private _listener: IAudioListener;\n\n        private _onstatechange: null | TEventHandler<T>;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext);\n\n            CONTEXT_STORE.set(<T>(<unknown>this), _nativeContext);\n\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n\n            this._destination = new audioDestinationNodeConstructor(<T>(<unknown>this), numberOfChannels);\n            this._listener = createAudioListener(<T>(<unknown>this), _nativeContext);\n            this._onstatechange = null;\n        }\n\n        get currentTime(): number {\n            return this._nativeContext.currentTime;\n        }\n\n        get destination(): IAudioDestinationNode<T> {\n            return this._destination;\n        }\n\n        get listener(): IAudioListener {\n            return this._listener;\n        }\n\n        get onstatechange(): null | TEventHandler<T> {\n            return this._onstatechange;\n        }\n\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeContext.onstatechange = wrappedListener;\n\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n\n        get sampleRate(): number {\n            return this._nativeContext.sampleRate;\n        }\n\n        get state(): TAudioContextState {\n            return this._nativeContext.state;\n        }\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeOscillatorNodeFactoryFactory } from '../types';\n\nexport const createNativeOscillatorNodeFactory: TNativeOscillatorNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        } else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n\n        return nativeOscillatorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IOscillatorNode, IPeriodicWave } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeOscillatorNode, TOscillatorNodeRendererFactoryFactory } from '../types';\n\nexport const createOscillatorNodeRendererFactory: TOscillatorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeOscillatorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeOscillatorNode>();\n\n        let periodicWave: null | IPeriodicWave = null;\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createOscillatorNode = async (proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode<T, TNativeOscillatorNode>(proxy);\n\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n\n            return nativeOscillatorNode;\n        };\n\n        return {\n            set periodicWave(value: null | IPeriodicWave) {\n                periodicWave = value;\n            },\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeOscillatorNode> {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TConnectedNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createConnectedNativeAudioBufferSourceNodeFactory: TConnectedNativeAudioBufferSourceNodeFactoryFactory = (\n    createNativeAudioBufferSourceNode\n) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeWaveShaperNode, TNativeWaveShaperNodeFakerFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFakerFactory: TNativeWaveShaperNodeFakerFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n        let unmodifiedCurve: null | TNativeWaveShaperNode['curve'] = null;\n\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeWaveShaperNode['channelCountMode'] {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeWaveShaperNode['channelInterpretation'] {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeWaveShaperNode['context'] {\n                return negativeWaveShaperNode.context;\n            },\n            get curve(): TNativeWaveShaperNode['curve'] {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                } else {\n                    const curveLength = value.length;\n\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                  (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n\n                unmodifiedCurve = value;\n\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    } else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample(): TNativeWaveShaperNode['oversample'] {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n\n            isConnected = true;\n\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeWaveShaperNodeFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFactory: TNativeWaveShaperNodeFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (\n            nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined\n        ) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n\n        overwriteAccessors(\n            nativeWaveShaperNode,\n            'curve',\n            (get) => () => get.call(nativeWaveShaperNode),\n            (set) => (value) => {\n                set.call(nativeWaveShaperNode, value);\n\n                if (isConnected) {\n                    if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(\n                            nativeContext,\n                            nativeWaveShaperNode\n                        );\n                    } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n\n                return value;\n            }\n        );\n\n        const whenConnected = () => {\n            isConnected = true;\n\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativePannerNode, TNativePannerNodeFakerFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFakerFactory: TNativePannerNodeFakerFactoryFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n) => {\n    return (\n        nativeContext,\n        {\n            coneInnerAngle,\n            coneOuterAngle,\n            coneOuterGain,\n            distanceModel,\n            maxDistance,\n            orientationX,\n            orientationY,\n            orientationZ,\n            panningModel,\n            positionX,\n            positionY,\n            positionZ,\n            refDistance,\n            rolloffFactor,\n            ...audioNodeOptions\n        }\n    ) => {\n        const pannerNode = nativeContext.createPanner();\n\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        } as const;\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n\n        let lastOrientation: [number, number, number] = [orientationX, orientationY, orientationZ];\n        let lastPosition: [number, number, number] = [positionX, positionY, positionZ];\n\n        const buffer = new Float32Array(1);\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                lastOrientation = orientation;\n            }\n\n            const positon: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n                lastPosition = positon;\n            }\n        };\n\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n\n        const nativePannerNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode(): TNativePannerNode['channelCountMode'] {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativePannerNode['channelInterpretation'] {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle(): TNativePannerNode['coneInnerAngle'] {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle(): TNativePannerNode['coneOuterAngle'] {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain(): TNativePannerNode['coneOuterGain'] {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n\n                pannerNode.coneOuterGain = value;\n            },\n            get context(): TNativePannerNode['context'] {\n                return pannerNode.context;\n            },\n            get distanceModel(): TNativePannerNode['distanceModel'] {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get maxDistance(): TNativePannerNode['maxDistance'] {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs(): number {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX(): TNativePannerNode['orientationX'] {\n                return orientationXGainNode.gain;\n            },\n            get orientationY(): TNativePannerNode['orientationY'] {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ(): TNativePannerNode['orientationZ'] {\n                return orientationZGainNode.gain;\n            },\n            get panningModel(): TNativePannerNode['panningModel'] {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX(): TNativePannerNode['positionX'] {\n                return positionXGainNode.gain;\n            },\n            get positionY(): TNativePannerNode['positionY'] {\n                return positionYGainNode.gain;\n            },\n            get positionZ(): TNativePannerNode['positionZ'] {\n                return positionZGainNode.gain;\n            },\n            get refDistance(): TNativePannerNode['refDistance'] {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor(): TNativePannerNode['rolloffFactor'] {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativePannerNodeFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFactory: TNativePannerNodeFactoryFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n\n        return nativePannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, INativePannerNodeFaker, IOfflineAudioContext, IPannerNode } from '../interfaces';\nimport {\n    TNativeAudioBuffer,\n    TNativeGainNode,\n    TNativeOfflineAudioContext,\n    TNativePannerNode,\n    TPannerNodeRendererFactoryFactory\n} from '../types';\n\nexport const createPannerNodeRendererFactory: TPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode | TNativePannerNode>();\n\n        let renderedBufferPromise: null | Promise<TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode: null | TNativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode<T, TNativePannerNode>(proxy);\n\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            } else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        6,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all(\n                            [\n                                proxy.orientationX,\n                                proxy.orientationY,\n                                proxy.orientationZ,\n                                proxy.positionX,\n                                proxy.positionY,\n                                proxy.positionZ\n                            ].map(async (audioParam, index) => {\n                                const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: index === 0 ? 1 : 0\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n\n                                return nativeConstantSourceNode;\n                            })\n                        );\n\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n\n                const channelDatas: Float32Array[] = [];\n\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n\n                inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation: [number, number, number] = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon: [number, number, number] = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n                    if (\n                        orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])\n                    ) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n\n                        inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n\n                return nativeGainNode;\n            }\n\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n\n            return nativePannerNode;\n        };\n\n        return {\n            render(\n                proxy: IPannerNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeGainNode | TNativePannerNode> {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n","import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport { INativeWaveShaperNodeFaker } from '../interfaces';\nimport {\n    TNativeAudioNode,\n    TNativeChannelMergerNode,\n    TNativeContext,\n    TNativeGainNode,\n    TNativeStereoPannerNode,\n    TNativeStereoPannerNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeStereoPannerNodeFakerFactory: TNativeStereoPannerNodeFakerFactoryFactory = (\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' } as const;\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' } as const;\n\n    const buildInternalGraphForMono = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve })\n        );\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve })\n        );\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraphForStereo = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            } else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraph = (\n        nativeContext: TNativeContext,\n        channelCount: number,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        throw createNotSupportedError();\n    };\n\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n\n        let { connectGraph, disconnectGraph } = buildInternalGraph(\n            nativeContext,\n            channelCount,\n            inputGainNode,\n            panGainNode,\n            channelMergerNode\n        );\n\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(\n                        nativeContext,\n                        value,\n                        inputGainNode,\n                        panGainNode,\n                        channelMergerNode\n                    ));\n\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeStereoPannerNode['channelCountMode'] {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeStereoPannerNode['channelInterpretation'] {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeStereoPannerNode['context'] {\n                return inputGainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan(): TNativeStereoPannerNode['pan'] {\n                return panGainNode.gain;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        let isConnected = false;\n\n        const whenConnected = () => {\n            connectGraph();\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n\n            isConnected = false;\n        };\n\n        return monitorConnections(\n            interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode),\n            whenConnected,\n            whenDisconnected\n        );\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeStereoPannerNodeFactoryFactory } from '../types';\n\nexport const createNativeStereoPannerNodeFactory: TNativeStereoPannerNodeFactoryFactory = (\n    createNativeStereoPannerNodeFaker,\n    createNotSupportedError\n) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n\n        return nativeStereoPannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IStereoPannerNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeStereoPannerNode, TStereoPannerNodeRendererFactoryFactory } from '../types';\n\nexport const createStereoPannerNodeRendererFactory: TStereoPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeStereoPannerNodes = new WeakMap<TNativeOfflineAudioContext, TNativeStereoPannerNode>();\n\n        const createStereoPannerNode = async (proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode<T, TNativeStereoPannerNode>(proxy);\n\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n\n            return nativeStereoPannerNode;\n        };\n\n        return {\n            render(proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeStereoPannerNode> {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IWaveShaperNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeWaveShaperNode, TWaveShaperNodeRendererFactoryFactory } from '../types';\n\nexport const createWaveShaperNodeRendererFactory: TWaveShaperNodeRendererFactoryFactory = (\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeWaveShaperNodes = new WeakMap<TNativeOfflineAudioContext, TNativeWaveShaperNode>();\n\n        const createWaveShaperNode = async (proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode<T, TNativeWaveShaperNode>(proxy);\n\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n\n            return nativeWaveShaperNode;\n        };\n\n        return {\n            render(proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeWaveShaperNode> {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TIsSecureContextFactory } from '../types';\n\nexport const createIsSecureContext: TIsSecureContextFactory = (window) => window !== null && window.isSecureContext;\n","import { TExposeCurrentFrameAndCurrentTimeFactory } from '../types';\n\nexport const createExposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFactory = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get(): number {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get(): number {\n                    return currentTime;\n                }\n            }\n        });\n\n        try {\n            return fn();\n        } finally {\n            if (window !== null) {\n                delete (<any>window).currentFrame;\n                delete (<any>window).currentTime;\n            }\n        }\n    };\n};\n","import { TGetOrCreateBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFactory = (\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n\n        return backupOfflineAudioContext;\n    };\n};\n","import { TEvaluateSourceFactory } from '../types';\n\nexport const createEvaluateSource: TEvaluateSourceFactory = (window) => {\n    return (source) =>\n        new Promise((resolve, reject) => {\n            if (window === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n\n                return;\n            }\n\n            const head = window.document.head;\n\n            if (head === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            } else {\n                const script = window.document.createElement('script');\n                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n                const blob = new Blob([source], { type: 'application/javascript' });\n                const url = URL.createObjectURL(blob);\n\n                const originalOnErrorHandler = window.onerror;\n\n                const removeErrorEventListenerAndRevokeUrl = () => {\n                    window.onerror = originalOnErrorHandler;\n\n                    URL.revokeObjectURL(url);\n                };\n\n                window.onerror = (message, src, lineno, colno, error) => {\n                    // @todo Edge thinks the source is the one of the html document.\n                    if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                        removeErrorEventListenerAndRevokeUrl();\n                        reject(error);\n\n                        return false;\n                    }\n\n                    if (originalOnErrorHandler !== null) {\n                        return originalOnErrorHandler(message, src, lineno, colno, error);\n                    }\n                };\n\n                script.onerror = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    reject(new SyntaxError());\n                };\n                script.onload = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    resolve();\n                };\n                script.src = url;\n                script.type = 'module';\n\n                head.appendChild(script);\n            }\n        });\n};\n","import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n","import { TAbortErrorFactory } from '../types';\n\nexport const createAbortError: TAbortErrorFactory = () => new DOMException('', 'AbortError');\n","import { TTestAudioWorkletProcessorPostMessageSupportFactory } from '../types';\n\n// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport: TTestAudioWorkletProcessorPostMessageSupportFactory = (\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor\n) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const blob = new Blob(\n            ['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'],\n            {\n                type: 'application/javascript; charset=utf-8'\n            }\n        );\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n\n            await offlineAudioContext.startRendering();\n        } catch {\n            // Ignore errors.\n        } finally {\n            URL.revokeObjectURL(url);\n        }\n\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n","import { TIsNativeContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeContext: TIsNativeContextFactory = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything): anything is TNativeAudioContext => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TDecodeAudioDataFactory } from '../types';\n\nexport const createDecodeAudioData: TDecodeAudioDataFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    detachedArrayBuffers,\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n\n            return Promise.reject(err);\n        }\n\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        } catch {\n            // Ignore errors.\n        }\n\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n        }\n\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                } catch {\n                    // Ignore errors.\n                }\n            };\n\n            const fail = (err: DOMException | Error) => {\n                reject(err);\n                complete();\n            };\n\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(\n                    audioData,\n                    (audioBuffer) => {\n                        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                        if (typeof audioBuffer.copyFromChannel !== 'function') {\n                            wrapAudioBufferCopyChannelMethods(audioBuffer);\n                            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                        }\n\n                        audioBufferStore.add(audioBuffer);\n\n                        complete().then(() => resolve(audioBuffer));\n                    },\n                    (err: DOMException | Error) => {\n                        // Bug #4: Safari returns null instead of an error.\n                        if (err === null) {\n                            fail(createEncodingError());\n                        } else {\n                            fail(err);\n                        }\n                    }\n                );\n            } catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n","import { TDataCloneErrorFactory } from '../types';\n\nexport const createDataCloneError: TDataCloneErrorFactory = () => new DOMException('', 'DataCloneError');\n","import { TEncodingErrorFactory } from '../types';\n\nexport const createEncodingError: TEncodingErrorFactory = () => new DOMException('', 'EncodingError');\n","import {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioNode,\n    IAudioWorklet,\n    IBaseAudioContext,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IPeriodicWaveConstraints,\n    IStereoPannerNode,\n    IWaveShaperNode,\n    IWorkletOptions\n} from '../interfaces';\nimport { TBaseAudioContextConstructorFactory, TContext, TDecodeErrorCallback, TDecodeSuccessCallback, TNativeContext } from '../types';\n\nexport const createBaseAudioContextConstructor: TBaseAudioContextConstructorFactory = (\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n) => {\n    return class BaseAudioContext<T extends TContext> extends minimalBaseAudioContextConstructor<T> implements IBaseAudioContext<T> {\n        private _audioWorklet: undefined | IAudioWorklet;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext, numberOfChannels);\n\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                          addModule: (moduleURL: string, options?: IWorkletOptions) => {\n                              return addAudioWorkletModule(<T>(<unknown>this), moduleURL, options);\n                          }\n                      };\n        }\n\n        get audioWorklet(): undefined | IAudioWorklet {\n            return this._audioWorklet;\n        }\n\n        public createAnalyser(): IAnalyserNode<T> {\n            return new analyserNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBiquadFilter(): IBiquadFilterNode<T> {\n            return new biquadFilterNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBuffer(numberOfChannels: number, length: number, sampleRate: number): IAudioBuffer {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n\n        public createBufferSource(): IAudioBufferSourceNode<T> {\n            return new audioBufferSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createChannelMerger(numberOfInputs = 6): IAudioNode<T> {\n            return new channelMergerNodeConstructor(<T>(<unknown>this), { numberOfInputs });\n        }\n\n        public createChannelSplitter(numberOfOutputs = 6): IAudioNode<T> {\n            return new channelSplitterNodeConstructor(<T>(<unknown>this), { numberOfOutputs });\n        }\n\n        public createConstantSource(): IConstantSourceNode<T> {\n            return new constantSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createConvolver(): IConvolverNode<T> {\n            return new convolverNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createDelay(maxDelayTime = 1): IDelayNode<T> {\n            return new delayNodeConstructor(<T>(<unknown>this), { maxDelayTime });\n        }\n\n        public createDynamicsCompressor(): IDynamicsCompressorNode<T> {\n            return new dynamicsCompressorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createGain(): IGainNode<T> {\n            return new gainNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIIRFilterNode<T> {\n            return new iIRFilterNodeConstructor(<T>(<unknown>this), { feedback, feedforward });\n        }\n\n        public createOscillator(): IOscillatorNode<T> {\n            return new oscillatorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPanner(): IPannerNode<T> {\n            return new pannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPeriodicWave(\n            real: Iterable<number>,\n            imag: Iterable<number>,\n            constraints: Partial<IPeriodicWaveConstraints> = { disableNormalization: false }\n        ): IPeriodicWave {\n            return new periodicWaveConstructor(<T>(<unknown>this), { ...constraints, imag, real });\n        }\n\n        public createStereoPanner(): IStereoPannerNode<T> {\n            return new stereoPannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createWaveShaper(): IWaveShaperNode<T> {\n            return new waveShaperNodeConstructor(<T>(<unknown>this));\n        }\n\n        public decodeAudioData(\n            audioData: ArrayBuffer,\n            successCallback?: TDecodeSuccessCallback,\n            errorCallback?: TDecodeErrorCallback\n        ): Promise<IAudioBuffer> {\n            return decodeAudioData(this._nativeContext, audioData).then(\n                (audioBuffer) => {\n                    if (typeof successCallback === 'function') {\n                        successCallback(audioBuffer);\n                    }\n\n                    return audioBuffer;\n                },\n                (err) => {\n                    if (typeof errorCallback === 'function') {\n                        errorCallback(err);\n                    }\n\n                    throw err;\n                }\n            );\n        }\n    };\n};\n","import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n","import { TNativeMediaElementAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNodeFactory = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeMediaStreamAudioDestinationNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNodeFactory = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n};\n","import { IAudioContext, IMediaStreamAudioSourceNode, IMediaStreamAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioSourceNodeConstructorFactory, TNativeMediaStreamAudioSourceNode } from '../types';\n\nexport const createMediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioSourceNode<T> {\n        private _nativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNode;\n\n        constructor(context: T, options: IMediaStreamAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            super(context, true, nativeMediaStreamAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n\n        get mediaStream(): MediaStream {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n","import { TNativeMediaStreamAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNodeFactory = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n\n    return nativeMediaStreamAudioSourceNode;\n};\n","import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n","import { IAudioContext, IMediaStreamTrackAudioSourceNode, IMediaStreamTrackAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamTrackAudioSourceNodeConstructorFactory } from '../types';\n\nexport const createMediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamTrackAudioSourceNode,\n    getNativeContext\n) => {\n    return class MediaStreamTrackAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamTrackAudioSourceNode<T> {\n        constructor(context: T, options: IMediaStreamTrackAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, <TAudioNodeRenderer<T>>null);\n        }\n    };\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport {\n    IAudioContext,\n    IAudioContextOptions,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode\n} from '../interfaces';\nimport { TAudioContextConstructorFactory, TAudioContextState, TNativeAudioContext, TNativeGainNode, TNativeOscillatorNode } from '../types';\n\nexport const createAudioContextConstructor: TAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class AudioContext extends baseAudioContextConstructor<IAudioContext> implements IAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public createMediaElementSource(mediaElement: HTMLMediaElement): IMediaElementAudioSourceNode<this> {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n\n        public createMediaStreamDestination(): IMediaStreamAudioDestinationNode<this> {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n\n        public createMediaStreamSource(mediaStream: MediaStream): IMediaStreamAudioSourceNode<this> {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n\n        public createMediaStreamTrackSource(mediaStreamTrack: MediaStreamTrack): IMediaStreamTrackAudioSourceNode<this> {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TGetUnrenderedAudioWorkletNodesFactory } from '../types';\n\nexport const createGetUnrenderedAudioWorkletNodes: TGetUnrenderedAudioWorkletNodesFactory = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n\n        return unrenderedAudioWorkletNodes;\n    };\n};\n","import { TAddUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createAddUnrenderedAudioWorkletNode: TAddUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TConnectMultipleOutputsFactory } from '../types';\n\nexport const createConnectMultipleOutputs: TConnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n","import { TDeleteUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createDeleteUnrenderedAudioWorkletNode: TDeleteUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n","import { TActiveInputConnection, TContext, TGetActiveAudioWorkletNodeInputsFactory, TNativeAudioWorkletNode } from '../types';\n\nexport const createGetActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFactory = (\n    activeAudioWorkletNodeInputsStore,\n    getValueForKey\n) => {\n    return <T extends TContext>(nativeAudioWorkletNode: TNativeAudioWorkletNode) =>\n        <Set<TActiveInputConnection<T>>[]>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { IAudioWorkletProcessor } from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeFakerFactoryFactory,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeConstantSourceNode,\n    TNativeGainNode\n} from '../types';\n\nexport const createNativeAudioWorkletNodeFakerFactory: TNativeAudioWorkletNodeFakerFactoryFactory = (\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters =\n            processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n\n        const messageChannel = new MessageChannel();\n        const gainNodes: TNativeGainNode[] = [];\n        const inputChannelSplitterNodes: TNativeChannelSplitterNode[] = [];\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(\n                createNativeGainNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                })\n            );\n            inputChannelSplitterNodes.push(\n                createNativeChannelSplitterNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: options.channelCount\n                })\n            );\n        }\n\n        const constantSourceNodes: TNativeConstantSourceNode[] = [];\n\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset:\n                        options.parameterData[name] !== undefined\n                            ? options.parameterData[name]\n                            : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(\n            nativeContext,\n            bufferSize,\n            numberOfInputChannels + numberOfParameters,\n            // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n            Math.max(1, numberOfOutputChannels)\n        );\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(\n                createNativeChannelMergerNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'speakers',\n                    numberOfInputs: outputChannelCount[i]\n                })\n            );\n        }\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n\n        const parameterMap = new ReadOnlyMap(\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                      const constantSourceNode = constantSourceNodes[index];\n\n                      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                      constantSourceNode.start(0);\n\n                      return <[string, TNativeAudioParam]>[name, constantSourceNode.offset];\n                  })\n        );\n\n        inputChannelMergerNode.connect(scriptProcessorNode);\n\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode(): TNativeAudioWorkletNode['channelCountMode'] {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation(): TNativeAudioWorkletNode['channelInterpretation'] {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n\n                channelInterpretation = value;\n            },\n            get context(): TNativeAudioWorkletNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return gainNodes;\n            },\n            get numberOfInputs(): number {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror(): TNativeAudioWorkletNode['onprocessorerror'] {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n\n                onprocessorerror = typeof value === 'function' ? value : null;\n\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters(): TNativeAudioWorkletNode['parameters'] {\n                return parameterMap;\n            },\n            get port(): TNativeAudioWorkletNode['port'] {\n                return messageChannel.port2;\n            },\n            addEventListener(...args: any[]): void {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        const patchedEventListeners: Map<EventListenerOrEventListenerObject, NonNullable<MessagePort['onmessage']>> = new Map();\n\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener =\n                        typeof args[1] === 'function'\n                            ? args[1]\n                            : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                        if (patchedEventListener !== undefined) {\n                            args[1] = <EventListenerOrEventListenerObject>patchedEventListener;\n                        } else {\n                            args[1] = (event: Event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                                    unpatchedEventListener(event)\n                                );\n                            };\n\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args: any[]): void => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n\n                        args[1] = patchedEventListener;\n                    }\n                }\n\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n\n        let onmessage: MessagePort['onmessage'] = null;\n\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n\n                onmessage = typeof value === 'function' ? value : null;\n\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n\n        processorConstructor.prototype.port = messageChannel.port1;\n\n        let audioWorkletProcessor: null | IAudioWorkletProcessor = null;\n\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(\n            nativeContext,\n            nativeAudioWorkletNodeFaker,\n            processorConstructor,\n            options\n        );\n\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters: { [name: string]: Float32Array } =\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.reduce(\n                      (prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n                      {}\n                  );\n\n        let isActive = true;\n\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n\n        const activeInputIndexes = new Map<number, number>();\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }: AudioProcessingEvent) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n\n                                return input;\n                            }\n\n                            const count = activeInputIndexes.get(index);\n\n                            if (count === undefined) {\n                                return [];\n                            }\n\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                } else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n\n                            return input;\n                        });\n\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                            nativeContext.currentTime + i / nativeContext.sampleRate,\n                            nativeContext.sampleRate,\n                            () => (<IAudioWorkletProcessor>audioWorkletProcessor).process(potentiallyEmptyInputs, outputs, parameters)\n                        );\n\n                        isActive = activeSourceFlag;\n\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    } catch (error) {\n                        isActive = false;\n\n                        nativeAudioWorkletNodeFaker.dispatchEvent(\n                            new ErrorEvent('processorerror', {\n                                colno: error.colno,\n                                filename: error.filename,\n                                lineno: error.lineno,\n                                message: error.message\n                            })\n                        );\n                    }\n\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        } else {\n                            disconnectFakeGraph();\n                        }\n\n                        break;\n                    }\n                }\n            }\n        };\n\n        let isConnected = false;\n\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n\n            isConnected = false;\n        };\n\n        connectFakeGraph();\n\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TNativeAudioWorkletNode, TNativeContext } from '../types';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\n\nexport const createAudioWorkletProcessor = (\n    nativeContext: TNativeContext,\n    nativeAudioWorkletNode: TNativeAudioWorkletNode,\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n\n    return audioWorkletProcessorPromise;\n};\n","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nimport { TNativeAudioWorkletNode, TNativeAudioWorkletNodeFactoryFactory, TNativeAudioWorkletNodeOptions } from '../types';\n\nexport const createNativeAudioWorkletNodeFactory: TNativeAudioWorkletNodeFactoryFactory = (\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(\n                    nativeContext,\n                    name,\n                    <TNativeAudioWorkletNodeOptions>options\n                );\n                const patchedEventListeners: Map<\n                    EventListenerOrEventListenerObject,\n                    NonNullable<TNativeAudioWorkletNode['onprocessorerror']>\n                > = new Map();\n\n                let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n\n                            onprocessorerror = typeof value === 'function' ? value : null;\n\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener =\n                                typeof args[1] === 'function'\n                                    ? args[1]\n                                    : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                } else {\n                                    args[1] = (event: Event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n\n                                            unpatchedEventListener(event);\n                                        } else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args: any[]): void => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n\n                                args[1] = patchedEventListener;\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n\n                return nativeAudioWorkletNode;\n            } catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n        }\n\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n\n        testClonabilityOfAudioWorkletNodeOptions(options);\n\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): void => {\n    const { port1 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n    }\n};\n","import { TGetBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetBackupOfflineAudioContext: TGetBackupOfflineAudioContextFactory = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n","import { TSetActiveAudioWorkletNodeInputsFactory } from '../types';\n\nexport const createSetActiveAudioWorkletNodeInputs: TSetActiveAudioWorkletNodeInputsFactory = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n","import { TSanitizeAudioWorkletNodeOptionsFunction } from '../types';\n\nexport const sanitizeAudioWorkletNodeOptions: TSanitizeAudioWorkletNodeOptionsFunction = (options) => {\n    return {\n        ...options,\n        outputChannelCount:\n            options.outputChannelCount !== undefined\n                ? options.outputChannelCount\n                : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                  [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n","import { TTestAudioWorkletNodeOptionsClonabilityFunction } from '../types';\n\nexport const testAudioWorkletNodeOptionsClonability: TTestAudioWorkletNodeOptionsClonabilityFunction = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n        port2.close();\n    }\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport { IAudioContextOptions, IMinimalAudioContext } from '../interfaces';\nimport {\n    TAudioContextState,\n    TMinimalAudioContextConstructorFactory,\n    TNativeAudioContext,\n    TNativeGainNode,\n    TNativeOscillatorNode\n} from '../types';\n\nexport const createMinimalAudioContextConstructor: TMinimalAudioContextConstructorFactory = (\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor<IMinimalAudioContext> implements IMinimalAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TCreateNativeOfflineAudioContextFactory } from '../types';\n\nexport const createCreateNativeOfflineAudioContext: TCreateNativeOfflineAudioContextFactory = (\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        } catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n\n            throw err;\n        }\n    };\n};\n","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TStartRenderingFactory } from '../types';\n\nexport const createStartRendering: TStartRenderingFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (destination, nativeOfflineAudioContext) =>\n        getAudioNodeRenderer(destination)\n            .render(destination, nativeOfflineAudioContext)\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n             * destination.\n             */\n            .then(() =>\n                Promise.all(\n                    Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) =>\n                        getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)\n                    )\n                )\n            )\n            .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n            .then((audioBuffer) => {\n                // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                if (typeof audioBuffer.copyFromChannel !== 'function') {\n                    wrapAudioBufferCopyChannelMethods(audioBuffer);\n                    wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                } else if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n};\n","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport {\n    AudioBuffer,\n    AudioBufferSourceNode,\n    AudioWorkletNode,\n    ConstantSourceNode,\n    IAudioBuffer,\n    IMinimalAudioContext,\n    MediaStreamAudioSourceNode,\n    MinimalAudioContext,\n    addAudioWorkletModule\n} from 'standardized-audio-context';\nimport { IAudioNodesAndEncoderId } from '../interfaces';\nimport { TRecordingState, TWebAudioMediaRecorderFactoryFactory } from '../types';\n\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (\n    audioBuffer: IAudioBuffer,\n    audioContext: IMinimalAudioContext,\n    channelCount: number,\n    mediaStream: MediaStream,\n    mimeType: string\n) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\n\nexport const createWebAudioMediaRecorderFactory: TWebAudioMediaRecorderFactoryFactory = (\n    createBlobEvent,\n    createInvalidModificationError,\n    createInvalidStateError,\n    createNotSupportedError\n) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        const sampleRate = mediaStream.getAudioTracks()[0]?.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers: ArrayBuffer[] = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url: string) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n\n            return addAudioWorkletModule(audioContext, url);\n        });\n\n        let abortRecording: null | (() => void) = null;\n        let intervalId: null | number = null;\n        let promisedAudioNodesAndEncoderId: null | Promise<IAudioNodesAndEncoderId> = null;\n        let promisedPartialRecording: null | Promise<void> = null;\n        let isAudioContextRunning = true;\n\n        const dispatchDataAvailableEvent = (arrayBuffers: ArrayBuffer[]): void => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n\n        const requestNextPartialRecording = async (encoderId: number, timeslice: number): Promise<void> => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            } else {\n                dispatchDataAvailableEvent(arrayBuffers);\n\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n\n        const resume = (): Promise<void> => {\n            isAudioContextRunning = true;\n\n            return audioContext.resume();\n        };\n\n        const stop = (): void => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n\n            promisedAudioNodesAndEncoderId.then(\n                async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                    if (promisedPartialRecording !== null) {\n                        promisedPartialRecording.catch(() => {\n                            /* @todo Only catch the errors caused by a duplicate call to encode. */\n                        });\n                        promisedPartialRecording = null;\n                    }\n\n                    await recorderAudioWorkletNode.stop();\n\n                    mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                    constantSourceNode.stop();\n\n                    const arrayBuffers = await encode(encoderId, null);\n\n                    if (promisedAudioNodesAndEncoderId === null) {\n                        await suspend();\n                    }\n\n                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n\n                    bufferedArrayBuffers.length = 0;\n\n                    eventTarget.dispatchEvent(new Event('stop'));\n                }\n            );\n\n            promisedAudioNodesAndEncoderId = null;\n        };\n\n        const suspend = (): Promise<void> => {\n            isAudioContextRunning = false;\n\n            return audioContext.suspend();\n        };\n\n        suspend();\n\n        return {\n            get mimeType(): string {\n                return mimeType;\n            },\n\n            get state(): TRecordingState {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n\n            pause(): void {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n\n            resume(): void {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n\n            start(timeslice?: number): void {\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n\n                eventTarget.dispatchEvent(new Event('start'));\n\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount =\n                    audioTracks.length === 0\n                        ? 2\n                        : (<MediaTrackSettings & { channelCount?: number }>audioTracks[0].getSettings()).channelCount ?? 2;\n\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() =>\n                        createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType)\n                    )\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n\n                    await recorderAudioWorkletNode.record(port);\n\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n\n                const tracks = mediaStream.getTracks();\n\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n\n                    if (\n                        (currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null\n                    ) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n\n            stop\n        };\n    };\n};\n","import { IAudioContext, IMinimalAudioContext } from '../interfaces';\nimport { TIsAnyAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsAnyAudioContext: TIsAnyAudioContextFactory = (contextStore, isNativeAudioContext) => {\n    return (anything): anything is IAudioContext | IMinimalAudioContext | TNativeAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TIsAnyAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsAnyAudioNode: TIsAnyAudioNodeFactory = (audioNodeStore, isNativeAudioNode) => {\n    return (anything): anything is IAudioNode<any> | TNativeAudioNode => audioNodeStore.has(<any>anything) || isNativeAudioNode(anything);\n};\n","import { IAudioParam } from '../interfaces';\nimport { TIsAnyAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsAnyAudioParam: TIsAnyAudioParamFactory = (audioParamStore, isNativeAudioParam) => {\n    return (anything): anything is IAudioParam | TNativeAudioParam => audioParamStore.has(<any>anything) || isNativeAudioParam(anything);\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\nimport { IMediaRecorderConstructor } from './interfaces';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst encoderRegexes: RegExp[] = [];\n\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(\n    createBlobEvent,\n    createInvalidModificationError,\n    createInvalidStateError,\n    createNotSupportedError\n);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(\n    createBlobEvent,\n    createInvalidModificationError,\n    createNotSupportedError,\n    decodeWebMChunk,\n    readVariableSizeInteger\n);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\n\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor: IMediaRecorderConstructor = createMediaRecorderConstructor(\n    createNativeMediaRecorder,\n    createNotSupportedError,\n    createWebAudioMediaRecorder,\n    createWebmPcmMediaRecorder,\n    encoderRegexes,\n    createEventTargetConstructor(createEventTarget, wrapEventListener),\n    nativeMediaRecorderConstructor\n);\n\nexport { mediaRecorderConstructor as MediaRecorder };\n\nexport const isSupported = () => createIsSupportedPromise(window);\n\nexport const register = async (port: MessagePort): Promise<void> => {\n    encoderRegexes.push(await rgstr(port));\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { IBlobEvent } from '../interfaces';\nimport { TBlobEventFactoryFactory } from '../types';\n\nexport const createBlobEventFactory: TBlobEventFactoryFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = <IBlobEvent>new Event(type, eventInit);\n\n            (<Omit<IBlobEvent, 'data'> & { -readonly [P in 'data']: IBlobEvent[P] }>fakeBlobEvent).data = data;\n\n            return fakeBlobEvent;\n        }\n\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n","import { TNativeBlobEventConstructorFactory } from '../types';\n\nexport const createNativeBlobEventConstructor: TNativeBlobEventConstructorFactory = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n\n    return null;\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    } catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n\n        return err;\n    }\n};\n","import { TReadVariableSizeIntegerFactory } from '../types';\n\nexport const createReadVariableSizeInteger: TReadVariableSizeIntegerFactory = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n\n        if (length === null) {\n            return length;\n        }\n\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n\n        return { length, value };\n    };\n};\n","import { TReadVariableSizeIntegerLengthFunction } from '../types';\n\nexport const readVariableSizeIntegerLength: TReadVariableSizeIntegerLengthFunction = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n\n    const byte = dataView.getUint8(offset);\n\n    if (byte > 127) {\n        return 1;\n    }\n\n    if (byte > 63) {\n        return 2;\n    }\n\n    if (byte > 31) {\n        return 3;\n    }\n\n    if (byte > 15) {\n        return 4;\n    }\n\n    if (byte > 7) {\n        return 5;\n    }\n\n    if (byte > 3) {\n        return 6;\n    }\n\n    if (byte > 1) {\n        return 7;\n    }\n\n    if (byte > 0) {\n        return 8;\n    }\n\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n\n    return length === null ? null : length + 8;\n};\n","import { TReadElementContentFactory } from '../types';\n\nexport const createReadElementContent: TReadElementContentFactory = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n\n        const { length, value } = lengthAndValue;\n\n        if (type === 'master') {\n            return { content: null, length };\n        }\n\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n\n            return { content, length: length + value };\n        }\n\n        return { content: null, length: length + value };\n    };\n};\n","import { TReadElementTypeFactory } from '../types';\n\nexport const createReadElementType: TReadElementTypeFactory = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n\n        const { length, value } = lengthAndValue;\n\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n\n        if (\n            value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861\n        ) {\n            return { length, type: 'master' };\n        }\n\n        return { length, type: 'unknown' };\n    };\n};\n","import { TDecodeWebMChunkFactory } from '../types';\n\nexport const createDecodeWebMChunk: TDecodeWebMChunkFactory = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents: (readonly Float32Array[])[] = [];\n\n        let currentElementType = elementType;\n        let offset = 0;\n\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n\n                if (lengthAndType === null) {\n                    break;\n                }\n\n                const { length, type } = lengthAndType;\n\n                currentElementType = type;\n                offset += length;\n            } else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n\n                if (contentAndLength === null) {\n                    break;\n                }\n\n                const { content, length } = contentAndLength;\n\n                currentElementType = null;\n                offset += length;\n\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n\n        return { contents, currentElementType, offset };\n    };\n};\n","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nimport { TPromisedDataViewElementTypeEncoderIdAndPort, TRecordingState, TWebmPcmMediaRecorderFactoryFactory } from '../types';\n\nexport const createWebmPcmMediaRecorderFactory: TWebmPcmMediaRecorderFactoryFactory = (\n    createBlobEvent,\n    createInvalidModificationError,\n    createNotSupportedError,\n    decodeWebMChunk,\n    readVariableSizeInteger\n) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers: ArrayBuffer[] = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount =\n            audioTracks.length === 0\n                ? undefined\n                : (<MediaTrackSettings & { channelCount?: number }>audioTracks[0].getSettings()).channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n\n        let promisedPartialRecording: null | Promise<void> = null;\n        let stopRecording = () => {}; // tslint:disable-line:no-empty\n\n        const dispatchDataAvailableEvent = (arrayBuffers: ArrayBuffer[]): void => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n\n        const requestNextPartialRecording = async (encoderId: number, timeslice: number): Promise<void> => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            } else {\n                dispatchDataAvailableEvent(arrayBuffers);\n\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n\n        const stop = (): void => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n\n            stopRecording();\n            stopRecording = () => {}; // tslint:disable-line:no-empty\n\n            nativeMediaRecorder.stop();\n        };\n\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n\n        return {\n            get mimeType(): string {\n                return mimeType;\n            },\n\n            get state(): TRecordingState {\n                return nativeMediaRecorder.state;\n            },\n\n            pause(): void {\n                return nativeMediaRecorder.pause();\n            },\n\n            resume(): void {\n                return nativeMediaRecorder.resume();\n            },\n\n            start(timeslice?: number): void {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort: TPromisedDataViewElementTypeEncoderIdAndPort = instantiate(\n                        mimeType,\n                        sampleRate\n                    );\n\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n\n                    const removeEventListener = on(\n                        nativeMediaRecorder,\n                        'dataavailable'\n                    )(({ data }) => {\n                        pendingInvocations += 1;\n\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(\n                            async ({ dataView = null, elementType = null, encoderId, port }) => {\n                                const arrayBuffer = await data.arrayBuffer();\n\n                                pendingInvocations -= 1;\n\n                                const currentDataView =\n                                    dataView === null\n                                        ? new MultiBufferDataView([arrayBuffer])\n                                        : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n\n                                if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                    const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n\n                                    if (lengthAndValue === null) {\n                                        return { dataView: currentDataView, elementType, encoderId, port };\n                                    }\n\n                                    const { value } = lengthAndValue;\n\n                                    if (value !== 172351395) {\n                                        return { dataView, elementType, encoderId, port };\n                                    }\n\n                                    isRecording = true;\n                                }\n\n                                const { currentElementType, offset, contents } = decodeWebMChunk(\n                                    currentDataView,\n                                    elementType,\n                                    channelCount\n                                );\n                                const remainingDataView =\n                                    offset < currentDataView.byteLength\n                                        ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                        : null;\n\n                                contents.forEach((content) =>\n                                    port.postMessage(\n                                        content,\n                                        content.map(({ buffer }) => buffer)\n                                    )\n                                );\n\n                                if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                    encode(encoderId, null).then((arrayBuffers) => {\n                                        dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n\n                                        bufferedArrayBuffers.length = 0;\n\n                                        eventTarget.dispatchEvent(new Event('stop'));\n                                    });\n\n                                    port.postMessage([]);\n                                    port.close();\n\n                                    removeEventListener();\n                                }\n\n                                return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                            }\n                        );\n                    });\n\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(\n                            ({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice))\n                        );\n                    }\n                }\n\n                nativeMediaRecorder.start(100);\n            },\n\n            stop\n        };\n    };\n};\n","import { TEventTargetFactoryFactory } from '../types';\n\nexport const createEventTargetFactory: TEventTargetFactoryFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n\n        return window.document.createElement('p');\n    };\n};\n","import { TNativeMediaRecorderConstructorFactory } from '../types';\n\nexport const createNativeMediaRecorderConstructor: TNativeMediaRecorderConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n","import { IBlobEvent, IMediaRecorder } from '../interfaces';\nimport { TEventHandler, TNativeMediaRecorderFactoryFactory } from '../types';\n\nexport const createNativeMediaRecorderFactory: TNativeMediaRecorderFactoryFactory = (\n    createInvalidModificationError,\n    createNotSupportedError\n) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs: Blob[] = [];\n        const dataAvailableListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: IBlobEvent) => void>();\n        const errorListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: ErrorEvent) => void>();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: Event) => void>();\n\n        let isActive = true;\n\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (\n                type: string,\n                listener: null | TEventHandler<IMediaRecorder> | EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions\n            ) => {\n                let patchedEventListener = listener;\n\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event: IBlobEvent) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                } else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n\n                                        bufferedBlobs.length = 0;\n                                    }\n\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    } else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event: ErrorEvent | (Event & { error?: Error })) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            } else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n\n                                listener.call(\n                                    nativeMediaRecorder,\n                                    new ErrorEvent('error', { error: createInvalidModificationError(message) })\n                                );\n                            } else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            } else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n\n                        errorListeners.set(listener, patchedEventListener);\n                    } else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event: Event) => {\n                            isActive = false;\n\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event: Event) => {\n                let wasActive: boolean;\n\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n\n                setTimeout(() => (isActive = wasActive));\n\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (\n                type: string,\n                listener: null | TEventHandler<IMediaRecorder> | EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions\n            ) => {\n                let patchedEventListener = listener;\n\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    } else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    } else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice?: number) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (\n                    mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0\n                ) {\n                    throw createNotSupportedError();\n                }\n\n                isActive = timeslice !== undefined;\n\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n\n        return nativeMediaRecorder;\n    };\n};\n","import { IMediaRecorder, IMediaRecorderEventMap, IMediaRecorderOptions } from '../interfaces';\nimport {\n    TBlobEventHandler,\n    TErrorEventHandler,\n    TEventHandler,\n    TMediaRecorderConstructorFactory,\n    TNativeEventTarget,\n    TRecordingState\n} from '../types';\n\nexport const createMediaRecorderConstructor: TMediaRecorderConstructorFactory = (\n    createNativeMediaRecorder,\n    createNotSupportedError,\n    createWebAudioMediaRecorder,\n    createWebmPcmMediaRecorder,\n    encoderRegexes,\n    eventTargetConstructor,\n    nativeMediaRecorderConstructor\n) => {\n    return class MediaRecorder extends eventTargetConstructor<IMediaRecorderEventMap> implements IMediaRecorder {\n        private _internalMediaRecorder: Omit<\n            IMediaRecorder,\n            'ondataavailable' | 'onerror' | 'onpause' | 'onresume' | 'onstart' | 'onstop' | keyof TNativeEventTarget\n        >;\n\n        private _ondataavailable: null | [TBlobEventHandler<this>, TBlobEventHandler<this>];\n\n        private _onerror: null | [TErrorEventHandler<this>, TErrorEventHandler<this>];\n\n        private _onpause: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onresume: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onstart: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onstop: null | [TEventHandler<this>, TEventHandler<this>];\n\n        constructor(stream: MediaStream, options: IMediaRecorderOptions = {}) {\n            const { mimeType } = options;\n\n            if (\n                nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))\n            ) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n\n                super(internalMediaRecorder);\n\n                this._internalMediaRecorder = internalMediaRecorder;\n            } else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (\n                    nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')\n                ) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                } else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            } else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n\n                throw createNotSupportedError();\n            }\n\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n\n        get mimeType(): string {\n            return this._internalMediaRecorder.mimeType;\n        }\n\n        get ondataavailable(): null | TBlobEventHandler<this> {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('dataavailable', boundListener);\n\n                this._ondataavailable = [value, boundListener];\n            } else {\n                this._ondataavailable = null;\n            }\n        }\n\n        get onerror(): null | TErrorEventHandler<this> {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('error', boundListener);\n\n                this._onerror = [value, boundListener];\n            } else {\n                this._onerror = null;\n            }\n        }\n\n        get onpause(): null | TEventHandler<this> {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('pause', boundListener);\n\n                this._onpause = [value, boundListener];\n            } else {\n                this._onpause = null;\n            }\n        }\n\n        get onresume(): null | TEventHandler<this> {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('resume', boundListener);\n\n                this._onresume = [value, boundListener];\n            } else {\n                this._onresume = null;\n            }\n        }\n\n        get onstart(): null | TEventHandler<this> {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('start', boundListener);\n\n                this._onstart = [value, boundListener];\n            } else {\n                this._onstart = null;\n            }\n        }\n\n        get onstop(): null | TEventHandler<this> {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('stop', boundListener);\n\n                this._onstop = [value, boundListener];\n            } else {\n                this._onstop = null;\n            }\n        }\n\n        get state(): TRecordingState {\n            return this._internalMediaRecorder.state;\n        }\n\n        public pause(): void {\n            return this._internalMediaRecorder.pause();\n        }\n\n        public resume(): void {\n            return this._internalMediaRecorder.resume();\n        }\n\n        public start(timeslice?: number): void {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n\n        public stop(): void {\n            return this._internalMediaRecorder.stop();\n        }\n\n        public static isTypeSupported(mimeType: string): boolean {\n            return (\n                (nativeMediaRecorderConstructor !== null &&\n                    // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType))\n            );\n        }\n    };\n};\n","import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (createEventTarget, wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        private _nativeEventTarget: TNativeEventTarget;\n\n        constructor(nativeEventTarget: null | TNativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","import { TIsSupportedPromiseFactory } from '../types';\n\nexport const createIsSupportedPromise: TIsSupportedPromiseFactory = (window) => {\n    if (\n        window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)\n    ) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n\n            // @todo captureStream() is not defined yet.\n            const canvasElement: HTMLCanvasElement & { captureStream?(): MediaStream } = document.createElement('canvas');\n\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n\n                setTimeout(() => mediaRecorder.stop(), 10);\n            } catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n\n    return Promise.resolve(false);\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n\n        _classCallCheck__default[\"default\"](this, MultiBufferDataView);\n\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n\n        var _iterator = _createForOfIteratorHelper(buffers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n\n      _createClass__default[\"default\"](MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi2 = _slicedToArray__default[\"default\"](_this$_findDataViewWi, 2),\n              dataView = _this$_findDataViewWi2[0],\n              byteOffsetOfDataView = _this$_findDataViewWi2[1];\n\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi4 = _slicedToArray__default[\"default\"](_this$_findDataViewWi3, 2),\n              dataView = _this$_findDataViewWi4[0],\n              byteOffsetOfDataView = _this$_findDataViewWi4[1];\n\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi6 = _slicedToArray__default[\"default\"](_this$_findDataViewWi5, 2),\n              dataView = _this$_findDataViewWi6[0],\n              byteOffsetOfDataView = _this$_findDataViewWi6[1];\n\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi8 = _slicedToArray__default[\"default\"](_this$_findDataViewWi7, 2),\n              dataView = _this$_findDataViewWi8[0],\n              byteOffsetOfDataView = _this$_findDataViewWi8[1];\n\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          throw new RangeError();\n        }\n      }]);\n\n      return MultiBufferDataView;\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","module.exports = require(\"./lib\");\n","\"use strict\";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}\nreturn new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}\nfunction rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}\nfunction step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}\nstep((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),\"throw\":verb(1),\"return\":verb(2)},typeof Symbol===\"function\"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}\nfunction step(op){if(f)throw new TypeError(\"Generator is already executing.\");while(_)try{if(f=1,y&&(t=op[0]&2?y[\"return\"]:op[0]?y[\"throw\"]||((t=y[\"return\"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}\nif(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break;}\nif(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}\nif(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}\nif(t[2])_.ops.pop();_.trys.pop();continue;}\nop=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}\nif(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactMediaRecorder=exports.useReactMediaRecorder=exports.RecorderErrors=void 0;var extendable_media_recorder_1=require(\"extendable-media-recorder\");var react_1=require(\"react\");var extendable_media_recorder_wav_encoder_1=require(\"extendable-media-recorder-wav-encoder\");var RecorderErrors;(function(RecorderErrors){RecorderErrors[\"AbortError\"]=\"media_aborted\";RecorderErrors[\"NotAllowedError\"]=\"permission_denied\";RecorderErrors[\"NotFoundError\"]=\"no_specified_media_found\";RecorderErrors[\"NotReadableError\"]=\"media_in_use\";RecorderErrors[\"OverconstrainedError\"]=\"invalid_media_constraints\";RecorderErrors[\"TypeError\"]=\"no_constraints\";RecorderErrors[\"NONE\"]=\"\";RecorderErrors[\"NO_RECORDER\"]=\"recorder_error\";})(RecorderErrors=exports.RecorderErrors||(exports.RecorderErrors={}));function useReactMediaRecorder(_a){var _this=this;var _b=_a.audio,audio=_b===void 0?true:_b,_c=_a.video,video=_c===void 0?false:_c,_d=_a.onStop,onStop=_d===void 0?function(){return null;}:_d,_e=_a.onStart,onStart=_e===void 0?function(){return null;}:_e,blobPropertyBag=_a.blobPropertyBag,_f=_a.screen,screen=_f===void 0?false:_f,_g=_a.mediaRecorderOptions,mediaRecorderOptions=_g===void 0?undefined:_g,_h=_a.customMediaStream,customMediaStream=_h===void 0?null:_h,_j=_a.stopStreamsOnStop,stopStreamsOnStop=_j===void 0?true:_j,_k=_a.askPermissionOnMount,askPermissionOnMount=_k===void 0?false:_k;var mediaRecorder=(0,react_1.useRef)(null);var mediaChunks=(0,react_1.useRef)([]);var mediaStream=(0,react_1.useRef)(null);var _l=(0,react_1.useState)(\"idle\"),status=_l[0],setStatus=_l[1];var _m=(0,react_1.useState)(false),isAudioMuted=_m[0],setIsAudioMuted=_m[1];var _o=(0,react_1.useState)(undefined),mediaBlobUrl=_o[0],setMediaBlobUrl=_o[1];var _p=(0,react_1.useState)(\"NONE\"),error=_p[0],setError=_p[1];(0,react_1.useEffect)(function(){var setup=function(){return __awaiter(_this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a=extendable_media_recorder_1.register;return[4,(0,extendable_media_recorder_wav_encoder_1.connect)()];case 1:return[4,_a.apply(void 0,[_b.sent()])];case 2:_b.sent();return[2];}});});};setup();},[]);var getMediaStream=(0,react_1.useCallback)(function(){return __awaiter(_this,void 0,void 0,function(){var requiredMedia,stream_1,audioStream,stream,error_1;return __generator(this,function(_a){switch(_a.label){case 0:setStatus(\"acquiring_media\");requiredMedia={audio:typeof audio===\"boolean\"?!!audio:audio,video:typeof video===\"boolean\"?!!video:video,};_a.label=1;case 1:_a.trys.push([1,9,,10]);if(!customMediaStream)return[3,2];mediaStream.current=customMediaStream;return[3,8];case 2:if(!screen)return[3,6];return[4,window.navigator.mediaDevices.getDisplayMedia({video:video||true,})];case 3:stream_1=(_a.sent());stream_1.getVideoTracks()[0].addEventListener(\"ended\",function(){stopRecording();});if(!audio)return[3,5];return[4,window.navigator.mediaDevices.getUserMedia({audio:audio,})];case 4:audioStream=_a.sent();audioStream.getAudioTracks().forEach(function(audioTrack){return stream_1.addTrack(audioTrack);});_a.label=5;case 5:mediaStream.current=stream_1;return[3,8];case 6:return[4,window.navigator.mediaDevices.getUserMedia(requiredMedia)];case 7:stream=_a.sent();mediaStream.current=stream;_a.label=8;case 8:setStatus(\"idle\");return[3,10];case 9:error_1=_a.sent();setError(error_1.name);setStatus(\"idle\");return[3,10];case 10:return[2];}});});},[audio,video,screen]);(0,react_1.useEffect)(function(){if(!window.MediaRecorder){throw new Error(\"Unsupported Browser\");}\nif(screen){if(!window.navigator.mediaDevices.getDisplayMedia){throw new Error(\"This browser doesn\\'t support screen capturing\");}}\nvar checkConstraints=function(mediaType){var supportedMediaConstraints=navigator.mediaDevices.getSupportedConstraints();var unSupportedConstraints=Object.keys(mediaType).filter(function(constraint){return!supportedMediaConstraints[constraint];});if(unSupportedConstraints.length>0){console.error(\"The constraints \".concat(unSupportedConstraints.join(\",\"),\" doesn't support on this browser. Please check your ReactMediaRecorder component.\"));}};if(typeof audio===\"object\"){checkConstraints(audio);}\nif(typeof video===\"object\"){checkConstraints(video);}\nif(mediaRecorderOptions&&mediaRecorderOptions.mimeType){if(!MediaRecorder.isTypeSupported(mediaRecorderOptions.mimeType)){console.error(\"The specified MIME type you supplied for MediaRecorder doesn't support this browser\");}}\nif(!mediaStream.current&&askPermissionOnMount){getMediaStream();}\nreturn function(){if(mediaStream.current){var tracks=mediaStream.current.getTracks();tracks.forEach(function(track){return track.clone().stop();});}};},[audio,screen,video,getMediaStream,mediaRecorderOptions,askPermissionOnMount,]);var startRecording=function(){return __awaiter(_this,void 0,void 0,function(){var isStreamEnded;return __generator(this,function(_a){switch(_a.label){case 0:setError(\"NONE\");if(!!mediaStream.current)return[3,2];return[4,getMediaStream()];case 1:_a.sent();_a.label=2;case 2:if(!mediaStream.current)return[3,5];isStreamEnded=mediaStream.current.getTracks().some(function(track){return track.readyState===\"ended\";});if(!isStreamEnded)return[3,4];return[4,getMediaStream()];case 3:_a.sent();_a.label=4;case 4:if(!mediaStream.current.active){return[2];}\nmediaRecorder.current=new extendable_media_recorder_1.MediaRecorder(mediaStream.current,mediaRecorderOptions||undefined);mediaRecorder.current.ondataavailable=onRecordingActive;mediaRecorder.current.onstop=onRecordingStop;mediaRecorder.current.onstart=onRecordingStart;mediaRecorder.current.onerror=function(){setError(\"NO_RECORDER\");setStatus(\"idle\");};mediaRecorder.current.start();setStatus(\"recording\");_a.label=5;case 5:return[2];}});});};var onRecordingActive=function(_a){var data=_a.data;mediaChunks.current.push(data);};var onRecordingStart=function(){onStart();};var onRecordingStop=function(){var chunk=mediaChunks.current[0];var blobProperty=Object.assign({type:chunk.type},blobPropertyBag||(video?{type:\"video/mp4\"}:{type:\"audio/wav\"}));var blob=new Blob(mediaChunks.current,blobProperty);var url=URL.createObjectURL(blob);setStatus(\"stopped\");setMediaBlobUrl(url);onStop(url,blob);};var muteAudio=function(mute){setIsAudioMuted(mute);if(mediaStream.current){mediaStream.current.getAudioTracks().forEach(function(audioTrack){return(audioTrack.enabled=!mute);});}};var pauseRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"recording\"){setStatus(\"paused\");mediaRecorder.current.pause();}};var resumeRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"paused\"){setStatus(\"recording\");mediaRecorder.current.resume();}};var stopRecording=function(){if(mediaRecorder.current){if(mediaRecorder.current.state!==\"inactive\"){setStatus(\"stopping\");mediaRecorder.current.stop();if(stopStreamsOnStop){mediaStream.current&&mediaStream.current.getTracks().forEach(function(track){return track.stop();});}\nmediaChunks.current=[];}}};return{error:RecorderErrors[error],muteAudio:function(){return muteAudio(true);},unMuteAudio:function(){return muteAudio(false);},startRecording:startRecording,pauseRecording:pauseRecording,resumeRecording:resumeRecording,stopRecording:stopRecording,mediaBlobUrl:mediaBlobUrl,status:status,isAudioMuted:isAudioMuted,previewStream:mediaStream.current?new MediaStream(mediaStream.current.getVideoTracks()):null,previewAudioStream:mediaStream.current?new MediaStream(mediaStream.current.getAudioTracks()):null,clearBlobUrl:function(){if(mediaBlobUrl){URL.revokeObjectURL(mediaBlobUrl);}\nsetMediaBlobUrl(undefined);setStatus(\"idle\");},};}\nexports.useReactMediaRecorder=useReactMediaRecorder;var ReactMediaRecorder=function(props){return props.render(useReactMediaRecorder(props));};exports.ReactMediaRecorder=ReactMediaRecorder;","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Webcam\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Webcam\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/react-webcam.tsx\");\n","import * as React from \"react\";\n\n// polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n(function polyfillGetUserMedia() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Older browsers might not implement mediaDevices at all, so we set an empty object first\n  if (navigator.mediaDevices === undefined) {\n    (navigator as any).mediaDevices = {};\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      // First get ahold of the legacy getUserMedia, if present\n      const getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      // Some browsers just don't implement it - return a rejected promise with an error\n      // to keep a consistent interface\n      if (!getUserMedia) {\n        return Promise.reject(\n          new Error(\"getUserMedia is not implemented in this browser\")\n        );\n      }\n\n      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n      return new Promise(function(resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n})();\n\nfunction hasGetUserMedia() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\ninterface ScreenshotDimensions {\n  width: number;\n  height: number;\n}\n\ninterface ChildrenProps {\n  getScreenshot: (screenshotDimensions?: ScreenshotDimensions) => string | null;\n}\n\nexport type WebcamProps = Omit<React.HTMLProps<HTMLVideoElement>, \"ref\"> & {\n  audio: boolean;\n  audioConstraints?: MediaStreamConstraints[\"audio\"];\n  forceScreenshotSourceSize: boolean;\n  imageSmoothing: boolean;\n  mirrored: boolean;\n  minScreenshotHeight?: number;\n  minScreenshotWidth?: number;\n  onUserMedia: (stream: MediaStream) => void;\n  onUserMediaError: (error: string | DOMException) => void;\n  screenshotFormat: \"image/webp\" | \"image/png\" | \"image/jpeg\";\n  screenshotQuality: number;\n  videoConstraints?: MediaStreamConstraints[\"video\"];\n  children?: (childrenProps: ChildrenProps) => JSX.Element;\n}\n\ninterface WebcamState {\n  hasUserMedia: boolean;\n  src?: string;\n}\n\nexport default class Webcam extends React.Component<WebcamProps, WebcamState> {\n  static defaultProps = {\n    audio: false,\n    forceScreenshotSourceSize: false,\n    imageSmoothing: true,\n    mirrored: false,\n    onUserMedia: () => undefined,\n    onUserMediaError: () => undefined,\n    screenshotFormat: \"image/webp\",\n    screenshotQuality: 0.92,\n  };\n\n  private canvas: HTMLCanvasElement | null = null;\n\n  private ctx: CanvasRenderingContext2D | null = null;\n\n  private requestUserMediaId = 0;\n\n  private unmounted = false;\n\n  stream: MediaStream | null;\n\n  video: HTMLVideoElement | null;\n\n  constructor(props: WebcamProps) {\n    super(props);\n    this.state = {\n      hasUserMedia: false\n    };\n  }\n\n  componentDidMount() {\n    const { state, props } = this;\n    this.unmounted = false;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    if (!state.hasUserMedia) {\n      this.requestUserMedia();\n    }\n\n    if (props.children && typeof props.children != 'function') {\n      console.warn(\"children must be a function\");\n    }\n  }\n\n  componentDidUpdate(nextProps: WebcamProps) {\n    const { props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    const audioConstraintsChanged =\n      JSON.stringify(nextProps.audioConstraints) !==\n      JSON.stringify(props.audioConstraints);\n    const videoConstraintsChanged =\n      JSON.stringify(nextProps.videoConstraints) !==\n      JSON.stringify(props.videoConstraints);\n    const minScreenshotWidthChanged =\n      nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n    const minScreenshotHeightChanged =\n      nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n    if (\n      videoConstraintsChanged ||\n      minScreenshotWidthChanged ||\n      minScreenshotHeightChanged\n    ) {\n      this.canvas = null;\n      this.ctx = null;\n    }\n    if (audioConstraintsChanged || videoConstraintsChanged) {\n      this.stopAndCleanup();\n      this.requestUserMedia();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.stopAndCleanup();\n  }\n\n  private static stopMediaStream(stream: MediaStream | null) {\n    if (stream) {\n      if (stream.getVideoTracks && stream.getAudioTracks) {\n        stream.getVideoTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop();\n        });\n        stream.getAudioTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop()\n        });\n      } else {\n        ((stream as unknown) as MediaStreamTrack).stop();\n      }\n    }\n  }\n\n  private stopAndCleanup() {\n    const { state } = this;\n\n    if (state.hasUserMedia) {\n      Webcam.stopMediaStream(this.stream);\n\n      if (state.src) {\n        window.URL.revokeObjectURL(state.src);\n      }\n    }\n  }\n\n  getScreenshot(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!state.hasUserMedia) return null;\n\n    const canvas = this.getCanvas(screenshotDimensions);\n    return (\n      canvas &&\n      canvas.toDataURL(props.screenshotFormat, props.screenshotQuality)\n    );\n  }\n\n  getCanvas(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!this.video) {\n      return null;\n    }\n\n    if (!state.hasUserMedia || !this.video.videoHeight) return null;\n\n    if (!this.ctx) {\n      let canvasWidth = this.video.videoWidth;\n      let canvasHeight = this.video.videoHeight;\n      if (!this.props.forceScreenshotSourceSize) {\n        const aspectRatio = canvasWidth / canvasHeight;\n\n        canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n        canvasHeight = canvasWidth / aspectRatio;\n\n        if (\n          props.minScreenshotHeight &&\n          canvasHeight < props.minScreenshotHeight\n        ) {\n          canvasHeight = props.minScreenshotHeight;\n          canvasWidth = canvasHeight * aspectRatio;\n        }\n      }\n\n      this.canvas = document.createElement(\"canvas\");\n      this.canvas.width = screenshotDimensions?.width ||  canvasWidth;\n      this.canvas.height = screenshotDimensions?.height || canvasHeight;\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    const { ctx, canvas } = this;\n\n    if (ctx && canvas) {\n      // mirror the screenshot\n      if (props.mirrored) {\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n      }\n\n      ctx.imageSmoothingEnabled = props.imageSmoothing;\n      ctx.drawImage(this.video, 0, 0, screenshotDimensions?.width || canvas.width, screenshotDimensions?.height || canvas.height);\n\n      // invert mirroring\n      if (props.mirrored) {\n        ctx.scale(-1, 1);\n        ctx.translate(-canvas.width, 0);\n      }\n    }\n\n    return canvas;\n  }\n\n  private requestUserMedia() {\n    const { props } = this;\n\n    const sourceSelected = (\n      audioConstraints: boolean | MediaTrackConstraints | undefined,\n      videoConstraints: boolean | MediaTrackConstraints | undefined,\n    ) => {\n      const constraints: MediaStreamConstraints = {\n        video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n      };\n\n      if (props.audio) {\n        constraints.audio =\n          typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n      }\n\n      this.requestUserMediaId++\n      const myRequestUserMediaId = this.requestUserMediaId\n\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(stream => {\n          if (this.unmounted || myRequestUserMediaId !== this.requestUserMediaId) {\n            Webcam.stopMediaStream(stream);\n          } else {\n            this.handleUserMedia(null, stream);\n          }\n        })\n        .catch(e => {\n          this.handleUserMedia(e);\n        });\n    };\n\n    if (\"mediaDevices\" in navigator) {\n      sourceSelected(props.audioConstraints, props.videoConstraints);\n    } else {\n      const optionalSource = (id: string | null) => ({ optional: [{ sourceId: id }] }) as MediaTrackConstraints;\n\n      const constraintToSourceId = (constraint) => {\n        const { deviceId } = constraint;\n\n        if (typeof deviceId === \"string\") {\n          return deviceId;\n        }\n\n        if (Array.isArray(deviceId) && deviceId.length > 0) {\n          return deviceId[0];\n        }\n\n        if (typeof deviceId === \"object\" && deviceId.ideal) {\n          return deviceId.ideal;\n        }\n\n        return null;\n      };\n\n      // @ts-ignore: deprecated api\n      MediaStreamTrack.getSources(sources => {\n        let audioSource: string | null = null;\n        let videoSource: string | null = null;\n\n        sources.forEach((source: MediaStreamTrack) => {\n          if (source.kind === \"audio\") {\n            audioSource = source.id;\n          } else if (source.kind === \"video\") {\n            videoSource = source.id;\n          }\n        });\n\n        const audioSourceId = constraintToSourceId(props.audioConstraints);\n        if (audioSourceId) {\n          audioSource = audioSourceId;\n        }\n\n        const videoSourceId = constraintToSourceId(props.videoConstraints);\n        if (videoSourceId) {\n          videoSource = videoSourceId;\n        }\n\n        sourceSelected(\n          optionalSource(audioSource),\n          optionalSource(videoSource)\n        );\n      });\n    }\n  }\n\n  private handleUserMedia(err, stream?: MediaStream) {\n    const { props } = this;\n\n    if (err || !stream) {\n      this.setState({ hasUserMedia: false });\n      props.onUserMediaError(err);\n\n      return;\n    }\n\n    this.stream = stream;\n\n    try {\n      if (this.video) {\n        this.video.srcObject = stream;\n      }\n      this.setState({ hasUserMedia: true });\n    } catch (error) {\n      this.setState({\n        hasUserMedia: true,\n        src: window.URL.createObjectURL(stream)\n      });\n    }\n\n    props.onUserMedia(stream);\n  }\n\n  render() {\n    const { state, props } = this;\n\n    const {\n      audio,\n      forceScreenshotSourceSize,\n      onUserMedia,\n      onUserMediaError,\n      screenshotFormat,\n      screenshotQuality,\n      minScreenshotWidth,\n      minScreenshotHeight,\n      audioConstraints,\n      videoConstraints,\n      imageSmoothing,\n      mirrored,\n      style = {},\n      children,\n      ...rest\n    } = props;\n\n    const videoStyle = mirrored ? { ...style, transform: `${style.transform || \"\"} scaleX(-1)` } : style;\n\n    const childrenProps: ChildrenProps = {\n      getScreenshot: this.getScreenshot.bind(this),\n    };\n\n    return (\n      <>\n        <video\n          autoPlay\n          src={state.src}\n          muted={!audio}\n          playsInline\n          ref={ref => {\n            this.video = ref;\n          }}\n          style={videoStyle}\n          {...rest}\n        />\n        {children && children(childrenProps)}\n      </>\n    );\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","nodeType","onResolved","resolvedRef","setRef","earlyRef","nextRef","exports","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","timeConstant","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","_automationEvents","_currenTime","_defaultValue","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","defineProperty","factory","require","PORT_MAP","WeakMap","ONGOING_REQUESTS","createBroker","brokerImplementation","partialBrokerImplementation","fullBrokerImplementation","connect","call","MessageChannel","port1","port2","port","portId","set","disconnect","get","isSupported","sender","ongoingRequests","has","Map","createOrGetOngoingRequests","addEventListener","message","data","id","reject","resolve","delete","error","result","start","isMessagePort","method","params","transferables","Promise","generateUniqueNumber","postMessage","notify","functions","entries","handler","_toConsumableArray","dashify","indefiniteArticle","_toConsumableArray__default","dashify__default","indefiniteArticle__default","applyModifiers","name","modifiers","reduce","modifiedName","modifier","head","charAt","toUpperCase","tail","concat","buildRegex","variable","expression","map","join","RegExp","preRenderString","string","parameters","expressionRegex","variables","expressionResult","exec","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","split","prts","prt","prmtrs","missingParameters","renderedParts","preRenderedPart","compile","template","knownParameters","arguments","renderCode","code","renderMessage","render","causeOrMissingParameters","optionalCause","cause","err","status","module","str","options","TypeError","trim","replace","test","condense","toLowerCase","hasClass","element","classList","baseVal","wrap","characterize","encode","recordingId","timeslice","record","sampleRate","typedArrays","buffer","blob","Blob","url","URL","createObjectURL","extendableMediaRecorderWavEncoder","worker","Worker","load","revokeObjectURL","encoderIds","Set","encoderId","arrayBuffers","instantiate","mimeType","addUniqueNumber","register","mediaEncoderHost","loadWorker","createInvalidModificationError","DOMException","createNotSupportedError","observable","noop","rethrow","emitNotSupportedError","observer","wrapSubscribeFunction","patch","toObserver","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","unsubscribe","next","createWrapSubscribeFunction","arg","prototype","complete","bind","mutations","createAnimationFrame","htmlElement","MutationObserver","mutationObserver","records","observe","createMutations","mapSubscribableThing","subscribableThing","createMapSubscribableThing","prependSubscribableThing","prependedValue","createPrependSubscribableThing","on","createAttribute","createGeolocation","createIntersections","createMediaDevices","createMediaQueryMatch","createMetrics","createMidiInputs","createMidiOutputs","listener","event","removeEventListener","createOn","createOnline","createPermissionState","createReports","createResizes","createUnhandledRejection","createVideoFrame","createWakeLock","JSON_RPC_ERROR_CODES","addRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createAddRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createListener","createPostMessage","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","channelCountMode","numberOfInputs","numberOfOutputs","defineProperties","pause","encoderPort","resume","stop","createRecorderAudioWorkletNodeFactory","ongoingRequest","createPostMessageFactory","expectedStates","currentState","includes","expectedState","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","match","unresolvedUrl","importStatementWithResolvedUrl","toString","verifyParameterDescriptors","parameterDescriptors","Array","isArray","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","pickElementFromSet","predicate","matchingElements","from","filter","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","output","input","passiveInputConnections","matchingConnection","passiveInputConnection","size","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelCount","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","audioParams","isAudioBufferSourceNode","isBiquadFilterNode","Q","detune","frequency","gain","isConstantSourceNode","offset","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","destination","isValidLatencyHint","latencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","ignoreDuplicates","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","chnnlDt","inputBuffer","some","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","apply","clear","filteredConnections","addConnectionToAudioParamOfAudioContext","isOffline","outputs","eventListeners","isActive","nativeAudioParam","partialConnection","deleteActiveInputConnectionToAudioParam","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","callback","thisArg","parameterData","processorOptions","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","j","getAudioWorkletProcessor","nativeOfflineAudioContext","proxy","nodeToProcessorMap","nativeAudioWorkletNode","processBuffer","renderedBuffer","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","k","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","disableNormalization","detachArrayBuffer","arrayBuffer","closeAndResolve","onmessage","close","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","ratio","release","threshold","createInvalidStateError","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","Float64Array","convertedFeedforward","min","filteredBuffer","fill","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","max","round","log2","cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","onmessageerror","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","a","b","denominator","evaluatePolynomial","coefficient","z","ongoingTests","testResults","contextStore","audioNodeConnectionsStore","unit32Array","audioParamConnectionsStore","createNativeScriptProcessorNode","bufferSize","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","getFirstSample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","hasOwnProperty","getPrototypeOf","getOwnPropertyDescriptor","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","setValueAtTime","wrapEventListener","descriptor","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","_a","createGetAudioNodeTailTime","cacheTestResult","tester","cachedTestResult","ongoingTest","synchronousTestResult","then","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","all","audioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","createAnalyserNode","renderedNativeAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","createEventTargetConstructor","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","_context","_nativeAudioNode","isPassive","isNewConnectionToAudioNode","maxValue","isNewConnectionToAudioParam","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","clearTimeout","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","analyserNodeRenderer","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","instance","hasInstance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","createNativeAudioBufferSourceNodeFactory","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","currentTime","cancelAndHoldAtTime","flush","previousLastEvent","pop","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","Number","isFinite","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","wrappedListener","onended","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","biquadFilterNodeRenderer","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","createChannelMergerNodeRenderer","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelMergerNodeConstructor","channelMergerNodeRenderer","createChannelMergerNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","channelSplitterNodeRenderer","createChannelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConstantSourceNodeRendererFactory","constantSourceNodeConstructor","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","createConvolverNodeRenderer","renderedNativeConvolverNodes","createConvolverNode","renderedNativeConvolverNode","createConvolverNodeRendererFactory","convolverNodeConstructor","convolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","createDelayNodeRenderer","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDelayNodeRendererFactory","delayNodeConstructor","delayNodeRenderer","_delayTime","createDelayNodeConstructor","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","dynamicsCompressorNodeConstructor","dynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","createGainNodeRenderer","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGainNodeRendererFactory","gainNodeConstructor","gainNodeRenderer","createGainNodeConstructor","createNativeIIRFilterNodeFaker","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","nativeIIRFilterNodeFaker","omega","PI","cos","sin","response","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","createIIRFilterNodeRendererFactory","createNativeIIRFilterNode","createNativeIIRFilterNodeFactory","iIRFilterNodeConstructor","iirFilterNodeRenderer","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createAudioListener","nativeListener","forwardX","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","forwardY","forwardZ","upX","upY","upZ","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","createNativePeriodicWave","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","periodicWaveConstructor","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createPeriodicWaveConstructor","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","createNativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","stereoPannerNodeRenderer","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","createWaveShaperNode","renderedNativeWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","waveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","currentFrame","configurable","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","evaluateSource","fetchSource","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","patchedAudioWorkletProcessor","memberDefinition","bufferRegistration","addModule","nativeContextOrBackupOfflineAudioContext","finally","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","createAddAudioWorkletModule","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","src","location","href","onload","appendChild","createEvaluateSource","createAbortError","fetch","ok","text","createFetchSource","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","fail","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","mediaElement","createMediaElementAudioSourceNodeConstructor","createMediaElementSource","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","nativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","getUnrenderedAudioWorkletNodes","createAudioContextConstructor","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","_","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","renderedNativeAudioWorkletNodeOrGainNode","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","audioWorkletNodeRenderer","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","minimalAudioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resolvePromise","suspend","createMinimalAudioContextConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","ERROR_MESSAGE","createMinimalOfflineAudioContextConstructor","createOfflineAudioContextConstructor","createIsAnyAudioContext","audioNodeStore","createIsAnyAudioNode","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createPromisedAudioNodesEncoderIdAndPort","audioContext","AudioBufferSourceNode","mediaStreamAudioSourceNode","MediaStreamAudioSourceNode","recorderAudioWorkletNode","encoderRegexes","createBlobEvent","nativeBlobEventConstructor","blobEventInit","eventInit","fakeBlobEvent","Event","createBlobEventFactory","BlobEvent","createNativeBlobEventConstructor","createWebAudioMediaRecorder","eventTarget","getSettings","MinimalAudioContext","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","getVideoTracks","audioTracks","ConstantSourceNode","tracks","getTracks","setInterval","currentTracks","track","createWebAudioMediaRecorderFactory","readVariableSizeInteger","readVariableSizeIntegerLength","dataView","firstDataByteOffset","getUint8","createReadVariableSizeInteger","byte","readElementContent","lengthAndValue","content","numberOfSamples","elementOffset","getFloat32","createReadElementContent","readElementType","createReadElementType","decodeWebMChunk","elementType","contents","currentElementType","lengthAndType","contentAndLength","createDecodeWebMChunk","createWebmPcmMediaRecorder","nativeMediaRecorderConstructor","nativeMediaRecorder","stopRecording","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","currentDataView","MultiBufferDataView","buffers","byteOffset","remainingDataView","createWebmPcmMediaRecorderFactory","createEventTarget","createEventTargetFactory","MediaRecorder","createNativeMediaRecorderConstructor","createNativeMediaRecorder","mediaRecorderOptions","bufferedBlobs","dataAvailableListeners","errorListeners","stopListeners","wasActive","dataAvailableListener","errorListener","stopListener","startsWith","createNativeMediaRecorderFactory","mediaRecorderConstructor","isTypeSupported","internalMediaRecorder","_internalMediaRecorder","regex","_ondataavailable","_onerror","_onpause","_onresume","_onstart","_onstop","boundListener","createMediaRecorderConstructor","nativeEventTarget","canvasElement","getContext","captureStream","mediaRecorder","createIsSupportedPromise","rgstr","createAddUniqueNumber","number","createCache","lastNumberWeakMap","collection","nextNumber","MAX_SAFE_INTEGER","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","createGenerateUniqueNumber","cache","lastNumber","random","LAST_NUMBER_WEAK_MAP","phrase","word","l_word","alt_cases","regexes","hookCallback","hooks","setHookCallback","isObject","hasOwnProp","isObjectEmpty","obj","getOwnPropertyNames","isUndefined","isNumber","isDate","Date","arr","res","arrLen","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","updateInProgress","copyConfig","to","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","argLen","stack","deprecations","deprecateSimple","isFunction","Function","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","_calendar","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","makeFormatFunction","formatMoment","expandFormat","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","_longDateFormat","formatUpper","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","s","ss","mm","h","hh","d","dd","w","ww","M","MM","yy","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","u","isLeapYear","year","absFloor","toInt","argumentForCoercion","coercedNumber","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","addRegexToken","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","n","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","parseTwoDigitYear","getSetYear","getIsLeapYear","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","globalLocale","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","loadLocale","isLocaleNameSane","oldLocale","_abbr","aliasedRequire","getSetGlobalLocale","getLocale","defineLocale","abbr","parentLocale","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","matches","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","toArray","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","tmp","isAdding","invalid","isString","String","isMomentInput","isNumberOrStringArray","isMomentInputObject","objectTest","propertyTest","properties","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","prefix","datetime","suffix","zone","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","localeEras","eras","_eras","since","until","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","_eraYearOrdinalRegex","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","isoWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","erasParse","eraYearOrdinalParse","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetMillisecond","getSetSecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","parseZone","preParsePostFormat","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","firstDayOfYear","firstDayOfWeek","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","limit","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","_createForOfIteratorHelper","allowArrayLike","it","_unsupportedIterableToArray","F","done","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","constructor","availableBytes","_step","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","_iterator","byteLengthOfDataView","DataView","_byteLengthOfDataView","_buffers","_byteLength","_byteOffset","_dataViews","_internalBuffer","ArrayBuffer","littleEndian","setUint8","getFloat64","getInt16","getInt32","_this$_findDataViewWi","_findDataViewWithOffset","_this$_findDataViewWi2","byteOffsetOfDataView","getInt8","getUint16","getUint32","_this$_findDataViewWi3","_this$_findDataViewWi4","setFloat32","setFloat64","setInt16","setInt32","_this$_findDataViewWi5","_this$_findDataViewWi6","setInt8","setUint16","setUint32","_this$_findDataViewWi7","_this$_findDataViewWi8","_step2","_iterator2","byteOffsetOfNextDataView","AbstractModalHeader","closeLabel","closeVariant","closeButton","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","sharedManager","Selector","BootstrapModalManager","adjust","actual","dataset","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","BreadcrumbItem","bsPrefix","Component","linkAs","LinkComponent","Anchor","linkProps","title","useBootstrapPrefix","classNames","Breadcrumb","listProps","label","Item","propTypes","PropTypes","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps","timeout","mountOnEnter","InputGroupText","createWithBsPrefix","InputGroup","hasValidation","contextValue","useMemo","InputGroupContext","Text","Radio","FormCheckInput","Checkbox","scrollbarSize","recalc","scrollDiv","position","top","width","height","offsetWidth","removeChild","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","brkPoint","cols","propValue","infix","__awaiter","_arguments","P","generator","fulfilled","rejected","__generator","g","sent","trys","ops","verb","v","op","ReactMediaRecorder","useReactMediaRecorder","RecorderErrors","extendable_media_recorder_1","react_1","extendable_media_recorder_wav_encoder_1","_this","_b","audio","_c","video","onStop","onStart","blobPropertyBag","screen","_g","_h","customMediaStream","_j","stopStreamsOnStop","_k","askPermissionOnMount","mediaChunks","setStatus","_m","isAudioMuted","setIsAudioMuted","_o","mediaBlobUrl","setMediaBlobUrl","_p","setError","getMediaStream","requiredMedia","stream_1","error_1","navigator","mediaDevices","getDisplayMedia","getUserMedia","audioTrack","addTrack","checkConstraints","mediaType","supportedMediaConstraints","getSupportedConstraints","unSupportedConstraints","constraint","onRecordingActive","onRecordingStart","onRecordingStop","chunk","blobProperty","muteAudio","mute","enabled","unMuteAudio","startRecording","readyState","ondataavailable","onstop","onstart","pauseRecording","resumeRecording","previewStream","previewAudioStream","clearBlobUrl","modules","__webpack_require__","enumerable","hasGetUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","_super","hasUserMedia","__extends","Webcam","unmounted","requestUserMedia","onUserMediaError","nextProps","audioConstraintsChanged","JSON","stringify","audioConstraints","videoConstraintsChanged","videoConstraints","minScreenshotWidthChanged","minScreenshotWidth","minScreenshotHeightChanged","minScreenshotHeight","canvas","ctx","stopAndCleanup","removeTrack","stopMediaStream","screenshotDimensions","getCanvas","toDataURL","screenshotFormat","screenshotQuality","videoHeight","canvasWidth","videoWidth","canvasHeight","forceScreenshotSourceSize","aspectRatio","mirrored","translate","scale","imageSmoothingEnabled","imageSmoothing","drawImage","sourceSelected","requestUserMediaId","myRequestUserMediaId","handleUserMedia","optionalSource_1","optional","sourceId","constraintToSourceId_1","deviceId","ideal","MediaStreamTrack","getSources","sources","audioSource","videoSource","audioSourceId","videoSourceId","setState","srcObject","onUserMedia","videoStyle","__assign","transform","childrenProps","getScreenshot","react__WEBPACK_IMPORTED_MODULE_0__","autoPlay","muted","playsInline","__webpack_exports__","__WEBPACK_EXTERNAL_MODULE_react__","arrayLikeToArray","__esModule","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}