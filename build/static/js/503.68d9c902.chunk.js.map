{"version":3,"file":"static/js/503.68d9c902.chunk.js","mappings":"sQAYA,EARqB,SAAC,GAAoC,IAAlCA,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,UAC5B,OACE,UAAC,KAAD,CAAMC,GAAI,CAAEC,SAAUH,EAAKI,KAAOC,OAAQL,EAAKK,OAAQJ,UAAWK,GAAAA,CAAWL,GAAY,gBAAeD,EAAKO,IAA7G,UACGP,EAAKQ,OAAQ,cAAGP,UAAWD,EAAKQ,QACjC,gCAAQR,EAAKS,MAAb,WCiFN,EAnF6B,SAAvBC,EAAwB,GAQZ,IAPhBV,EAOe,EAPfA,KACAW,EAMe,EANfA,IACAC,EAKe,EALfA,cACAX,EAIe,EAJfA,UACAY,EAGe,EAHfA,kBACAC,EAEe,EAFfA,gBACAC,EACe,EADfA,WAEMC,EAAyBL,GAAO,MAEtC,GAAwBM,EAAAA,EAAAA,UAAkBH,EAAiBI,SAASlB,EAAKO,MAAzE,eAAOY,EAAP,KAAaC,EAAb,KAEMC,EAAoBC,OAAOC,OAAOC,OAAS,KAAOL,GAExDM,EAAAA,EAAAA,YAAU,WACRL,EAAQN,EAAiBI,SAASlB,EAAKO,QACtC,CAACO,EAAiBd,IAUrB,OACE,UAACgB,EAAD,CAAKf,UAAWK,GAAAA,CAAW,WAAYL,EAAWa,EAAiBI,SAASlB,EAAKO,KAAO,SAAW,IAAnG,WACE,UAAC,KAAD,CACEL,GAAG,KACHwB,QAZiB,SAACC,GACtBA,EAAEC,iBACF,IAAMC,GAAUV,EAGhB,OAFAC,EAAQS,GACJd,GAAYA,EAAWf,EAAM6B,IAC1B,GAQH,gBAAe7B,EAAKO,IACpBN,UAAWK,GAAAA,CAAW,kBAAmB,aAAcM,GACvDkB,GAAI9B,EAAKO,IACTwB,KAAK,SACL,iBAAe,WACf,gBAAc,OACd,gBAAeZ,EATjB,UAWGnB,EAAKQ,OAAQ,cAAGP,UAAWD,EAAKQ,QACjC,gCAAQR,EAAKS,MAAb,QACA,gBAAKR,UAAU,kBAGhBD,EAAKgC,UACJ,gBAAK/B,UAAWK,GAAAA,CAAWO,EAAmB,CAAEoB,KAAMZ,IAAa,kBAAiBrB,EAAKO,IAAzF,SACGP,EAAKgC,SAASE,KAAI,SAACC,EAAOC,GACzB,OACE,SAAC,WAAD,UACGD,EAAMH,UACL,+BAEE,SAACtB,EAAD,CACEV,KAAMmC,EACNxB,IAAI,MACJC,cAAeN,GAAAA,CAAW,gBAAiBQ,EAAiBI,SAASiB,EAAM5B,KAAO,SAAW,IAC7FO,gBAAiBA,EACjBb,UAAU,GACVY,kBAAkB,gBAClBE,WAAYA,OAIhB,+BAEE,SAAC,EAAD,CACEf,KAAMmC,EACNlC,UAAWK,GAAAA,CAAW,gBAAiB,CACrC+B,OAAQvB,EAAiBI,SAASiB,EAAM5B,YApB7B6B,EAAME,iBA6B/B,SCxEV,EARiB,SAAC,GAAmD,IAAjDtC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWW,EAA+B,EAA/BA,cACnC,OACE,eAAIX,UAAWK,GAAAA,CAAW,WAAYL,GAAtC,UACE,SAAC,EAAD,CAAcD,KAAMA,EAAMC,UAAWW,OC4G3C,EApGgB,SAAC,GAAiC,IAA/B2B,EAA8B,EAA9BA,UACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,QAAyB,MAEzC,GAA8C1B,EAAAA,EAAAA,UAAyBsB,GAAvE,eAAOK,EAAP,KAAwBC,EAAxB,KACA,GAA8C5B,EAAAA,EAAAA,UAAmB,IAAjE,eAAOH,EAAP,KAAwBgC,EAAxB,KAKM/B,EAAa,SAACgC,EAAwBd,GACtCA,GAAMa,EAAmB,CAACC,EAAQ,KAAV,gBAAsBC,EAAAA,EAAAA,IAAcJ,EAAiBG,OAM7EE,GAAaC,EAAAA,EAAAA,cAAY,WAC7B,IAAMC,EAAMC,SAASC,eAAe,kBAChCC,EAAmB,KAEvB,GAAIH,EAAK,CAEP,IADA,IAAMI,EAA6CJ,EAAIK,qBAAqB,KACnEC,EAAI,EAAGA,EAAIF,EAAMG,SAAUD,EAClC,GAAIjB,EAASrC,WAAaoD,EAAME,GAAGtD,SAAU,CAC3CmD,EAAmBC,EAAME,GACzB,MAIJ,GAAIH,EAAkB,CACpB,IAAMK,EAAML,EAAiBM,aAAa,iBACpCC,GAAWC,EAAAA,EAAAA,IAAalB,EAAiBe,GAC3CE,GACFf,EAAmB,CAACe,EAAQ,KAAV,gBAAsBb,EAAAA,EAAAA,IAAcJ,EAAiBiB,UAI5E,CAACrB,EAASrC,SAAUyC,IAiCvB,OA/BAnB,EAAAA,EAAAA,YAAU,WAER,IAAIsC,EAAoBxB,EAAYA,EAAUyB,QAAO,SAAChE,GAAD,OAAYA,EAAKiE,QAAiB,KAAPjE,KAAgB,GAC1FkE,EAAwB5C,OAAOC,OAAOC,MAAQ,KAAO,EAAI,EAE/D,GAAIuC,EAAkBL,OAASQ,EAAuB,CACpD,IAAMC,EAAiBJ,EAAkBK,MAAM,EAAGF,GAE5CG,EAAeN,EAClBK,MAAMF,EAAuB3B,EAAUmB,QACvCxB,KAAI,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAgBa,UAAW,YAE5BC,EAAa,CACjBzC,GAAIiC,EAAkBL,OAAS,EAC/Bc,KAAM,IACN/D,MAAO,OACPD,KAAM,iBACND,IAAK,OACLyB,SAAUqC,GAEZN,EAAiB,kBAAOI,GAAP,CAAuBI,IACxC1B,EAAmBkB,QAEnBlB,EAAmBkB,KAEpB,CAACxB,KAEJd,EAAAA,EAAAA,YAAU,WACJmB,GAAmBA,EAAgBc,OAAS,GAAGT,MAClD,CAACA,EAAYL,KAGd,eAAI3C,UAAU,aAAawE,IAAK/B,EAASZ,GAAG,iBAA5C,UACIc,GAAmB,IAAIV,KAAI,SAAClC,EAAMoC,GAClC,OACE,SAAC,WAAD,UACGpC,EAAKgC,UACJ,SAAC,EAAD,CACEhC,KAAMA,EACNW,IAAI,KACJV,UAAU,WACVY,kBAAkB,gBAClBC,gBAAiBA,EACjBF,cAAc,WACdG,WAAYA,KAGd,SAAC,EAAD,CACEf,KAAMA,EACNY,cAAc,sCACdX,UAAWa,EAAgBI,SAASlB,EAAKO,KAAO,SAAW,MAf5C6B,EAAME,kB,sBCxDrC,EAxBe,SAAC,GAAmC,IAAjCoC,EAAgC,EAAhCA,aAGRC,GAASC,GAFOC,EAAAA,EAAAA,MAAhBD,cAEqB,SAACE,GAAD,MAAY,CACvCH,KAAMG,EAAMC,KAAKJ,SADXA,KAMR,OACE,gBAAK1E,UAAU,mBAAf,UACE,gBAAKA,UAAU,kBAAf,UACE,gBAAKA,UAAWK,GAAAA,CAAW,SAAU,mBAAoB,cAAe,eAAxE,UACE,SAAC0E,EAAA,EAAD,CAAUC,GAAIP,EAAczE,UAAU,kBAAtC,UACE,gBAAK6B,GAAG,sBAAR,UACE,SAAC,EAAD,CAASS,WAAW2C,EAAAA,EAAAA,IAAaP,EAAKQ,qB,yJCApD,I,EAAA,EAhBA,WAAyC,2BAAPC,EAAO,yBAAPA,EAAO,gBACvC,OAAOA,EAAMpB,QAAO,SAAAqB,GAAC,OAAS,MAALA,KAAWC,QAAO,SAACC,EAAKF,GAC/C,GAAiB,oBAANA,EACT,MAAM,IAAIG,MAAM,2EAGlB,OAAY,OAARD,EAAqBF,EAClB,WAAkC,2BAANI,EAAM,yBAANA,EAAM,gBAEvCF,EAAIG,MAAMC,KAAMF,GAEhBJ,EAAEK,MAAMC,KAAMF,MAEf,O,oJCbCG,EAAU,CACdC,OAAQ,CAAC,YAAa,gBACtBrE,MAAO,CAAC,aAAc,gBAGxB,SAASsE,EAAyBC,EAAWC,GAC3C,IACMC,EAAQD,EADC,SAAH,OAAYD,EAAU,GAAGG,eAAzB,OAAyCH,EAAU3B,MAAM,KAE/D+B,EAAUP,EAAQG,GACxB,OAAOE,EACPG,UAASC,EAAAA,EAAAA,GAAIL,EAAMG,EAAQ,IAAK,IAChCC,UAASC,EAAAA,EAAAA,GAAIL,EAAMG,EAAQ,IAAK,IAGlC,IAAMG,GAAc,eACjBC,EAAAA,GAAS,aADQ,SAEjBC,EAAAA,GAAU,eAFO,SAGjBC,EAAAA,GAAW,eAHM,SAIjBC,EAAAA,GAAU,iBAJO,GAMdC,EAAe,CACnB1B,IAAI,EACJ2B,QAAS,IACTC,cAAc,EACdC,eAAe,EACfC,QAAQ,EACRC,kBAAmBlB,GAEfd,EAAwBiC,EAAAA,YAAiB,WAW5CxC,GAAQ,IAVTyC,EAUS,EAVTA,QACAC,EASS,EATTA,WACAC,EAQS,EARTA,UACAC,EAOS,EAPTA,OACAC,EAMS,EANTA,UACArH,EAKS,EALTA,UACA+B,EAIS,EAJTA,SAIS,IAHT+D,UAAAA,OAGS,MAHG,SAGH,MAFTiB,kBAAAA,OAES,MAFWlB,EAEX,EADNyB,GACM,YAEHC,EAAyC,oBAAdzB,EAA2BA,IAAcA,EAGpE0B,GAAcC,EAAAA,EAAAA,UAAQ,kBAAMC,GAAsB,SAAA3B,GACtDA,EAAK4B,MAAMJ,GAAqB,MAC/BN,KAAU,CAACM,EAAmBN,IAC3BW,GAAiBH,EAAAA,EAAAA,UAAQ,kBAAMC,GAAsB,SAAA3B,GACzD,IAAM8B,EAAS,SAAH,OAAYN,EAAkB,GAAGtB,eAAjC,OAAiDsB,EAAkBpD,MAAM,IACrF4B,EAAK4B,MAAMJ,GAAX,UAAmCxB,EAAK8B,GAAxC,QACCX,KAAa,CAACK,EAAmBL,IAC9BY,GAAgBL,EAAAA,EAAAA,UAAQ,kBAAMC,GAAsB,SAAA3B,GACxDA,EAAK4B,MAAMJ,GAAqB,OAC/BJ,KAAY,CAACI,EAAmBJ,IAG7BY,GAAaN,EAAAA,EAAAA,UAAQ,kBAAMC,GAAsB,SAAA3B,GACrDA,EAAK4B,MAAMJ,GAAX,UAAmCR,EAAkBQ,EAAmBxB,GAAxE,OACAiC,EAAAA,EAAAA,GAAqBjC,KACpBqB,KAAS,CAACA,EAAQL,EAAmBQ,IAClCU,GAAgBR,EAAAA,EAAAA,UAAQ,kBAAMC,GAAsB,SAAA3B,GACxDA,EAAK4B,MAAMJ,GAAqB,OAC/BF,KAAY,CAACE,EAAmBF,IACnC,OAAoBa,EAAAA,EAAAA,KAAKC,EAAAA,GAAD,QAAC,QACvB3D,IAAKA,EACL4D,eAAgBC,EAAAA,GACbf,GAHmB,IAItB,gBAAiBA,EAAMxF,KAAOwF,EAAMtC,GAAK,KACzCiC,QAASO,EACTN,WAAYU,EACZT,UAAWW,EACXV,OAAQW,EACRV,UAAWY,EACXK,SAAUvG,EAASyC,IACnBzC,SAAU,SAAC8C,EAAO0D,GAAR,OAAoCvB,EAAAA,aAAmBjF,GAAnB,kBAAkCwG,GAAlC,IAC5CvI,UAAWK,GAAAA,CAAWL,EAAW+B,EAASuF,MAAMtH,UAAWqG,EAAexB,GAA8B,UAAtB0C,GAAiC,iCAMzHxC,EAAS2B,aAAeA,EACxB","sources":["layouts/Horizontal/Menu/MenuItemLink.tsx","layouts/Horizontal/Menu/MenuItemWithChildren.tsx","layouts/Horizontal/Menu/MenuItem.tsx","layouts/Horizontal/Menu/index.tsx","layouts/Horizontal/Navbar.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { MenuItems } from './types';\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n  return (\n    <Link to={{ pathname: item.url }} target={item.target} className={classNames(className)} data-menu-key={item.key}>\n      {item.icon && <i className={item.icon}></i>}\n      <span> {item.label} </span>\n    </Link>\n  );\n};\nexport default MenuItemLink;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { MenuItems } from './types';\nimport MenuItemLink from './MenuItemLink';\n\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: MenuItems) => {\n  const Tag: React.ElementType = tag || 'div';\n\n  const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n  const showMenu: boolean = window.screen.width <= 768 && open;\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <Tag className={classNames('dropdown', className, activeMenuItems!.includes(item.key) ? 'active' : '')}>\n      <Link\n        to=\"/#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        className={classNames('dropdown-toggle', 'arrow-none', linkClassName)}\n        id={item.key}\n        role=\"button\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded={open}\n      >\n        {item.icon && <i className={item.icon}></i>}\n        <span> {item.label} </span>\n        <div className=\"arrow-down\"></div>\n      </Link>\n\n      {item.children ? (\n        <div className={classNames(subMenuClassNames, { show: showMenu })} aria-labelledby={item.key}>\n          {item.children.map((child, index) => {\n            return (\n              <React.Fragment key={index.toString()}>\n                {child.children ? (\n                  <>\n                    {/* parent */}\n                    <MenuItemWithChildren\n                      item={child}\n                      tag=\"div\"\n                      linkClassName={classNames('dropdown-item', activeMenuItems!.includes(child.key) ? 'active' : '')}\n                      activeMenuItems={activeMenuItems}\n                      className=\"\"\n                      subMenuClassNames=\"dropdown-menu\"\n                      toggleMenu={toggleMenu}\n                    />\n                  </>\n                ) : (\n                  <>\n                    {/* child */}\n                    <MenuItemLink\n                      item={child}\n                      className={classNames('dropdown-item', {\n                        active: activeMenuItems!.includes(child.key),\n                      })}\n                    />\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </div>\n      ) : null}\n    </Tag>\n  );\n};\n\nexport default MenuItemWithChildren;\n","import classNames from 'classnames';\nimport { MenuItems } from './types';\nimport MenuItemLink from './MenuItemLink';\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n  return (\n    <li className={classNames('nav-item', className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { findAllParent, findMenuItem } from 'helpers';\nimport { MenuItemType } from 'appConstants';\nimport MenuItemWithChildren from './MenuItemWithChildren';\nimport MenuItem from './MenuItem';\n\n/**\n * Renders the application menu\n */\n\ntype AppMenuProps = {\n  menuItems: Array<MenuItemType>;\n};\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n  const location = useLocation();\n  const menuRef = useRef<HTMLUListElement>(null);\n\n  const [topnavMenuItems, setTopnavMenuItems] = useState<MenuItemType[]>(menuItems);\n  const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: MenuItemType, show: boolean) => {\n    if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById('main-side-menu');\n    let matchingMenuItem = null;\n\n    if (div) {\n      const items: HTMLCollectionOf<HTMLAnchorElement> = div.getElementsByTagName('a');\n      for (let i = 0; i < items.length; ++i) {\n        if (location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute('data-menu-key');\n        const activeMt = findMenuItem(topnavMenuItems, mid!);\n        if (activeMt) {\n          setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n\n  useEffect(() => {\n    //controlling how many menu items can be displayed in it\n    let modifiedMenuItems = menuItems ? menuItems.filter((item) => (!item.isTitle ? item : null)) : [];\n    const defaultDisplayedItems = window.screen.width > 1366 ? 7 : 5;\n\n    if (modifiedMenuItems.length > defaultDisplayedItems) {\n      const displayedItems = modifiedMenuItems.slice(0, defaultDisplayedItems);\n\n      const moreChildren = modifiedMenuItems\n        .slice(defaultDisplayedItems, menuItems.length)\n        .map((i) => ({ ...i, parentKey: 'more' }));\n\n      const otherItems = {\n        id: modifiedMenuItems.length + 1,\n        path: '/',\n        label: 'More',\n        icon: 'uil-ellipsis-h',\n        key: 'more',\n        children: moreChildren,\n      };\n      modifiedMenuItems = [...displayedItems, otherItems];\n      setTopnavMenuItems(modifiedMenuItems);\n    } else {\n      setTopnavMenuItems(modifiedMenuItems);\n    }\n  }, [menuItems]);\n\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n\n  return (\n    <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n      {(topnavMenuItems || []).map((item, index) => {\n        return (\n          <React.Fragment key={index.toString()}>\n            {item.children ? (\n              <MenuItemWithChildren\n                item={item}\n                tag=\"li\"\n                className=\"nav-item\"\n                subMenuClassNames=\"dropdown-menu\"\n                activeMenuItems={activeMenuItems}\n                linkClassName=\"nav-link\"\n                toggleMenu={toggleMenu}\n              />\n            ) : (\n              <MenuItem\n                item={item}\n                linkClassName=\"nav-link dropdown-toggle arrow-none\"\n                className={activeMenuItems.includes(item.key) ? 'active' : ''}\n              />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default AppMenu;\n","import AppMenu from './Menu';\nimport { Collapse } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { getMenuItems } from 'helpers';\nimport { useRedux } from 'hooks';\n\ntype NavbarProps = {\n  isMenuOpened?: boolean;\n};\n\nconst Navbar = ({ isMenuOpened }: NavbarProps) => {\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n  // change the inputTheme value to light for creative theme\n  const inputTheme = 'dark';\n\n  return (\n    <div className=\"topnav shadow-sm\">\n      <div className=\"container-fluid\">\n        <nav className={classNames('navbar', 'navbar-expand-lg', 'topnav-menu', 'navbar-' + inputTheme)}>\n          <Collapse in={isMenuOpened} className=\"navbar-collapse\">\n            <div id=\"topnav-menu-content\">\n              <AppMenu menuItems={getMenuItems(user.teams)} />\n            </div>\n          </Collapse>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"names":["item","className","to","pathname","url","target","classNames","key","icon","label","MenuItemWithChildren","tag","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","Tag","useState","includes","open","setOpen","showMenu","window","screen","width","useEffect","onClick","e","preventDefault","status","id","role","children","show","map","child","index","active","toString","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","setTopnavMenuItems","setActiveMenuItems","menuItem","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","i","length","mid","getAttribute","activeMt","findMenuItem","modifiedMenuItems","filter","isTitle","defaultDisplayedItems","displayedItems","slice","moreChildren","parentKey","otherItems","path","ref","isMenuOpened","user","appSelector","useRedux","state","Auth","Collapse","in","getMenuItems","teams","funcs","f","reduce","acc","Error","args","apply","this","MARGINS","height","getDefaultDimensionValue","dimension","elem","value","toUpperCase","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","React","onEnter","onEntering","onEntered","onExit","onExiting","props","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps"],"sourceRoot":""}