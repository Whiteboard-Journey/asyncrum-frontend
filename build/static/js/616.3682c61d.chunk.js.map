{"version":3,"file":"static/js/616.3682c61d.chunk.js","mappings":"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","sources":["pages/account/AccountLayout.tsx","pages/account/OAuthButton.tsx","pages/account/Register.tsx","pages/account/hooks/useAccountLayout.ts","pages/account/hooks/useForgetPassword.ts","pages/account/hooks/useLogin.ts","pages/account/hooks/useOAuthLogin.ts","pages/account/hooks/useLogout.ts","pages/account/hooks/useRegister.ts"],"sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Logo from 'assets/images/asyncrum-logo-white.png';\nimport { useAccountLayout } from './hooks';\n\ntype AccountLayoutProps = {\n  bottomLinks?: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst AccountLayout = ({ bottomLinks, children }: AccountLayoutProps) => {\n  const { t } = useTranslation();\n\n  useAccountLayout();\n\n  return (\n    <>\n      <div className=\"account-pages pt-2 pt-sm-5 pb-4 pb-sm-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md={8} lg={6} xl={5} xxl={4}>\n              <Card>\n                {/* logo */}\n                <Card.Header className=\"pt-4 pb-3 text-center bg-primary\">\n                  <Link to=\"/\">\n                    <span>\n                      <img src={Logo} alt=\"\" height=\"36\" />\n                    </span>\n                  </Link>\n                </Card.Header>\n                <Card.Body className=\"p-4\">{children}</Card.Body>\n              </Card>\n\n              {/* bottom links */}\n              {bottomLinks}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <footer className=\"footer footer-alt\">{t(`2022 Â© Asyncrum - Software Maestro 13th Team WBJ`)}</footer>\n    </>\n  );\n};\n\nexport default AccountLayout;\n","import { Button } from 'react-bootstrap';\nimport naverIcon from 'assets/images/btnW_icon_circle.png';\nimport googleIcon from 'assets/images/google.png';\nimport config from 'config';\n\ntype Props = {\n  type: string;\n  loading: boolean;\n};\n\nconst OAuthButton = ({ type, loading }: Props) => {\n  return (\n    <Button\n      href={`${config.API_URL}/oauth2/authorization/${type}?redirect_uri=${config.WEB_URL}/account/oauth`}\n      className=\"signin-button\"\n      variant=\"primary\"\n      type=\"submit\"\n      disabled={loading}\n    >\n      <img\n        className=\"signin-icon\"\n        src={type === 'naver' ? naverIcon : googleIcon}\n        alt={type === 'naver' ? 'Naver' : 'Google' + ' Icon'}\n      />{' '}\n      Sign in with\n      {type === 'naver' ? ' Naver' : ' Google'}\n    </Button>\n  );\n};\n\nexport default OAuthButton;\n","import { Navigate, Link } from 'react-router-dom';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { VerticalForm, FormInput } from 'components';\nimport AccountLayout from './AccountLayout';\nimport { useRegister } from './hooks';\nimport OAuthButton from './OAuthButton';\n\nexport type UserData = {\n  fullname: string;\n  email: string;\n  password: string;\n};\n\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"mt-3\">\n      <Col className=\"text-center\">\n        <p className=\"text-muted\">\n          {t('Already have an account?')}{' '}\n          <Link to={'/account/login'} className=\"text-muted ms-1\">\n            <b>{t('Log In')}</b>\n          </Link>\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nconst Register = () => {\n  const { t } = useTranslation();\n  const { loading, userSignUp, error, schemaResolver, onSubmit } = useRegister();\n\n  return (\n    <>\n      {userSignUp ? <Navigate to={'/account/confirm'}></Navigate> : null}\n\n      <AccountLayout bottomLinks={<BottomLink />}>\n        <div className=\"text-center w-75 m-auto\">\n          <h4 className=\"text-dark-50 text-center mt-0 fw-bold\">{t('Free Sign Up')}</h4>\n          <p className=\"text-muted mb-4\">\n            {t(\"Don't have an account? Create your account, it takes less than a minute.\")}\n          </p>\n        </div>\n\n        {error && (\n          <Alert variant=\"danger\" className=\"my-2\">\n            {error}\n          </Alert>\n        )}\n\n        <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n          <FormInput\n            label={t('Email address')}\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('Enter your email')}\n            containerClass={'mb-3'}\n          />\n          <FormInput\n            label={t('Password')}\n            type=\"password\"\n            name=\"password\"\n            placeholder={t('Enter your password')}\n            containerClass={'mb-3'}\n          />\n          <FormInput\n            label={t('Confirm Password')}\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder={t('Enter your password again')}\n            containerClass={'mb-3'}\n          />\n          <FormInput\n            label={t('Full Name')}\n            type=\"text\"\n            name=\"fullname\"\n            placeholder={t('Enter your name')}\n            containerClass={'mb-3'}\n          />\n          <FormInput\n            label={t('I accept Terms and Conditions')}\n            type=\"checkbox\"\n            name=\"checkboxsignup\"\n            containerClass={'mb-3 text-muted'}\n          />\n\n          <div className=\"mb-3 mb-0 text-center\">\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n              {t('Sign Up')}\n            </Button>\n          </div>\n\n          <div className=\"pt-3 mb-3 mb-0 text-center border-top\">\n            <OAuthButton type=\"naver\" loading={loading} />\n            <OAuthButton type=\"google\" loading={loading} />\n          </div>\n        </VerticalForm>\n      </AccountLayout>\n    </>\n  );\n};\n\nexport default Register;\n","import { useEffect } from 'react';\n\nexport default function useAccountLayout() {\n  useEffect(() => {\n    if (document.body) document.body.classList.add('authentication-bg');\n\n    return () => {\n      if (document.body) document.body.classList.remove('authentication-bg');\n    };\n  }, []);\n}\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, forgotPassword } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../ForgetPassword';\n\nexport default function useForgetPassword() {\n  const { dispatch, appSelector } = useRedux();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, passwordReset, resetPasswordSuccess, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    passwordReset: state.Auth.passwordReset,\n    resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n  }));\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t('Please enter Username')),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(forgotPassword(formData['username']));\n  };\n\n  return {\n    loading,\n    passwordReset,\n    resetPasswordSuccess,\n    error,\n    schemaResolver,\n    onSubmit,\n  };\n}\n","import { useEffect } from 'react';\nimport { Location, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, loginUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../Login';\n\ntype LocationState = {\n  from?: Location;\n};\n\nexport default function useLogin() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const location: Location = useLocation();\n  let redirectUrl = '/';\n\n  if (location.state) {\n    const { from } = location.state as LocationState;\n    redirectUrl = from ? from.pathname : '/';\n  }\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, userLoggedIn, user, error } = appSelector((state) => ({\n    loading: state.Auth.loading as boolean,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    userLoggedIn: state.Auth.userLoggedIn,\n  }));\n\n  /*\n    form validation schema\n    */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t('Please enter username')),\n      password: yup.string().required(t('Please enter password')),\n    })\n  );\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (formData: UserData) => {\n    dispatch(loginUser(formData['username'], formData['password']));\n  };\n\n  return {\n    loading,\n    userLoggedIn,\n    user,\n    error,\n    schemaResolver,\n    onSubmit,\n    redirectUrl,\n  };\n}\n","import { useEffect } from 'react';\nimport { Location, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { resetAuth, oauthLoginUser, readAllTeam } from 'redux/actions';\nimport { useRedux } from 'hooks';\n\ntype LocationState = {\n  from?: Location;\n};\n\nexport default function useOAuthLogin() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const location: Location = useLocation();\n  let redirectUrl = '/';\n\n  if (location.state) {\n    const { from } = location.state as LocationState;\n    redirectUrl = from ? from.pathname : '/';\n  }\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, userLoggedIn, user, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    userLoggedIn: state.Auth.userLoggedIn,\n  }));\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (token: string) => {\n    dispatch(oauthLoginUser(token));\n    dispatch(readAllTeam());\n  };\n\n  return {\n    loading,\n    userLoggedIn,\n    user,\n    error,\n    onSubmit,\n    redirectUrl,\n  };\n}\n","import { useEffect } from 'react';\nimport { logoutUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\n\nexport default function useLogout() {\n  const { dispatch } = useRedux();\n\n  useEffect(() => {\n    dispatch(logoutUser());\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { resetAuth, signupUser } from 'redux/actions';\nimport { useRedux } from 'hooks';\nimport { UserData } from '../Register';\n\nexport default function useRegister() {\n  const { t } = useTranslation();\n  const { dispatch, appSelector } = useRedux();\n\n  const { loading, userSignUp, error } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    error: state.Auth.error,\n    userSignUp: state.Auth.userSignUp,\n  }));\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      fullname: yup.string().required(t('Please enter your full name')),\n      email: yup.string().required('Please enter your email').email('Please enter a valid email address'),\n      password: yup.string().required(t('Please enter password')),\n      confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n      checkboxsignup: yup.boolean().oneOf([true], 'You must agree to the terms and conditions'),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(signupUser(formData['fullname'], formData['email'], formData['password']));\n  };\n\n  return {\n    loading,\n    userSignUp,\n    error,\n    schemaResolver,\n    onSubmit,\n  };\n}\n"],"names":["bottomLinks","children","t","useTranslation","useAccountLayout","className","md","lg","xl","xxl","to","src","Logo","alt","height","type","loading","href","config","variant","disabled","naverIcon","googleIcon","BottomLink","useRegister","userSignUp","error","schemaResolver","onSubmit","resolver","defaultValues","label","name","placeholder","containerClass","useEffect","document","body","classList","add","remove","useForgetPassword","useRedux","dispatch","appSelector","resetAuth","state","Auth","user","passwordReset","resetPasswordSuccess","yupResolver","yup","shape","username","required","formData","forgotPassword","useLogin","location","useLocation","redirectUrl","from","pathname","userLoggedIn","password","loginUser","useOAuthLogin","token","oauthLoginUser","readAllTeam","useLogout","logoutUser","fullname","email","confirmPassword","oneOf","checkboxsignup","signupUser"],"sourceRoot":""}