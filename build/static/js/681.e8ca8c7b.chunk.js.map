{"version":3,"file":"static/js/681.e8ca8c7b.chunk.js","mappings":"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","sources":["../node_modules/clsx/dist/clsx.m.js","../node_modules/react-toastify/src/utils/propValidator.ts","../node_modules/react-toastify/src/utils/constant.ts","../node_modules/react-toastify/src/utils/cssTransition.tsx","../node_modules/react-toastify/src/utils/collapseToast.ts","../node_modules/react-toastify/src/utils/mapper.ts","../node_modules/react-toastify/src/core/eventManager.ts","../node_modules/react-toastify/src/components/Icons.tsx","../node_modules/react-toastify/src/hooks/useToastContainer.ts","../node_modules/react-toastify/src/hooks/useToast.ts","../node_modules/react-toastify/src/components/CloseButton.tsx","../node_modules/react-toastify/src/components/ProgressBar.tsx","../node_modules/react-toastify/src/components/Toast.tsx","../node_modules/react-toastify/src/components/Transitions.tsx","../node_modules/react-toastify/src/components/ToastContainer.tsx","../node_modules/react-toastify/src/core/toast.ts"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId != null;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n      return () => {\n        toastToRender.clear();\n        eventManager.emit(Event.WillUnmount, instance);\n      };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, isToastIdValid } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => isToastIdValid(id) && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","cssTransition","enter","_ref","exit","appendPosition","collapse","collapseDuration","children","_ref2","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","animationStep","useRef","useLayoutEffect","node","current","classToToken","split","onEntered","target","dispatchEvent","Event","removeEventListener","type","classList","remove","add","addEventListener","onEnter","useEffect","onExited","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","collapseToast","className","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","rest","viewBox","width","fill","Icons","info","d","warning","success","error","spinner","getIcon","Icon","iconProps","cloneElement","maybeIcon","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","removeToast","state","dequeueToast","shift","appendToast","toastContent","toastProps","staleId","buildToast","delay","options","enableMultiContainer","updateId","isNotValid","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","iconOut","onOpen","onClose","clear","getToastToRender","toRender","collection","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Toast","Transition","cssClasses","isProgressControlled","closeButtonProps","Close","ref","Bounce","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","baseParams","params","update","dismiss","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sourceRoot":""}