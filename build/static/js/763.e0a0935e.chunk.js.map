{"version":3,"file":"static/js/763.e0a0935e.chunk.js","mappings":"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","sources":["pages/settings/LeftPanel.tsx","pages/settings/PersonalInfoForm.tsx","pages/settings/PersonalImageForm.tsx","pages/settings/PersonalSettings.tsx","pages/settings/hooks/usePersonalSettings.tsx","pages/settings/hooks/useTeamSettings.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Team } from './types';\nimport { Dropdown } from 'react-bootstrap';\nimport { useRedux } from 'hooks';\nimport { readTeam } from 'redux/actions';\n\ntype LeftPanelProps = {\n  selected: string;\n};\n\nconst LeftPanel = ({ selected }: LeftPanelProps) => {\n  const { dispatch, appSelector } = useRedux();\n  const { teamList, currentTeam } = appSelector((state) => ({\n    teamList: state.Team.teamList,\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  return (\n    <>\n      {currentTeam && (\n        <Dropdown className=\"mb-3\">\n          <Dropdown.Toggle className=\"w-100\">\n            <i className=\"mdi me-1\"></i> {currentTeam.name}\n          </Dropdown.Toggle>\n          <Dropdown.Menu className=\"w-100\">\n            {teamList.map((team: Team) => {\n              return (\n                <Dropdown.Item\n                  key={team.id}\n                  onClick={() => {\n                    dispatch(readTeam(team.id));\n                  }}\n                  active={team.id === currentTeam.id ? true : false}\n                >\n                  <i className=\"\"></i> {team.name}\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <div className=\"email-menu-list\">\n        <Link to=\"/settings/user\" className={selected === 'personal' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-outline font-18 align-middle me-2\"></i>Personal Profile\n        </Link>\n        <Link to=\"/settings/team\" className={selected === 'team' ? 'active text-primary' : ''}>\n          <i className=\"mdi mdi-account-group-outline font-18 align-middle me-2\"></i>Team Profile\n        </Link>\n        <Link to=\"/settings/create-team\">\n          <i className=\"mdi mdi-plus font-18 align-middle me-2\"></i>Create Team\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { Button, Form } from 'react-bootstrap';\nimport TimezoneSelect from 'react-timezone-select';\nimport { FormInput } from 'components';\nimport { usePersonalSettings } from './hooks';\nimport { useState } from 'react';\nimport { useRedux } from 'hooks';\n\nconst PersonalInfoForm: React.FC = () => {\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const { userFullname, onSubmitProfileInfo } = usePersonalSettings();\n  const [selectedTimezone, setSelectedTimezone] = useState(\n    user.timeZone\n      ? { value: user.timeZone, label: '' }\n      : { value: Intl.DateTimeFormat().resolvedOptions().timeZone, label: '' }\n  );\n  return (\n    <form onSubmit={onSubmitProfileInfo}>\n      <FormInput\n        label=\"Full Name\"\n        type=\"text\"\n        name=\"fullname\"\n        containerClass={'mb-3'}\n        key=\"fullname\"\n        placeholder={userFullname}\n      />\n      <FormInput label=\"Company Name\" type=\"text\" name=\"companyName\" containerClass={'mb-3'} key=\"companyName\" />\n      <FormInput label=\"Role\" type=\"text\" name=\"role\" containerClass={'mb-3'} key=\"role\" />\n      <Form.Label htmlFor=\"timezone\">Timezone</Form.Label>\n      <Form.Control type=\"hidden\" id=\"timezone\" aria-describedby=\"timezone\" value={selectedTimezone.value} />\n      <div className=\"mb-3\">\n        <TimezoneSelect value={selectedTimezone.value} onChange={setSelectedTimezone} />\n      </div>\n      <Button color=\"primary\" type=\"submit\">\n        Save Changes\n      </Button>\n    </form>\n  );\n};\n\nexport default PersonalInfoForm;\n","import { Button } from 'react-bootstrap';\nimport { usePersonalSettings } from './hooks';\n\nconst PersonalImageForm: React.FC = () => {\n  const { previewImage, fileInput, onChangeProfileImage, onSaveProfileImage, onCancelChangeProfileImage } =\n    usePersonalSettings();\n\n  return (\n    <>\n      <div style={{ height: 190, position: 'relative' }}>\n        <p className=\"mb-1\" style={{ fontWeight: '600' }}>\n          Profile Image\n        </p>\n        <div className=\"overlay-container\">\n          <img\n            src={previewImage}\n            alt=\"profile preview\"\n            className=\"rounded ratio ratio-1x1\"\n            style={{ position: 'absolute', width: 150, height: 150, cursor: 'pointer' }}\n            referrerPolicy=\"no-referrer\"\n          />\n          <input\n            type=\"file\"\n            accept=\"image/png\"\n            style={{ display: 'none' }}\n            name=\"profileImage\"\n            onChange={onChangeProfileImage}\n            ref={fileInput}\n          />\n          <div\n            className=\"overlay rounded\"\n            onClick={() => {\n              if (fileInput.current) {\n                fileInput.current.click();\n              }\n            }}>\n            <div className=\"overlay-text\">click to upload</div>\n          </div>\n        </div>\n      </div>\n      <Button className=\"me-2\" onClick={onSaveProfileImage}>\n        Save\n      </Button>\n      <Button className=\"btn btn-secondary\" onClick={onCancelChangeProfileImage}>\n        Cancel\n      </Button>\n    </>\n  );\n};\n\nexport default PersonalImageForm;\n","import { Row, Col, Card } from 'react-bootstrap';\nimport LeftPanel from './LeftPanel';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PersonalInfoForm from './PersonalInfoForm';\nimport PersonalImageForm from './PersonalImageForm';\n\nconst PersonalSettings = () => {\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Settings</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <div className=\"page-aside-left\">\n                <LeftPanel selected=\"personal\" />\n              </div>\n\n              <div className=\"page-aside-right\">\n                <h4 className=\"mb-3\">Change Personal Information</h4>\n                <Row>\n                  <Col md={7}>\n                    <PersonalInfoForm />\n                  </Col>\n                  <Col md={{ span: 3, offset: 2 }}>\n                    <PersonalImageForm />\n                  </Col>\n                </Row>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\n\nexport default PersonalSettings;\n","import { toast } from 'react-toastify';\nimport {\n  updateProfileInfo as updateProfileInfoAPI,\n  createProfileImage as createProfileImageAPI,\n  uploadProfileImage as uploadProfileImageAPI,\n} from 'helpers';\nimport { useRef, useState } from 'react';\nimport { useRedux } from 'hooks';\n\nconst usePersonalSettings = () => {\n  const { appSelector } = useRedux();\n\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const [userFullname, setUserFullname] = useState<string>(user.fullname);\n  const [previewImage, setPreviewImage] = useState<string>(user.profileImageUrl);\n  const [profileImageFile, setProfileImageFile] = useState<null | File>();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const onSubmitProfileInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let fullname = ((e.target as HTMLFormElement).elements.namedItem('fullname') as HTMLInputElement).value;\n    fullname = fullname === '' ? user.fullname : fullname;\n    let timezone = ((e.target as HTMLFormElement).elements.namedItem('timezone') as HTMLInputElement).value;\n    timezone = timezone === '' ? user.timeZone : timezone;\n    const fcmRegistrationToken = sessionStorage.getItem('fcmRegistrationToken');\n    await updateProfileInfoAPI({ fullname, timezone, fcmRegistrationToken });\n    setUserFullname(fullname);\n    user.fullname = fullname;\n    user.timeZone = timezone;\n    sessionStorage.setItem('asyncrum_user', JSON.stringify(user));\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(user.profileImageUrl);\n      return;\n    } else {\n      setProfileImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveProfileImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!profileImageFile) {\n      return;\n    } else {\n      const createProfileImageAPIResponse = await createProfileImageAPI();\n      const presignedURL = createProfileImageAPIResponse.data.preSignedURL;\n      await uploadProfileImageAPI(presignedURL, profileImageFile);\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeProfileImage = () => {\n    setPreviewImage(user.profileImageUrl);\n    setProfileImageFile(null);\n  };\n\n  const changeInfoNotify = () => toast(<div>Personal information changed successfully!</div>);\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Profile image saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  return {\n    userFullname,\n    previewImage,\n    profileImageFile,\n    fileInput,\n    onSubmitProfileInfo,\n    onChangeProfileImage,\n    onSaveProfileImage,\n    onCancelChangeProfileImage,\n  };\n};\n\nexport default usePersonalSettings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useRedux, useToggle } from 'hooks';\nimport { toast } from 'react-toastify';\nimport {\n  createLogoImage as createLogoImageAPI,\n  uploadLogoImage as uploadLogoImageAPI,\n  inviteMember as inviteMemberAPI,\n} from 'helpers';\nimport { createTeam, readTeam, updateTeam, leaveTeam } from 'redux/actions';\nimport { Invitation } from '../types';\nimport defaultImage from 'assets/images/asyncrum-logo-small.png';\n\nconst useTeamSettings = () => {\n  const { dispatch, appSelector } = useRedux();\n\n  const { user, currentTeam } = appSelector((state) => ({\n    user: state.Auth.user,\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [previewImage, setPreviewImage] = useState<string>(currentTeam?.pictureUrl);\n  const [logoImageFile, setLogoImageFile] = useState<null | File>();\n  const [isDeleteOpen, toggleDelete] = useToggle();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (currentTeam) {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    setPreviewImage(currentTeam?.pictureUrl);\n  }, [currentTeam]);\n\n  const onCreateTeam = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    const code = name.slice(0, 3) + Date.now();\n    dispatch(createTeam(name, code));\n  };\n\n  const onSubmitTeamInfo = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!currentTeam) {\n      return;\n    }\n    const name = ((e.target as HTMLFormElement).elements.namedItem('name') as HTMLInputElement).value;\n    dispatch(updateTeam(currentTeam.id, name));\n    (e.target as HTMLFormElement).reset();\n    changeInfoNotify();\n  };\n\n  const onChangeLogoImage = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) {\n      setPreviewImage(currentTeam?.pictureUrl);\n      return;\n    } else {\n      setLogoImageFile(e.target.files[0]);\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setPreviewImage(reader.result as string);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const onSaveLogoImage = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!logoImageFile || !currentTeam) {\n      return;\n    } else {\n      const createLogoImageAPIResponse = await createLogoImageAPI(currentTeam.id);\n      const presignedURL = createLogoImageAPIResponse.data.preSignedURL;\n      await uploadLogoImageAPI(presignedURL, logoImageFile);\n      dispatch(readTeam(currentTeam.id));\n      changeImageNotify();\n    }\n  };\n\n  const onCancelChangeLogoImage = () => {\n    setPreviewImage(currentTeam?.pictureUrl ? currentTeam?.pictureUrl : defaultImage);\n    setLogoImageFile(null);\n  };\n\n  const onInvite = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!currentTeam) {\n      return;\n    }\n    const email = ((e.target as HTMLFormElement).elements.namedItem('email') as HTMLInputElement).value;\n    const invitationData: Invitation = {\n      memberId: null,\n      memberEmail: email,\n    };\n    await inviteMemberAPI(currentTeam.id, invitationData);\n    (e.target as HTMLFormElement).reset();\n    invitationNotify(email);\n  };\n\n  const onLeaveTeam = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(leaveTeam(currentTeam.id, user.id));\n  };\n\n  const changeInfoNotify = () => {\n    toast(<div>Team Information changed successfully!</div>);\n  };\n\n  const changeImageNotify = () =>\n    toast(\n      <div>\n        Team logo saved successfully!\n        <br />\n        The change might take a few minutes to be applied.\n      </div>\n    );\n\n  const invitationNotify = (email: string) =>\n    toast(\n      <div>\n        Invitation sent to <b>{email}</b>!\n      </div>\n    );\n\n  const closeModalAfterFunction = (\n    f: (e: React.FormEvent<HTMLFormElement>) => void,\n    event: React.FormEvent<HTMLFormElement>,\n    toggle: () => void\n  ) => {\n    f(event);\n    toggle();\n  };\n\n  return {\n    loading,\n    previewImage,\n    defaultImage,\n    logoImageFile,\n    fileInput,\n    isDeleteOpen,\n    setPreviewImage,\n    onCreateTeam,\n    onSubmitTeamInfo,\n    onChangeLogoImage,\n    onSaveLogoImage,\n    onCancelChangeLogoImage,\n    onInvite,\n    onLeaveTeam,\n    toggleDelete,\n    closeModalAfterFunction,\n  };\n};\n\nexport default useTeamSettings;\n"],"names":["selected","useRedux","dispatch","appSelector","state","teamList","Team","currentTeam","className","name","map","team","onClick","readTeam","id","active","to","user","Auth","usePersonalSettings","userFullname","onSubmitProfileInfo","useState","timeZone","value","label","Intl","DateTimeFormat","resolvedOptions","selectedTimezone","setSelectedTimezone","onSubmit","type","containerClass","placeholder","Form","htmlFor","onChange","Button","color","previewImage","fileInput","onChangeProfileImage","onSaveProfileImage","onCancelChangeProfileImage","style","height","position","fontWeight","src","alt","width","cursor","referrerPolicy","accept","display","ref","current","click","Row","Col","Card","LeftPanel","md","span","offset","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","fullname","setUserFullname","profileImageUrl","setPreviewImage","profileImageFile","setProfileImageFile","useRef","e","preventDefault","target","elements","namedItem","timezone","fcmRegistrationToken","sessionStorage","getItem","updateProfileInfoAPI","setItem","JSON","stringify","reset","changeInfoNotify","createProfileImageAPI","createProfileImageAPIResponse","presignedURL","data","preSignedURL","uploadProfileImageAPI","changeImageNotify","toast","files","reader","FileReader","onload","readyState","result","readAsDataURL","loading","setLoading","pictureUrl","logoImageFile","setLogoImageFile","useToggle","isDeleteOpen","toggleDelete","useEffect","onCreateTeam","code","slice","Date","now","createTeam","onSubmitTeamInfo","updateTeam","onSaveLogoImage","createLogoImageAPI","createLogoImageAPIResponse","uploadLogoImageAPI","onInvite","email","invitationData","memberId","memberEmail","inviteMemberAPI","invitationNotify","defaultImage","onChangeLogoImage","onCancelChangeLogoImage","onLeaveTeam","leaveTeam","closeModalAfterFunction","f","event","toggle"],"sourceRoot":""}