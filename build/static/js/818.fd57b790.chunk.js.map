{"version":3,"file":"static/js/818.fd57b790.chunk.js","mappings":"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","sources":["components/ThemeCustomizer/useThemeCustomizer.ts","components/hooks/useVideoRecorder.ts","components/hooks/useCommentVideoRecorder.ts","components/form/VerticalForm.tsx","components/form/FormInput.tsx","components/ThemeCustomizer/LayoutTypes.tsx","components/ThemeCustomizer/LayoutColor.tsx","components/ThemeCustomizer/LayoutWidth.tsx","components/ThemeCustomizer/LeftSideBarTheme.tsx","components/ThemeCustomizer/LeftSideBarType.tsx","components/ThemeCustomizer/ThemeCustomizer.tsx","components/PricingCard.tsx","components/PageTitle.tsx","components/CardTitle.tsx","components/VideoRecorder.tsx","components/CommentVideoRecorder.tsx","components/CreateCommentRecordButton.tsx","pages/docs/hooks/useDailyStandup.ts","pages/docs/hooks/useModal.ts","pages/docs/hooks/useMoment.ts","pages/docs/hooks/useWhiteboard.ts","pages/docs/hooks/useWhiteboardCard.ts","pages/docs/hooks/useMeeting.ts","pages/docs/hooks/useMeetingCard.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport {\n  changeLayout,\n  changeLayoutColor,\n  changeLayoutWidth,\n  changeSidebarTheme,\n  changeSidebarType,\n} from 'redux/actions';\nimport * as layoutConstants from 'appConstants';\nimport { useRedux } from 'hooks';\n\nexport default function useThemeCustomizer() {\n  const { dispatch, appSelector } = useRedux();\n\n  const { layoutColor, layoutType, layoutWidth, leftSideBarType, leftSideBarTheme } = appSelector((state) => ({\n    layoutColor: state.Layout.layoutColor,\n    layoutType: state.Layout.layoutType,\n    layoutWidth: state.Layout.layoutWidth,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  const [disableLayoutWidth, setDisableLayoutWidth] = useState<boolean>(false);\n  const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n  const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n\n  /**\n   * change state based on props changes\n   */\n  const _loadStateFromProps = useCallback(() => {\n    setDisableLayoutWidth(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED &&\n        layoutType !== layoutConstants.LayoutTypes.LAYOUT_FULL\n    );\n\n    setDisableSidebarTheme(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n        layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED\n    );\n    setDisableSidebarType(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n  }, [layoutType]);\n\n  useEffect(() => {\n    _loadStateFromProps();\n  }, [_loadStateFromProps]);\n\n  /**\n   * On layout change\n   */\n  const changeLayoutType = (value: string) => {\n    const layout = value;\n    switch (layout) {\n      case 'topnav':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n        break;\n      case 'detached':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n        break;\n      case 'full':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_FULL));\n        break;\n      default:\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n        break;\n    }\n  };\n\n  /**\n   * Change the layout color\n   */\n  const changeLayoutColorScheme = (value: string) => {\n    const mode = value;\n    switch (mode) {\n      case 'dark':\n        dispatch(changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_DARK));\n        break;\n      default:\n        dispatch(changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT));\n        break;\n    }\n  };\n\n  /**\n   * Change the width mode\n   */\n  const changeWidthMode = (value: string) => {\n    const mode = value;\n\n    switch (mode) {\n      case 'boxed':\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n        break;\n      default:\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n        break;\n    }\n  };\n\n  /**\n   * Changes the theme\n   */\n  const changeLeftSidebarTheme = (value: string) => {\n    const theme = value;\n    switch (theme) {\n      case 'default':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DEFAULT));\n        break;\n      case 'light':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n        break;\n      default:\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n        break;\n    }\n  };\n\n  /**\n   * Change the leftsiderbar type\n   */\n  const changeLeftSiderbarType = (value: string) => {\n    const type = value;\n    switch (type) {\n      case 'condensed':\n        dispatch(changeSidebarType(layoutConstants.SideBarWidth.LEFT_SIDEBAR_TYPE_CONDENSED));\n        break;\n      case 'scrollable':\n        dispatch(changeSidebarType(layoutConstants.SideBarWidth.LEFT_SIDEBAR_TYPE_SCROLLABLE));\n        break;\n      default:\n        dispatch(changeSidebarType(layoutConstants.SideBarWidth.LEFT_SIDEBAR_TYPE_FIXED));\n        break;\n    }\n  };\n\n  /**\n   * Reset everything\n   */\n  const reset = () => {\n    changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_VERTICAL);\n    changeLayoutColorScheme(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT);\n    changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n    changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DEFAULT);\n    changeLeftSiderbarType(layoutConstants.SideBarWidth.LEFT_SIDEBAR_TYPE_FIXED);\n  };\n\n  return {\n    layoutColor,\n    layoutType,\n    layoutWidth,\n    leftSideBarType,\n    leftSideBarTheme,\n    disableLayoutWidth,\n    disableSidebarTheme,\n    disableSidebarType,\n    changeLayoutType,\n    changeLayoutColorScheme,\n    changeWidthMode,\n    changeLeftSidebarTheme,\n    changeLeftSiderbarType,\n    reset,\n  };\n}\n","import { useReactMediaRecorder } from 'react-media-recorder';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport {\r\n  createRecord as createRecordAPI,\r\n  uploadRecord as uploadRecordAPI,\r\n  createMeetingRecord as createMeetingRecordAPI,\r\n} from 'helpers';\r\nimport { useRedux } from 'hooks';\r\n\r\nconst useVideoRecorder = () => {\r\n  const { appSelector } = useRedux();\r\n\r\n  const { user, currentTeam } = appSelector((state) => ({\r\n    user: state.Auth.user,\r\n    currentTeam: state.Team.currentTeam,\r\n  }));\r\n  const [recordingState, setRecordingState] = useState<'idle' | 'recording' | 'recorded' | 'refused'>('idle');\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const webcamRef = useRef<Webcam>(null);\r\n\r\n  const title = user.fullname + ' ' + Date.now();\r\n  const description = 'Daily standups - ' + title;\r\n\r\n  const {\r\n    status: camStatus,\r\n    startRecording: camStartRecording,\r\n    stopRecording: camStopRecording,\r\n    mediaBlobUrl: camMediaBlobUrl,\r\n    previewStream,\r\n  } = useReactMediaRecorder({ video: true });\r\n\r\n  const {\r\n    startRecording: screenStartRecording,\r\n    stopRecording: screenStopRecording,\r\n    mediaBlobUrl: screenMediaBlobUrl,\r\n  } = useReactMediaRecorder({ video: true, screen: true });\r\n\r\n  const uploadVideo = async (url: string, type: string) => {\r\n    const camMedia = await fetch(url);\r\n    const blob = await camMedia.blob();\r\n    const body = {\r\n      title: title + ' ' + type,\r\n      description: description + ' ' + type,\r\n      scope: 'team',\r\n      teamId: currentTeam.id,\r\n    };\r\n\r\n    const createRecordAPIResponse = await createRecordAPI(body);\r\n    const presignedURL = createRecordAPIResponse.data.preSignedURL;\r\n    const fileToUpload = new File([blob], title + ' ' + type + '.mp4', { type: 'video/mp4' });\r\n    await uploadRecordAPI(presignedURL, fileToUpload);\r\n  };\r\n\r\n  const uploadMeetingVideo = async (url: string, meetingId: number) => {\r\n    if (!screenMediaBlobUrl) {\r\n      alert('Recordings are not ready');\r\n      return;\r\n    }\r\n\r\n    const camMedia = await fetch(url);\r\n    const blob = await camMedia.blob();\r\n\r\n    const createMeetingRecordAPIResponse = await createMeetingRecordAPI(meetingId);\r\n    const presignedURL = createMeetingRecordAPIResponse.data.preSignedURL;\r\n    const fileToUpload = new File([blob], meetingId.toString() + new Date() + '.mp4', { type: 'video/mp4' });\r\n    await uploadRecordAPI(presignedURL, fileToUpload);\r\n  };\r\n\r\n  const uploadVideoes = async () => {\r\n    if (!camMediaBlobUrl || !screenMediaBlobUrl) {\r\n      alert('Recordings are not ready');\r\n      return;\r\n    }\r\n\r\n    await uploadVideo(camMediaBlobUrl, 'cam');\r\n    await uploadVideo(screenMediaBlobUrl, 'screen');\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && previewStream) {\r\n      videoRef.current.srcObject = previewStream;\r\n    }\r\n  }, [previewStream]);\r\n\r\n  return {\r\n    recordingState,\r\n    webcamRef,\r\n    videoRef,\r\n    previewStream,\r\n    camMediaBlobUrl,\r\n    screenMediaBlobUrl,\r\n    setRecordingState,\r\n    camStartRecording,\r\n    camStopRecording,\r\n    screenStartRecording,\r\n    screenStopRecording,\r\n    uploadVideoes,\r\n    uploadMeetingVideo,\r\n  };\r\n};\r\n\r\nexport default useVideoRecorder;\r\n","import { useReactMediaRecorder } from 'react-media-recorder';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { createComment as createCommentAPI, uploadRecord as uploadRecordAPI } from 'helpers';\r\nimport { useRedux } from 'hooks';\r\n\r\nconst useCommentVideoRecorder = () => {\r\n  const { appSelector } = useRedux();\r\n\r\n  const { user } = appSelector((state) => ({\r\n    user: state.Auth.user,\r\n  }));\r\n  const [recordingState, setRecordingState] = useState<'idle' | 'recording' | 'recorded'>('idle');\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const webcamRef = useRef<Webcam>(null);\r\n\r\n  const title = user.fullname + ' ' + Date.now();\r\n  const description = 'Comment - ' + title;\r\n\r\n  const {\r\n    status: camStatus,\r\n    startRecording: camStartRecording,\r\n    stopRecording: camStopRecording,\r\n    mediaBlobUrl: camMediaBlobUrl,\r\n    previewStream,\r\n  } = useReactMediaRecorder({ video: true });\r\n\r\n  const uploadVideo = async (url: string) => {\r\n    const camMedia = await fetch(url);\r\n    const blob = await camMedia.blob();\r\n    const currentBookmarkId = sessionStorage.getItem('currentBookmarkId');\r\n\r\n    const body = {\r\n      bookmarkId: currentBookmarkId!,\r\n      author: user.fullname,\r\n      description: description,\r\n    };\r\n\r\n    const createRecordAPIResponse = await createCommentAPI(body);\r\n    const presignedURL = createRecordAPIResponse.data.preSignedURL;\r\n    const fileToUpload = new File([blob], title + ' ' + '.mp4', { type: 'video/mp4' });\r\n    await uploadRecordAPI(presignedURL, fileToUpload);\r\n  };\r\n\r\n  const uploadVideoes = async () => {\r\n    if (!camMediaBlobUrl) {\r\n      alert('Recordings are not ready');\r\n      return;\r\n    }\r\n\r\n    await uploadVideo(camMediaBlobUrl);\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && previewStream) {\r\n      videoRef.current.srcObject = previewStream;\r\n    }\r\n  }, [previewStream]);\r\n\r\n  return {\r\n    recordingState,\r\n    webcamRef,\r\n    videoRef,\r\n    previewStream,\r\n    camMediaBlobUrl,\r\n    setRecordingState,\r\n    camStartRecording,\r\n    camStopRecording,\r\n    uploadVideoes,\r\n  };\r\n};\r\n\r\nexport default useCommentVideoRecorder;\r\n","import React from 'react';\nimport { useForm, Resolver, SubmitHandler, DefaultValues } from 'react-hook-form';\n\ntype VerticalFromProps<TFormValues> = {\n  defaultValues?: DefaultValues<TFormValues>;\n  resolver?: Resolver<any>;\n  children?: React.ReactNode;\n  onSubmit: SubmitHandler<any>;\n  formClass?: string;\n};\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import { InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { FieldErrors, Control } from 'react-hook-form';\nimport { useToggle } from 'hooks';\n\ntype PasswordInputProps = {\n  name: string;\n  placeholder?: string;\n  refCallback?: any;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n  className?: string;\n};\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }: PasswordInputProps) => {\n  const [showPassword, togglePassword] = useToggle();\n\n  return (\n    <InputGroup className=\"mb-0\">\n      <Form.Control\n        type={showPassword ? 'text' : 'password'}\n        placeholder={placeholder}\n        name={name}\n        id={name}\n        as=\"input\"\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        autoComplete={name}\n      />\n      <div\n        className={classNames('input-group-text', 'input-group-password', {\n          'show-password': showPassword,\n        })}\n        data-password={showPassword ? 'true' : 'false'}\n      >\n        <span className=\"password-eye\" onClick={togglePassword}></span>\n      </div>\n    </InputGroup>\n  );\n};\n\ntype FormInputProps = InputHTMLAttributes<HTMLInputElement> & {\n  label?: string;\n  type?: string;\n  name: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  refCallback?: any;\n  children?: React.ReactNode;\n  rows?: string;\n};\n\nconst FormInput = ({\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  refCallback,\n  children,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n  return (\n    <>\n      {type === 'hidden' ? (\n        <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n      ) : (\n        <>\n          {type === 'password' ? (\n            <>\n              <Form.Group className={containerClass}>\n                {label ? (\n                  <>\n                    {' '}\n                    <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                  </>\n                ) : null}\n                <PasswordInput\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors!}\n                  register={register}\n                  className={className}\n                />\n\n                {errors && errors[name] ? (\n                  <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                  </Form.Control.Feedback>\n                ) : null}\n              </Form.Group>\n            </>\n          ) : (\n            <>\n              {type === 'select' ? (\n                <Form.Group className={containerClass}>\n                  {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                  <Form.Select\n                    type={type}\n                    label={label}\n                    name={name}\n                    id={name}\n                    ref={(r: HTMLInputElement) => {\n                      if (refCallback) refCallback(r);\n                    }}\n                    comp={comp}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    {...otherProps}\n                  >\n                    {children}\n                  </Form.Select>\n\n                  {errors && errors[name] ? (\n                    <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n                  ) : null}\n                </Form.Group>\n              ) : (\n                <>\n                  {type === 'checkbox' || type === 'radio' ? (\n                    <Form.Group className={containerClass}>\n                      <Form.Check\n                        type={type}\n                        label={label}\n                        name={name}\n                        id={name}\n                        ref={(r: HTMLInputElement) => {\n                          if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        {...otherProps}\n                      />\n\n                      {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n                      ) : null}\n                    </Form.Group>\n                  ) : (\n                    <Form.Group className={containerClass}>\n                      {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                      <Form.Control\n                        type={type}\n                        placeholder={placeholder}\n                        name={name}\n                        id={name}\n                        as={comp}\n                        ref={(r: HTMLInputElement) => {\n                          if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        {...otherProps}\n                        autoComplete={name}\n                      >\n                        {children ? children : null}\n                      </Form.Control>\n\n                      {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n                      ) : null}\n                    </Form.Group>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import { Form } from 'react-bootstrap';\nimport * as layoutConstants from 'appConstants';\n\ntype LayoutTypesProps = {\n  changeLayoutType: (value: string) => void;\n  layoutType: string;\n  layoutConstants: typeof layoutConstants.LayoutTypes;\n};\n\nconst LayoutTypes = ({ changeLayoutType, layoutType, layoutConstants }: LayoutTypesProps) => {\n  return (\n    <>\n      <h5 className=\"mt-3\">Layout</h5>\n\n      <hr className=\"mt-1\" />\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_VERTICAL}\n          id=\"vertical-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n        />\n        <Form.Check.Label htmlFor=\"vertical-layout\">Vertical Layout</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_HORIZONTAL}\n          id=\"horizontal-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n        />\n        <Form.Check.Label htmlFor=\"horizontal-layout\">Horizontal Layout</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_DETACHED}\n          id=\"detached-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n        />\n        <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_FULL}\n          id=\"full-mode-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_FULL}\n        />\n        <Form.Check.Label htmlFor=\"full-mode-layout\">Full Layout</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutTypes;\n","import { Form } from 'react-bootstrap';\nimport * as layoutConstants from 'appConstants';\n\ntype LayoutColorProps = {\n  changeLayoutColorScheme: (value: string) => void;\n  layoutColor: string;\n  layoutConstants: typeof layoutConstants.LayoutColor;\n};\n\nconst LayoutColor = ({ changeLayoutColorScheme, layoutColor, layoutConstants }: LayoutColorProps) => {\n  return (\n    <>\n      <h5 className=\"mt-4\">Color Scheme</h5>\n\n      <hr className=\"mt-1\" />\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          name=\"layout-color\"\n          value={layoutConstants.LAYOUT_COLOR_LIGHT}\n          id=\"light-mode\"\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"vertical-layout\">Light Mode</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          name=\"layout-color\"\n          value={layoutConstants.LAYOUT_COLOR_DARK}\n          id=\"dark-mode\"\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n        />\n        <Form.Check.Label htmlFor=\"horizontal-layout\">Dark Mode</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutColor;\n","import { Form } from 'react-bootstrap';\nimport * as layoutConstants from 'appConstants';\n\ntype LayoutWidthProps = {\n  changeWidthMode: (value: string) => void;\n  layoutWidth: string;\n  layoutConstants: typeof layoutConstants.LayoutWidth;\n};\n\nconst LayoutWidth = ({ changeWidthMode, layoutWidth, layoutConstants }: LayoutWidthProps) => {\n  return (\n    <>\n      <h5 className=\"mt-4\">Width</h5>\n\n      <hr className=\"mt-1\" />\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"fluid-check\"\n          value={layoutConstants.LAYOUT_WIDTH_FLUID}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n        />\n        <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"boxed-check\"\n          value={layoutConstants.LAYOUT_WIDTH_BOXED}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n        />\n        <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutWidth;\n","import { Form } from 'react-bootstrap';\nimport * as layoutConstants from 'appConstants';\n\ntype LeftSideBarThemeProps = {\n  changeLeftSidebarTheme: (value: string) => void;\n  leftSideBarTheme: string;\n  layoutConstants: typeof layoutConstants.SideBarTheme;\n};\n\nconst LeftSideBarTheme = ({ changeLeftSidebarTheme, leftSideBarTheme, layoutConstants }: LeftSideBarThemeProps) => {\n  return (\n    <>\n      <h5 className=\"mt-4\">Left Sidebar Color</h5>\n      <hr className=\"mt-1\" />\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"brand-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n        />\n        <Form.Check.Label htmlFor=\"brand-check\">Default</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"light-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"dark-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n        />\n        <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarTheme;\n","import { Form } from 'react-bootstrap';\nimport * as layoutConstants from 'appConstants';\n\ntype LeftSideBarTypeProps = {\n  changeLeftSiderbarType: (value: string) => void;\n  leftSideBarType: string;\n  layoutConstants: typeof layoutConstants.SideBarWidth;\n};\n\nconst LeftSideBarType = ({ changeLeftSiderbarType, leftSideBarType, layoutConstants }: LeftSideBarTypeProps) => {\n  return (\n    <>\n      <Form.Check className=\"form-check form-switch mb-1 mt-3\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"default-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n        />\n        <Form.Check.Label htmlFor=\"default-check\">Fixed</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"condensed-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n        />\n        <Form.Check.Label htmlFor=\"condensed-check\">Condensed</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"compact-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n        />\n        <Form.Check.Label htmlFor=\"compact-check\">Scrollable</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarType;\n","import * as layoutConstants from 'appConstants';\nimport LayoutTypes from './LayoutTypes';\nimport LayoutColor from './LayoutColor';\nimport LayoutWidth from './LayoutWidth';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport useThemeCustomizer from './useThemeCustomizer';\n\nconst ThemeCustomizer = () => {\n  const {\n    layoutColor,\n    layoutType,\n    layoutWidth,\n    leftSideBarType,\n    leftSideBarTheme,\n    disableLayoutWidth,\n    disableSidebarTheme,\n    disableSidebarType,\n    changeLayoutType,\n    changeLayoutColorScheme,\n    changeWidthMode,\n    changeLeftSidebarTheme,\n    changeLeftSiderbarType,\n    reset,\n  } = useThemeCustomizer();\n\n  return (\n    <div className=\"p-3\">\n      <div className=\"alert alert-warning\" role=\"alert\">\n        <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n      </div>\n\n      {/* Layouts */}\n      <LayoutTypes\n        changeLayoutType={changeLayoutType}\n        layoutType={layoutType}\n        layoutConstants={layoutConstants.LayoutTypes}\n      />\n\n      {/* color scheme */}\n      <LayoutColor\n        changeLayoutColorScheme={changeLayoutColorScheme}\n        layoutColor={layoutColor}\n        layoutConstants={layoutConstants.LayoutColor}\n      />\n\n      {/* Width */}\n      {disableLayoutWidth && (\n        <LayoutWidth\n          changeWidthMode={changeWidthMode}\n          layoutWidth={layoutWidth}\n          layoutConstants={layoutConstants.LayoutWidth}\n        />\n      )}\n\n      {/* Left Sidebar */}\n      {disableSidebarTheme && (\n        <LeftSideBarTheme\n          changeLeftSidebarTheme={changeLeftSidebarTheme}\n          leftSideBarTheme={leftSideBarTheme}\n          layoutConstants={layoutConstants.SideBarTheme}\n        />\n      )}\n\n      {/* Left Sidebar Size */}\n      {disableSidebarType && (\n        <LeftSideBarType\n          changeLeftSiderbarType={changeLeftSiderbarType}\n          leftSideBarType={leftSideBarType}\n          layoutConstants={layoutConstants.SideBarWidth}\n        />\n      )}\n\n      <div className=\"d-grid mt-4\">\n        <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n          Reset to Default\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeCustomizer;\n","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nexport type PricingPlan = {\n  id: number;\n  name: string;\n  icon: string;\n  price: string;\n  duration: string;\n  features: Array<string>;\n  isRecommended: boolean;\n};\n\ntype PricingCardProps = {\n  plans: Array<PricingPlan>;\n  containerClass?: string;\n};\n\nconst PricingCard = ({ plans, containerClass }: PricingCardProps) => {\n  return (\n    <Row className={containerClass}>\n      {plans.map((plan, index) => {\n        return (\n          <Col md={4} key={index.toString()}>\n            <Card\n              className={classNames('card-pricing', {\n                'card-pricing-recommended': plan.isRecommended,\n              })}\n            >\n              <Card.Body className=\"text-center\">\n                {plan.isRecommended && <div className=\"card-pricing-plan-tag\">Recommended</div>}\n                <p className=\"card-pricing-plan-name fw-bold text-uppercase\">{plan.name}</p>\n                <i className={classNames('card-pricing-icon', plan.icon, 'text-primary')}></i>\n                <h2 className=\"card-pricing-price\">\n                  {plan.price} <span>/ {plan.duration}</span>\n                </h2>\n                <ul className=\"card-pricing-features\">\n                  {plan.features.map((feature, index1) => {\n                    return <li key={index1.toString()}>{feature}</li>;\n                  })}\n                </ul>\n                <button className=\"btn btn-primary mt-4 mb-2 btn-rounded\">Choose Plan</button>\n              </Card.Body>\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport { PricingCard };\n","import { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n  label: string;\n  path: string;\n  active?: boolean;\n};\n\ntype PageTitleProps = {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n};\n\nconst PageTitle = ({ breadCrumbItems, title }: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: 'm-0' }}>\n              <Breadcrumb.Item href=\"/\">Asyncrum</Breadcrumb.Item>\n\n              {breadCrumbItems.map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index.toString()}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index.toString()} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{title}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\ntype MenuItem = {\r\n  label: string;\r\n  icon?: string;\r\n  variant?: string;\r\n  hasDivider?: boolean;\r\n};\r\n\r\ntype CardTitleProps = {\r\n  menuItems: Array<MenuItem>;\r\n  title: string | React.ReactNode;\r\n  containerClass: string;\r\n  icon?: string;\r\n};\r\n\r\nconst CardTitle = ({ title, containerClass, icon, menuItems }: CardTitleProps) => {\r\n  return (\r\n    <div className={classNames(containerClass)}>\r\n      {typeof title === 'string' ? <h4 className=\"header-title mb-0\">{title}</h4> : title}\r\n      {menuItems && (\r\n        <Dropdown>\r\n          <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\r\n            <i className={classNames(icon ? icon : 'mdi mdi-dots-vertical')} />\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu align=\"end\">\r\n            {(menuItems || []).map((item, index) => {\r\n              return (\r\n                <React.Fragment key={index.toString()}>\r\n                  {item.hasDivider && <Dropdown.Divider as=\"div\" />}\r\n                  <Dropdown.Item className={classNames(item.variant ? item.variant : '')}>\r\n                    {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\r\n                    {item.label}\r\n                  </Dropdown.Item>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTitle;\r\n","import Webcam from 'react-webcam';\r\nimport { useVideoRecorder } from './hooks';\r\n\r\nconst VideoRecorder: React.FC = () => {\r\n  const videoConstraints = { facingMode: 'user' };\r\n  const cam_w = 320,\r\n    cam_h = 240,\r\n    screen_w = 960,\r\n    screen_h = 540;\r\n  const {\r\n    recordingState,\r\n    webcamRef,\r\n    videoRef,\r\n    previewStream,\r\n    camMediaBlobUrl,\r\n    screenMediaBlobUrl,\r\n    setRecordingState,\r\n    camStartRecording,\r\n    camStopRecording,\r\n    screenStartRecording,\r\n    screenStopRecording,\r\n    uploadVideoes,\r\n  } = useVideoRecorder();\r\n\r\n  return (\r\n    <div className=\"video-recorder\">\r\n      <div>\r\n        {recordingState === 'idle' && (\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            videoConstraints={videoConstraints}\r\n            width={cam_w}\r\n            height={cam_h}\r\n            style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n          />\r\n        )}\r\n        {recordingState === 'recording' && previewStream && (\r\n          <div>\r\n            <video\r\n              ref={videoRef}\r\n              width={cam_w}\r\n              height={cam_h}\r\n              controls\r\n              playsInline\r\n              autoPlay\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState === 'recorded' && (\r\n          <div>\r\n            <video\r\n              src={camMediaBlobUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={cam_w}\r\n              height={cam_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n            <video\r\n              src={screenMediaBlobUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={screen_w}\r\n              height={screen_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState !== 'recording' ? (\r\n          recordingState === 'idle' ? (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  screenStartRecording();\r\n                  camStartRecording();\r\n                  setRecordingState('recording');\r\n                }}>\r\n                Start Recording\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              <button\r\n                className=\"btn btn-primary me-3\"\r\n                onClick={() => {\r\n                  setRecordingState('idle');\r\n                }}>\r\n                Reshoot\r\n              </button>\r\n              <button className=\"btn btn-primary\" onClick={uploadVideoes}>\r\n                Save Recording\r\n              </button>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"mt-4 mb-3 text-center\">\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                camStopRecording();\r\n                screenStopRecording();\r\n                setRecordingState('recorded');\r\n              }}>\r\n              Stop Recording\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoRecorder;\r\n","import Webcam from 'react-webcam';\r\nimport { useCommentVideoRecorder } from './hooks';\r\n\r\nconst CommentVideoRecorder: React.FC = () => {\r\n  const videoConstraints = { facingMode: 'user' };\r\n  const cam_w = 320,\r\n    cam_h = 240;\r\n  const {\r\n    recordingState,\r\n    webcamRef,\r\n    videoRef,\r\n    previewStream,\r\n    camMediaBlobUrl,\r\n    setRecordingState,\r\n    camStartRecording,\r\n    camStopRecording,\r\n    uploadVideoes,\r\n  } = useCommentVideoRecorder();\r\n\r\n  return (\r\n    <div className=\"video-recorder\">\r\n      <div>\r\n        {recordingState === 'idle' && (\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            videoConstraints={videoConstraints}\r\n            width={cam_w}\r\n            height={cam_h}\r\n            style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n          />\r\n        )}\r\n        {recordingState === 'recording' && previewStream && (\r\n          <div>\r\n            <video\r\n              ref={videoRef}\r\n              width={cam_w}\r\n              height={cam_h}\r\n              controls\r\n              playsInline\r\n              autoPlay\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState === 'recorded' && (\r\n          <div>\r\n            <video\r\n              src={camMediaBlobUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={cam_w}\r\n              height={cam_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState !== 'recording' ? (\r\n          recordingState === 'idle' ? (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  camStartRecording();\r\n                  setRecordingState('recording');\r\n                }}\r\n              >\r\n                Start Recording\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              <button\r\n                className=\"btn btn-primary me-3\"\r\n                onClick={() => {\r\n                  setRecordingState('idle');\r\n                }}\r\n              >\r\n                Reshoot\r\n              </button>\r\n              <button className=\"btn btn-primary\" onClick={uploadVideoes}>\r\n                Save Recording\r\n              </button>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"mt-4 mb-3 text-center\">\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                camStopRecording();\r\n                setRecordingState('recorded');\r\n              }}\r\n            >\r\n              Stop Recording\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentVideoRecorder;\r\n","import { Button, Modal } from 'react-bootstrap';\r\nimport { useModal } from '../pages/docs/hooks';\r\nimport { CommentVideoRecorder } from './';\r\n\r\nconst CreateCommentRecordButton = () => {\r\n  const { isOpen: isRecordOpen, size, className, scroll, toggleModal: toggleRecord, openModalWithSize } = useModal();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          openModalWithSize('lg');\r\n        }}\r\n      >\r\n        <i className=\"mdi mdi-plus\"></i> Record\r\n      </Button>\r\n      <Modal show={isRecordOpen} onHide={toggleRecord} dialogClassName={className} size={size} scrollable={scroll}>\r\n        <Modal.Body>\r\n          <Modal.Header onHide={toggleRecord} closeButton>\r\n            <h4 className=\"modal-title\">Record</h4>\r\n          </Modal.Header>\r\n          <CommentVideoRecorder />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCommentRecordButton;\r\n","import Carousel from 'react-multi-carousel';\r\nimport { readAllDailyStandups as readAllDailyStandupsAPI, viewDailyStandup as viewDailyStandupAPI } from 'helpers';\r\nimport { DailyStandup } from '../types';\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useRedux } from 'hooks';\r\nimport { useMoment } from './';\r\n\r\nconst useDailyStandup = () => {\r\n  const [dailyStandups, setDailyStandups] = useState<DailyStandup[]>([]);\r\n  const [dailyStandupLoading, setDailyStandupLoading] = useState<boolean>(true);\r\n  const { appSelector } = useRedux();\r\n\r\n  const carouselRef = useRef<Carousel>(null);\r\n\r\n  const { getTimeDifference } = useMoment();\r\n\r\n  const { loading, user, currentTeam } = appSelector((state) => ({\r\n    loading: state.Auth.loading,\r\n    user: state.Auth.user,\r\n    currentTeam: state.Team.currentTeam,\r\n  }));\r\n\r\n  const scope = 'team';\r\n  const pageIndex = 0;\r\n\r\n  const readAllDailyStandups = useCallback(async () => {\r\n    if (!currentTeam) {\r\n      return;\r\n    }\r\n    const readAllDailyStandupsAPIResponse = await readAllDailyStandupsAPI({ teamId: currentTeam.id, scope, pageIndex });\r\n    for (const record of readAllDailyStandupsAPIResponse.data.records) {\r\n      if (getTimeDifference(record.createdDate) > 24 && record.seenMember?.indexOf(user.id) > -1) {\r\n        continue;\r\n      }\r\n      if (\r\n        dailyStandups.at(-1) &&\r\n        dailyStandups.at(-1)?.author === record.member.fullname &&\r\n        dailyStandups.at(-1)?.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(' ')) ===\r\n          record.title.slice(0, dailyStandups.at(-1)?.title.lastIndexOf(' '))\r\n      ) {\r\n        dailyStandups.at(-1)?.id.push(record.id);\r\n        if (record.title.slice(-6) === 'screen') {\r\n          (dailyStandups.at(-1) as DailyStandup).screenRecordId = record.id;\r\n          (dailyStandups.at(-1) as DailyStandup).screenRecordFileUrl = record.recordUrl;\r\n        } else {\r\n          (dailyStandups.at(-1) as DailyStandup).camRecordFileUrl = record.recordUrl;\r\n        }\r\n      } else {\r\n        let dailyStandup = {\r\n          id: [record.id],\r\n          author: record.member.fullname,\r\n          title: record.title,\r\n          profileImageUrl: record.member.profileImageUrl,\r\n          createdDate: record.createdDate,\r\n          camRecordFileUrl: '',\r\n          screenRecordFileUrl: '',\r\n          screenRecordId: -1,\r\n          seen: record.seenMember?.indexOf(user.id) > -1 ? true : false,\r\n        };\r\n        if (record.title.slice(-6) === 'screen') {\r\n          dailyStandup = {\r\n            ...dailyStandup,\r\n            screenRecordFileUrl: record.recordUrl,\r\n            screenRecordId: record.id,\r\n          };\r\n        } else {\r\n          dailyStandup = {\r\n            ...dailyStandup,\r\n            camRecordFileUrl: record.recordUrl,\r\n          };\r\n        }\r\n        dailyStandups.push(dailyStandup);\r\n      }\r\n    }\r\n    setDailyStandups(dailyStandups.reverse());\r\n    setDailyStandupLoading(false);\r\n    let slide = dailyStandups.findIndex((dailyStandup) => !dailyStandup.seen);\r\n    slide = slide >= 0 ? slide : 0;\r\n    if (carouselRef && carouselRef.current) {\r\n      carouselRef.current.goToSlide(slide);\r\n    }\r\n  }, [dailyStandups, getTimeDifference, user.id, currentTeam.id]);\r\n\r\n  const onViewDailyStandups = async (dailyStandup: DailyStandup) => {\r\n    await viewDailyStandupAPI(dailyStandup.id[0]);\r\n    await viewDailyStandupAPI(dailyStandup.id[1]);\r\n    dailyStandup.seen = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    readAllDailyStandups();\r\n  }, [loading, readAllDailyStandups]);\r\n\r\n  return {\r\n    carouselRef,\r\n    dailyStandups,\r\n    dailyStandupLoading,\r\n    setDailyStandups,\r\n    setDailyStandupLoading,\r\n    onViewDailyStandups,\r\n  };\r\n};\r\n\r\nexport default useDailyStandup;\r\n","import { useToggle } from 'hooks';\nimport { useState } from 'react';\n\nexport default function useModal() {\n  const [isOpen, toggleModal] = useToggle();\n\n  const [size, setSize] = useState<'sm' | 'lg' | 'xl'>();\n  const [className, setClassName] = useState<string>('');\n  const [scroll, setScroll] = useState<boolean>(false);\n\n  // Opens large modal\n  const openModalWithSize = (size: 'sm' | 'lg' | 'xl') => {\n    setSize(size);\n    setClassName('');\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens modal with custom class\n  const openModalWithClass = (className: string) => {\n    setClassName(className);\n    setScroll(false);\n    toggleModal();\n  };\n\n  // Opens large modal\n  const openModalWithScroll = () => {\n    setScroll(true);\n    setSize('sm');\n    setClassName('');\n    toggleModal();\n  };\n\n  return {\n    isOpen,\n    size,\n    className,\n    scroll,\n    toggleModal,\n    openModalWithSize,\n    openModalWithClass,\n    openModalWithScroll,\n  };\n}\n","import { useCallback } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst useMoment = () => {\r\n  const convertDateTime = (datetime: string) => {\r\n    const convertedDatetime = new Date(datetime);\r\n    convertedDatetime.setTime(convertedDatetime.getTime() - convertedDatetime.getTimezoneOffset() * 60 * 1000);\r\n    return convertedDatetime;\r\n  };\r\n\r\n  const getTimeFromNow = (datetime: string) => {\r\n    return moment(convertDateTime(datetime)).fromNow();\r\n  };\r\n\r\n  const getTimeDifference = useCallback((datetime: string) => {\r\n    return moment().diff(moment(convertDateTime(datetime)), 'hours');\r\n  }, []);\r\n\r\n  return { convertDateTime, getTimeFromNow, getTimeDifference };\r\n};\r\n\r\nexport default useMoment;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { TDDocument, TDFile, TldrawApp } from '@krapi0314/tldraw';\r\nimport { useToggle, useRedux } from 'hooks';\r\nimport {\r\n  createWhiteboard as createWhiteboardAPI,\r\n  readWhiteboard as readWhiteboardAPI,\r\n  readAllWhiteboard as readAllWhiteboardAPI,\r\n  uploadWhiteboard as uploadWhiteboardAPI,\r\n  deleteWhiteboard as deleteWhiteboardAPI,\r\n  updateWhiteboard as updateWhiteboardAPI,\r\n} from 'helpers';\r\nimport { Whiteboard } from '../types';\r\n\r\nconst useWhiteboard = () => {\r\n  const [whiteboards, setWhiteboards] = useState<Whiteboard[]>([]);\r\n  const [whiteboardLoading, setWhiteboardLoading] = useState<boolean>(true);\r\n  const [whiteboardPageNumber, setWhiteboardPageNumber] = useState<number>(1);\r\n  const [numberOfWhiteboards, setNumberOfWhiteboards] = useState<number>(0);\r\n  const [isCreateWhiteboardOpen, toggleCreateWhiteboard] = useToggle();\r\n  const { appSelector } = useRedux();\r\n\r\n  const { currentTeam } = appSelector((state) => ({\r\n    currentTeam: state.Team.currentTeam,\r\n  }));\r\n\r\n  const scope = 'team';\r\n  const teamId = currentTeam?.id;\r\n  const whiteboardPageURL = '/whiteboard?url=';\r\n\r\n  const readAllWhiteboard = useCallback(\r\n    async (pageIndex: number) => {\r\n      const readAllWhiteboardAPIResponse = await readAllWhiteboardAPI({ teamId, scope, pageIndex });\r\n\r\n      const whiteboards = readAllWhiteboardAPIResponse.data.whiteboards.map((whiteboard): Whiteboard => {\r\n        return {\r\n          id: whiteboard.id,\r\n          title: whiteboard.title,\r\n          description: whiteboard.description,\r\n          createdDate: whiteboard.createdDate,\r\n          lastModifiedDate: whiteboard.lastModifiedDate,\r\n          scope: whiteboard.scope,\r\n          author: whiteboard.member.fullname,\r\n          authorProfileImageUrl: whiteboard.member.profileImageUrl,\r\n          whiteboardFileUrl: whiteboard.whiteboardUrl,\r\n        };\r\n      });\r\n\r\n      setWhiteboards(whiteboards);\r\n      setNumberOfWhiteboards(readAllWhiteboardAPIResponse.data.size_ALL_PAGE);\r\n      setWhiteboardLoading(false);\r\n    },\r\n    [teamId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const pageIndex = whiteboardPageNumber - 1;\r\n    readAllWhiteboard(pageIndex);\r\n  }, [whiteboardPageNumber, readAllWhiteboard]);\r\n\r\n  const onCreateWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\r\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\r\n\r\n    const createWhiteboardAPIResponse = await createWhiteboardAPI({ title, description, scope, teamId });\r\n    const { id, preSignedURL } = createWhiteboardAPIResponse.data;\r\n    const formData = createWhiteboardFormData(id, title);\r\n    await uploadWhiteboardAPI(preSignedURL, formData);\r\n    const readWhiteboardAPIResponse = await readWhiteboardAPI(id);\r\n    window.location.href = whiteboardPageURL + readWhiteboardAPIResponse.data.whiteboardUrl + '&id=' + id;\r\n  };\r\n\r\n  const createWhiteboardFormData = (whiteboardID: string, title: string) => {\r\n    const document: TDDocument = {\r\n      id: whiteboardID,\r\n      name: title,\r\n      version: TldrawApp.version,\r\n      pages: {\r\n        page: {\r\n          id: 'page',\r\n          name: 'Page 1',\r\n          childIndex: 1,\r\n          shapes: {},\r\n          bindings: {},\r\n        },\r\n      },\r\n      pageStates: {\r\n        page: {\r\n          id: 'page',\r\n          selectedIds: [],\r\n          camera: {\r\n            point: [0, 0],\r\n            zoom: 1,\r\n          },\r\n        },\r\n      },\r\n      assets: {},\r\n    };\r\n\r\n    const file: TDFile = {\r\n      name: document.name || 'New Document',\r\n      fileHandle: null,\r\n      document,\r\n      assets: {},\r\n    };\r\n\r\n    const json = JSON.stringify(file, null, 2);\r\n\r\n    const blob = new Blob([json], {\r\n      type: 'application/vnd.Tldraw+json',\r\n    });\r\n\r\n    const fileToUpload = new File([blob], title);\r\n\r\n    const formData = new FormData();\r\n    formData.append('data', fileToUpload);\r\n\r\n    return formData;\r\n  };\r\n\r\n  const onEditWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\r\n    const title = ((event.target as HTMLFormElement).elements.namedItem('title') as HTMLInputElement).value;\r\n    const description = ((event.target as HTMLFormElement).elements.namedItem('description') as HTMLInputElement).value;\r\n\r\n    await updateWhiteboardAPI(id, { title, description, scope });\r\n    const pageIndex = whiteboardPageNumber - 1;\r\n    readAllWhiteboard(pageIndex);\r\n  };\r\n\r\n  const onDeleteWhiteboard = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const id = ((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value;\r\n    await deleteWhiteboardAPI(id);\r\n    const pageIndex = whiteboardPageNumber - 1;\r\n    readAllWhiteboard(pageIndex);\r\n  };\r\n\r\n  const onPageNumberClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    setWhiteboardPageNumber(parseInt((e.target as HTMLLIElement).innerText));\r\n  };\r\n\r\n  return {\r\n    isCreateWhiteboardOpen,\r\n    whiteboards,\r\n    whiteboardLoading,\r\n    whiteboardPageNumber,\r\n    numberOfWhiteboards,\r\n    setWhiteboards,\r\n    setWhiteboardPageNumber,\r\n    readAllWhiteboard,\r\n    onCreateWhiteboard,\r\n    onEditWhiteboard,\r\n    onDeleteWhiteboard,\r\n    onPageNumberClick,\r\n    toggleCreateWhiteboard,\r\n  };\r\n};\r\n\r\nexport default useWhiteboard;\r\n","import React, { useState } from 'react';\r\nimport { useToggle } from 'hooks';\r\n\r\nconst useWhiteboardCard = () => {\r\n  const [isEditOpen, toggleEdit] = useToggle();\r\n  const [isDeleteOpen, toggleDelete] = useToggle();\r\n  const [isReadMore, setIsReadMore] = useState(true);\r\n  const toggleReadMore = () => {\r\n    setIsReadMore(!isReadMore);\r\n  };\r\n\r\n  const closeModalAfterFunction = (\r\n    f: (e: React.FormEvent<HTMLFormElement>) => Promise<void>,\r\n    event: React.FormEvent<HTMLFormElement>,\r\n    toggle: () => void\r\n  ) => {\r\n    f(event);\r\n    toggle();\r\n  };\r\n\r\n  return { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction };\r\n};\r\n\r\nexport default useWhiteboardCard;\r\n","import { useToggle, useRedux } from 'hooks';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  createMeeting as createMeetingAPI,\r\n  readAllMeeting as readAllMeetingAPI,\r\n  deleteMeeting as deleteMeetingAPI,\r\n  updateMeeting as updateMeetingAPI,\r\n  addMeetingMember as addMeetingMemberAPI,\r\n} from 'helpers';\r\nimport { Meeting } from '../types';\r\n\r\nconst useMeeting = () => {\r\n  const { appSelector } = useRedux();\r\n  const { loading, user, currentTeam } = appSelector((state) => ({\r\n    loading: state.Auth.loading,\r\n    user: state.Auth.user,\r\n    currentTeam: state.Team.currentTeam,\r\n  }));\r\n\r\n  const [isCreateMeetingOpen, toggleCreateMeeting] = useToggle();\r\n  const [isRecordOpen, toggleRecord] = useToggle();\r\n\r\n  const [meetings, setMeetings] = useState<Meeting[]>([]);\r\n  const [meetingLoading, setMeetingLoading] = useState<boolean>(true);\r\n  const [currentMeetingName, setCurrentMeetingName] = useState<string>('');\r\n  const [currentMeetingId, setCurrentMeetingId] = useState<number>();\r\n\r\n  const teamId = currentTeam?.id;\r\n\r\n  const readAllMeeting = useCallback(async () => {\r\n    const readAllMeetingAPIResponse = await readAllMeetingAPI(teamId);\r\n    let meetingsData = readAllMeetingAPIResponse.data.meetings;\r\n    meetingsData = meetingsData.map((meeting: Meeting) => {\r\n      return {\r\n        ...meeting,\r\n        participants: meeting.participants.map((participant: string) => {\r\n          const participantArray = participant.split(',');\r\n          return [participantArray[0].substring(1), participantArray[1].trim()];\r\n        }),\r\n      };\r\n    });\r\n    setMeetings(meetingsData);\r\n    setMeetingLoading(false);\r\n  }, [currentTeam.id]);\r\n\r\n  const onCreateMeeting = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const meetingName = ((event.target as HTMLFormElement).elements.namedItem('meetingName') as HTMLInputElement).value;\r\n    const createMeetingAPIResponse = await createMeetingAPI({ teamId, meetingName });\r\n    setCurrentMeetingName(meetingName);\r\n    setCurrentMeetingId(createMeetingAPIResponse.data.id);\r\n    toggleCreateMeeting();\r\n    toggleRecord();\r\n    readAllMeeting();\r\n  };\r\n\r\n  const onDeleteMeeting = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const meetingId = parseInt(((event.target as HTMLFormElement).elements.namedItem('id') as HTMLInputElement).value);\r\n    await deleteMeetingAPI(meetingId);\r\n    readAllMeeting();\r\n  };\r\n\r\n  const onEndMeeting = async (meetingId: number) => {\r\n    await updateMeetingAPI(meetingId, { status: false });\r\n    readAllMeeting();\r\n  };\r\n\r\n  const onEnterMeeting = (meetingId: number, meetingName: string) => {\r\n    addMeetingMemberAPI(meetingId, { memberId: user.id });\r\n    window.open(`https://${process.env.REACT_APP_JITSI_URL}/${meetingName}`, '_blank');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    readAllMeeting();\r\n  }, [loading, readAllMeeting]);\r\n\r\n  return {\r\n    meetings,\r\n    meetingLoading,\r\n\r\n    isCreateMeetingOpen,\r\n    toggleCreateMeeting,\r\n    isRecordOpen,\r\n    toggleRecord,\r\n    currentMeetingId,\r\n    currentMeetingName,\r\n    onCreateMeeting,\r\n    onDeleteMeeting,\r\n    onEndMeeting,\r\n    onEnterMeeting,\r\n  };\r\n};\r\n\r\nexport default useMeeting;\r\n","import React from 'react';\r\nimport { useToggle } from 'hooks';\r\n\r\nconst useMeetingCard = () => {\r\n  const [isDeleteOpen, toggleDelete] = useToggle();\r\n  const [isViewOpen, toggleView] = useToggle();\r\n\r\n  const closeModalAfterFunction = (\r\n    f: (e: React.FormEvent<HTMLFormElement>) => Promise<void>,\r\n    event: React.FormEvent<HTMLFormElement>,\r\n    toggle: () => void\r\n  ) => {\r\n    f(event);\r\n    toggle();\r\n  };\r\n\r\n  return { isDeleteOpen, toggleDelete, isViewOpen, toggleView, closeModalAfterFunction };\r\n};\r\n\r\nexport default useMeetingCard;\r\n"],"names":["useThemeCustomizer","useRedux","dispatch","appSelector","state","layoutColor","Layout","layoutType","layoutWidth","leftSideBarTheme","leftSideBarType","useState","disableLayoutWidth","setDisableLayoutWidth","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","_loadStateFromProps","useCallback","layoutConstants","useEffect","changeLayoutType","value","changeLayout","changeLayoutColorScheme","changeLayoutColor","changeWidthMode","changeLayoutWidth","changeLeftSidebarTheme","changeSidebarTheme","changeLeftSiderbarType","changeSidebarType","reset","user","Auth","currentTeam","Team","recordingState","setRecordingState","videoRef","useRef","webcamRef","title","fullname","Date","now","description","useReactMediaRecorder","video","camStartRecording","status","startRecording","camStopRecording","stopRecording","camMediaBlobUrl","mediaBlobUrl","previewStream","screen","screenStartRecording","screenStopRecording","screenMediaBlobUrl","uploadVideo","url","type","fetch","camMedia","blob","body","scope","teamId","id","createRecordAPI","createRecordAPIResponse","presignedURL","data","preSignedURL","fileToUpload","File","uploadRecordAPI","uploadMeetingVideo","meetingId","alert","createMeetingRecordAPI","createMeetingRecordAPIResponse","toString","uploadVideoes","window","location","reload","current","srcObject","currentBookmarkId","sessionStorage","getItem","bookmarkId","author","createCommentAPI","defaultValues","resolver","children","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","className","noValidate","Array","isArray","map","child","props","name","React","key","PasswordInput","placeholder","refCallback","useToggle","showPassword","togglePassword","InputGroup","Form","as","ref","r","isInvalid","autoComplete","classNames","onClick","label","labelClassName","containerClass","otherProps","rows","comp","onChange","e","target","LAYOUT_VERTICAL","checked","htmlFor","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_FULL","LAYOUT_COLOR_LIGHT","LAYOUT_COLOR_DARK","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","role","PricingCard","plans","plan","index","md","Card","isRecommended","icon","price","duration","features","feature","index1","breadCrumbItems","Breadcrumb","listProps","href","item","active","path","menuItems","Dropdown","Link","to","align","hasDivider","variant","useVideoRecorder","audio","videoConstraints","facingMode","width","height","style","marginLeft","marginRight","display","controls","playsInline","autoPlay","src","useCommentVideoRecorder","useModal","isRecordOpen","isOpen","size","scroll","toggleRecord","toggleModal","openModalWithSize","Button","Modal","show","onHide","dialogClassName","scrollable","closeButton","dailyStandups","setDailyStandups","dailyStandupLoading","setDailyStandupLoading","carouselRef","getTimeDifference","useMoment","loading","readAllDailyStandups","readAllDailyStandupsAPI","pageIndex","readAllDailyStandupsAPIResponse","records","record","createdDate","seenMember","indexOf","at","member","slice","lastIndexOf","push","screenRecordId","screenRecordFileUrl","recordUrl","camRecordFileUrl","dailyStandup","profileImageUrl","seen","reverse","slide","findIndex","goToSlide","onViewDailyStandups","viewDailyStandupAPI","setSize","setClassName","setScroll","openModalWithClass","openModalWithScroll","convertDateTime","datetime","convertedDatetime","setTime","getTime","getTimezoneOffset","moment","diff","getTimeFromNow","fromNow","whiteboards","setWhiteboards","whiteboardLoading","setWhiteboardLoading","whiteboardPageNumber","setWhiteboardPageNumber","numberOfWhiteboards","setNumberOfWhiteboards","isCreateWhiteboardOpen","toggleCreateWhiteboard","readAllWhiteboard","readAllWhiteboardAPI","readAllWhiteboardAPIResponse","whiteboard","lastModifiedDate","authorProfileImageUrl","whiteboardFileUrl","whiteboardUrl","size_ALL_PAGE","onCreateWhiteboard","event","preventDefault","elements","namedItem","createWhiteboardAPI","createWhiteboardAPIResponse","formData","createWhiteboardFormData","uploadWhiteboardAPI","readWhiteboardAPI","readWhiteboardAPIResponse","whiteboardID","document","version","TldrawApp","pages","page","childIndex","shapes","bindings","pageStates","selectedIds","camera","point","zoom","assets","file","fileHandle","json","JSON","stringify","Blob","FormData","append","onEditWhiteboard","updateWhiteboardAPI","onDeleteWhiteboard","deleteWhiteboardAPI","onPageNumberClick","parseInt","innerText","isEditOpen","toggleEdit","isDeleteOpen","toggleDelete","isReadMore","setIsReadMore","toggleReadMore","closeModalAfterFunction","f","toggle","isCreateMeetingOpen","toggleCreateMeeting","meetings","setMeetings","meetingLoading","setMeetingLoading","currentMeetingName","setCurrentMeetingName","currentMeetingId","setCurrentMeetingId","readAllMeeting","readAllMeetingAPI","readAllMeetingAPIResponse","meetingsData","meeting","participants","participant","participantArray","split","substring","trim","onCreateMeeting","meetingName","createMeetingAPI","createMeetingAPIResponse","onDeleteMeeting","deleteMeetingAPI","onEndMeeting","updateMeetingAPI","onEnterMeeting","addMeetingMemberAPI","memberId","open","process","isViewOpen","toggleView"],"sourceRoot":""}