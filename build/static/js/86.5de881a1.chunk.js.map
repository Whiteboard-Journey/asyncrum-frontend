{"version":3,"file":"static/js/86.5de881a1.chunk.js","mappings":"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","sources":["pages/docs/WhiteboardCard.tsx","pages/docs/CreateWhiteboardButton.tsx","pages/docs/WhiteboardPagination.tsx","pages/docs/WhiteboardContainer.tsx","components/VideoPlayer/layout.ts","components/VideoPlayer/Drawing.tsx","components/VideoPlayer/DrawingControlsColorSelector.tsx","components/VideoPlayer/DrawingControlsSizeSelector.tsx","components/VideoPlayer/DrawingControlsDashSelector.tsx","components/VideoPlayer/DrawingControls.tsx","components/VideoPlayer/VideoBookmarkForm.tsx","components/ChatList/ChatForm.tsx","components/ChatList/ChatList.tsx","components/ChatList/hooks/useChatList.ts","components/VideoPlayer/VideoBookmarkShow.tsx","components/VideoPlayer/TimeDisplay.tsx","components/VideoPlayer/VideoBookmarkTimeline.tsx","components/VideoPlayer/TimeControl.tsx","components/VideoPlayer/VideoVolume.tsx","components/VideoPlayer/VideoBookmark.ts","components/VideoPlayer/VideoBookmarkAdd.tsx","components/VideoPlayer/VideoPlayer.tsx","pages/docs/DailyStandupCard.tsx","pages/docs/CreateRecordButton.tsx","pages/docs/DailyStandupContainer.tsx","pages/docs/MeetingCard.tsx","components/ScreenRecorder.tsx","pages/docs/CreateMeetingButton.tsx","pages/docs/MeetingContainer.tsx","pages/docs/NewTeamContainer.tsx","pages/docs/Dashboard.tsx"],"sourcesContent":["import { Card, Dropdown, OverlayTrigger, Tooltip, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { WhiteboardCardProps } from './types';\nimport { useMoment, useWhiteboardCard } from './hooks';\nimport { useRedux } from 'hooks';\n\nconst whiteboardPageURL = '/whiteboard?url=';\n\nconst WhiteboardCard = ({ whiteboard, onEditWhiteboard, onDeleteWhiteboard }: WhiteboardCardProps) => {\n  const { getTimeFromNow } = useMoment();\n  const { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction } =\n    useWhiteboardCard();\n  const { appSelector } = useRedux();\n  const { currentTeam } = appSelector((state) => ({\n    currentTeam: state.Team.currentTeam,\n  }));\n\n  return (\n    <Card className=\"d-block\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\n            <i className=\"dripicons-dots-3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item>Share</Dropdown.Item>\n            <Dropdown.Item onClick={toggleEdit}>Edit</Dropdown.Item>\n            <Modal show={isEditOpen} onHide={toggleEdit}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleEdit} closeButton>\n                  <h4 className=\"modal-title\">Edit Whiteboard Information</h4>\n                </Modal.Header>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onEditWhiteboard, event, toggleEdit)}\n                >\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mt-3 mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">\n                      Title\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"title\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.title}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"description\" className=\"form-label\">\n                      Description\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"description\"\n                      maxLength={255}\n                      required\n                      placeholder={whiteboard.description}\n                    />\n                  </div>\n\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Edit\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n            <Dropdown.Item>Duplicate</Dropdown.Item>\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\n              Delete\n            </Dropdown.Item>\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleDelete} closeButton>\n                  <h4 className=\"modal-title\">Delete {whiteboard.title}</h4>\n                </Modal.Header>\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\n                  Are you sure you want to delete this whiteboard permanently?\n                </p>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteWhiteboard, event, toggleDelete)}\n                >\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-danger\" type=\"submit\">\n                      Delete\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"mt-0\">\n          <Link\n            to={whiteboardPageURL + whiteboard.whiteboardFileUrl + '&id=' + currentTeam.code + '-' + whiteboard.id}\n            className=\"text-title\"\n          >\n            {whiteboard.title.length > 25 ? whiteboard.title.slice(0, 25) + ' ...' : whiteboard.title}\n          </Link>\n        </h4>\n        {whiteboard.description && (\n          <p className=\"font-13 my-3\">\n            {isReadMore ? whiteboard.description.slice(0, 40) : whiteboard.description}\n            {whiteboard.description.length > 40 ? (\n              <span onClick={toggleReadMore} className=\"fw-bold text-info\" role=\"button\">\n                {isReadMore ? ' ...read more' : ' show less'}\n              </span>\n            ) : (\n              ''\n            )}\n          </p>\n        )}\n        <div>\n          <span className=\"font-13\">Author: </span>\n          <OverlayTrigger placement={'bottom'} overlay={<Tooltip>{whiteboard.author}</Tooltip>}>\n            <img src={whiteboard.authorProfileImageUrl} className=\"rounded-circle avatar-xs\" alt={whiteboard.author} />\n          </OverlayTrigger>\n        </div>\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\n          Last modified: {getTimeFromNow(whiteboard.lastModifiedDate)}\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WhiteboardCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useWhiteboard } from './hooks';\n\nconst CreateWhiteboardButton = () => {\n  const { isCreateWhiteboardOpen, toggleCreateWhiteboard, onCreateWhiteboard } = useWhiteboard();\n\n  return (\n    <>\n      <Button onClick={toggleCreateWhiteboard}>\n        <i className=\"mdi mdi-plus\"></i> Create Whiteboard\n      </Button>\n      <Modal show={isCreateWhiteboardOpen} onHide={toggleCreateWhiteboard}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleCreateWhiteboard} closeButton>\n            <h4 className=\"modal-title\">Create a new whiteboard</h4>\n          </Modal.Header>\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateWhiteboard}>\n            <div className=\"mt-3 mb-3\">\n              <label htmlFor=\"title\" className=\"form-label\">\n                Title\n              </label>\n              <input className=\"form-control\" type=\"text\" id=\"title\" maxLength={255} required placeholder=\"Untitled\" />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label\">\n                Description\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"textarea\"\n                id=\"description\"\n                maxLength={255}\n                required\n                placeholder=\"Description\"\n              />\n            </div>\n\n            <div className=\"mb-3 text-center\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateWhiteboardButton;\n","import { Pagination } from 'react-bootstrap';\nimport { WhiteboardPaginationProps } from './types';\n\nconst WhiteboardPagination: React.FC<WhiteboardPaginationProps> = ({\n  whiteboardPageNumber,\n  numberOfWhiteboards,\n  onPageNumberClick,\n}: WhiteboardPaginationProps) => {\n  const whiteboardPerPage = 12;\n  const items = [];\n\n  for (let number = 1; number <= Math.ceil(numberOfWhiteboards / whiteboardPerPage); number++) {\n    items.push(\n      <Pagination.Item key={number.toString()} active={number === whiteboardPageNumber} onClick={onPageNumberClick}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination className=\"mx-auto\">\n      <Pagination.Prev />\n      {items}\n      <Pagination.Next />\n    </Pagination>\n  );\n};\n\nexport default WhiteboardPagination;\n","import { Row, Col } from 'react-bootstrap';\nimport { Whiteboard } from './types';\nimport WhiteboardCard from './WhiteboardCard';\nimport CreateWhiteboardButton from './CreateWhiteboardButton';\nimport WhiteboardPagination from './WhiteboardPagination';\nimport { useWhiteboard } from './hooks';\n\nconst WhiteboardContainer = () => {\n  const {\n    whiteboards,\n    whiteboardLoading,\n    whiteboardPageNumber,\n    numberOfWhiteboards,\n    onPageNumberClick,\n    onDeleteWhiteboard,\n    onEditWhiteboard,\n  } = useWhiteboard();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Whiteboards</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col sm={4}>\n          <CreateWhiteboardButton />\n        </Col>\n      </Row>\n      {!whiteboardLoading && (\n        <>\n          <Row>\n            {whiteboards.map((whiteboard: Whiteboard) => {\n              return (\n                <Col md={6} xxl={3} key={'wb-' + whiteboard.id}>\n                  <WhiteboardCard\n                    whiteboard={whiteboard}\n                    onEditWhiteboard={onEditWhiteboard}\n                    onDeleteWhiteboard={onDeleteWhiteboard}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n          {numberOfWhiteboards > 12 && (\n            <Row>\n              <Col className=\"d-flex\">\n                <WhiteboardPagination\n                  whiteboardPageNumber={whiteboardPageNumber}\n                  numberOfWhiteboards={numberOfWhiteboards}\n                  onPageNumberClick={onPageNumberClick}\n                />\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </>\n  );\n};\nexport default WhiteboardContainer;\n","/* eslint-disable import/prefer-default-export */\n\nconst getRatioDimensions = (displayAspectRatio: string, element: HTMLElement): [number, number] => {\n  const [widthSplit, heightSplit] = displayAspectRatio.split(':');\n  const width = parseInt(widthSplit, 10);\n  const height = parseInt(heightSplit, 10);\n\n  const ratioWidthHeight = width / height;\n  const ratioHeightWidth = height / width;\n\n  const containerWidth = element.offsetWidth;\n  const containerHeight = element.offsetHeight;\n\n  if (containerHeight * ratioWidthHeight <= containerWidth) {\n    return [containerHeight * ratioWidthHeight, containerHeight];\n  }\n\n  return [containerWidth, containerWidth * ratioHeightWidth];\n};\n\nexport default getRatioDimensions;\n","import { useRef, useEffect, useCallback } from 'react';\nimport { Tldraw, TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\nimport { Box } from '@chakra-ui/react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  playing: boolean;\n  onMount: (app: TldrawApp) => void;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  videoBookmark: VideoBookmark | null;\n};\n\nconst Drawing = ({ playing, onMount, scale, video, setVideo, videoBookmark }: Props) => {\n  const tlDrawRef = useRef<TldrawApp | null>(null);\n  const outerRef = useRef(null);\n\n  const setVideoBookmarkDrawing = (video: Video, bookmark: VideoBookmark, drawing: object) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, drawing: drawing } : el)),\n    }));\n    if (videoBookmark) {\n      videoBookmark.drawing = drawing;\n    }\n  };\n\n  function handleMount(app: TldrawApp) {\n    tlDrawRef.current = app;\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_mounted');\n    tlDrawRef.current.style({ color: ColorStyle.Red });\n    onMount(app);\n  }\n\n  function handlePersist(app: TldrawApp) {\n    if (videoBookmark === null || playing === true) {\n      return;\n    }\n\n    setVideoBookmarkDrawing(video, videoBookmark, app.document);\n  }\n\n  const clearDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    const tool = tlDrawRef.current.useStore.getState().appState.activeTool;\n    tlDrawRef.current.deleteAll();\n    tlDrawRef.current.selectTool(tool);\n    tlDrawRef.current.toggleToolLock();\n  }, []);\n\n  const rescaleDrawing = useCallback(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_resized');\n  }, [scale]);\n\n  useEffect(() => {\n    rescaleDrawing();\n  }, [scale, rescaleDrawing]);\n\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (videoBookmark?.drawing && videoBookmark.drawing) {\n      tlDrawRef.current.loadDocument(JSON.parse(JSON.stringify(videoBookmark.drawing)));\n\n      tlDrawRef.current.selectNone();\n      rescaleDrawing();\n    } else {\n      clearDrawing();\n    }\n  }, [clearDrawing, rescaleDrawing, videoBookmark]);\n\n  useEffect(() => {\n    if (tlDrawRef.current === null) {\n      return;\n    }\n\n    if (playing === true) {\n      clearDrawing();\n    }\n  }, [playing, clearDrawing]);\n\n  return (\n    <Box position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" ref={outerRef}>\n      <Tldraw\n        // @ts-ignore\n        onMount={(app: TldrawApp) => handleMount(app)}\n        onPersist={(app: TldrawApp) => handlePersist(app)}\n        showUI={false}\n        style=\"{background-color: transparent !important}\"\n      />\n    </Box>\n  );\n};\n\nexport default Drawing;\n","import { useState, useCallback } from 'react';\n\nimport { Flex, Box, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\n\nimport { TldrawApp, ColorStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst colors = {\n  [ColorStyle.White]: '#f0f1f3',\n  [ColorStyle.LightGray]: '#c6cbd1',\n  [ColorStyle.Gray]: '#788492',\n  [ColorStyle.Black]: '#1d1d1d',\n  [ColorStyle.Green]: '#36b24d',\n  [ColorStyle.Cyan]: '#0e98ad',\n  [ColorStyle.Blue]: '#1c7ed6',\n  [ColorStyle.Indigo]: '#4263eb',\n  [ColorStyle.Violet]: '#7746f1',\n  [ColorStyle.Red]: '#ff2133',\n  [ColorStyle.Orange]: '#ff9433',\n  [ColorStyle.Yellow]: '#ffc936',\n};\n\nconst DrawingControlsColorSelector = ({ app }: PropsType) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleColourPick = useCallback(\n    (color: ColorStyle) => {\n      app.style({ color });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const swatchesData = Object.entries(colors) as Array<[ColorStyle, string]>;\n\n  const renderedSwatches = swatchesData.map(([key, value]) => {\n    return (\n      <Box\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        backgroundColor={value}\n        cursor=\"pointer\"\n        onClick={() => handleColourPick(key)}\n      />\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Box\n          width=\"2rem\"\n          height=\"2rem\"\n          // @ts-ignore\n          bgColor={colors[currentStyle.color]}\n          cursor=\"pointer\"\n          onClick={handleOpen}\n        />\n      </PopoverTrigger>\n      <PopoverContent width={`${swatchesData.length * 2}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default DrawingControlsColorSelector;\n","import { useState, useCallback } from 'react';\n\nimport { Flex, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\nimport { TldrawApp, SizeStyle } from '@krapi0314/tldraw';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst sizes = {\n  [SizeStyle.Small]: 'S',\n  [SizeStyle.Medium]: 'M',\n  [SizeStyle.Large]: 'L',\n};\n\nconst DrawingControlsSizeSelector = ({ app }: PropsType) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = useCallback(\n    (size: SizeStyle) => {\n      app.style({ size });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(sizes) as Array<[SizeStyle, string]>;\n\n  const renderedSwatches = sizesData.map(([key, value]) => {\n    return (\n      <Flex\n        mx={1}\n        my={1}\n        key={key}\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        cursor=\"pointer\"\n        onClick={() => handleSizePick(key)}\n        align=\"center\"\n        justify=\"center\"\n        border=\"1px\"\n        borderColor=\"whiteAlpha.400\"\n        background=\"whiteAlpha.200\"\n        padding=\"1rem\"\n      >\n        {value}\n      </Flex>\n    );\n  });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}\n        >\n          {\n            // @ts-ignore\n            sizes[currentStyle.size].slice(0, 1).toUpperCase()\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 3}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default DrawingControlsSizeSelector;\n","import * as React from 'react';\n\nimport {\n  Flex,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow,\n  Tooltip,\n  Box,\n} from '@chakra-ui/react';\n\nimport { TldrawApp, DashStyle } from '@krapi0314/tldraw';\n\nimport {\n  Circle as CircleIcon,\n  SquaresFilled as SquaresFilledIcon,\n  CircleDashed as CircleDashedIcon,\n  CircleDotted as CircleDottedIcon,\n} from 'tabler-icons-react';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst dashes = {\n  [DashStyle.Draw]: [<CircleIcon />, 'Line'],\n  [DashStyle.Solid]: [<SquaresFilledIcon />, 'Filled'],\n  [DashStyle.Dashed]: [<CircleDashedIcon />, 'Dashed'],\n  [DashStyle.Dotted]: [<CircleDottedIcon />, 'Dotted'],\n};\n\nexport default function DrawingControlsStyleSelector({ app }: PropsType) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\n\n  const handleSizePick = React.useCallback(\n    (dash: DashStyle) => {\n      app.style({ dash });\n      setIsOpen(false);\n    },\n    [app]\n  );\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const sizesData = Object.entries(dashes) as Array<[DashStyle, [JSX.Element, string]]>;\n\n  const renderedSwatches = sizesData\n    .filter(([key]) => {\n      return key !== DashStyle.Solid;\n    })\n    .map(([key, [icon, label]]) => {\n      return (\n        <Flex\n          mx={1}\n          my={1}\n          key={key}\n          width=\"3rem\"\n          height=\"2.5rem\"\n          cursor=\"pointer\"\n          onClick={() => handleSizePick(key)}\n          align=\"center\"\n          justify=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          background=\"whiteAlpha.200\"\n          boxSizing=\"border-box\"\n        >\n          <Tooltip label={label}>\n            <Box>{icon}</Box>\n          </Tooltip>\n        </Flex>\n      );\n    });\n\n  return (\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <PopoverTrigger>\n        <Flex\n          width=\"2rem\"\n          height=\"2rem\"\n          cursor=\"pointer\"\n          background=\"black\"\n          align=\"center\"\n          justifyContent=\"center\"\n          border=\"1px\"\n          borderColor=\"whiteAlpha.400\"\n          onClick={handleOpen}\n        >\n          {\n            // @ts-ignore\n            dashes[currentStyle.dash][0]\n          }\n        </Flex>\n      </PopoverTrigger>\n      <PopoverContent width={`${sizesData.length * 2.5}rem`}>\n        <PopoverArrow />\n        <PopoverBody backgroundColor=\"black\">\n          <Flex my={-1} mx={-1}>\n            {renderedSwatches}\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport { css } from '@emotion/react';\n\nimport { Flex, Box, VStack, IconButton, Tooltip } from '@chakra-ui/react';\nimport { TDShapeType, TDToolType, TldrawApp } from '@krapi0314/tldraw';\nimport {\n  Click as ClickIcon,\n  Pencil as PencilIcon,\n  ArrowUpRight as ArrowUpRightIcon,\n  Rectangle as RectangleIcon,\n  Circle as CircleIcon,\n  Trash as TrashIcon,\n} from 'tabler-icons-react';\n\nimport DrawingControlsColorSelector from './DrawingControlsColorSelector';\nimport DrawingControlsSizeSelector from './DrawingControlsSizeSelector';\nimport DrawingControlsDashSelector from './DrawingControlsDashSelector';\n\ntype PropsType = {\n  app: TldrawApp;\n};\n\nconst selectedStyle = css`\n  opacity: 1;\n`;\n\nconst unSelectedStyle = css`\n  opacity: 0.5;\n`;\n\nconst DrawingControls = ({ app }: PropsType) => {\n  const activeTool = app.useStore((s) => s.appState.activeTool);\n\n  const selectTool = React.useCallback(\n    (type: TDToolType) => {\n      app.selectTool(type);\n      app.toggleToolLock();\n    },\n    [app]\n  );\n\n  return (\n    <>\n      <Box>\n        <VStack spacing={4}>\n          <Tooltip label=\"Select\" aria-label=\"Select\">\n            <IconButton\n              icon={<ClickIcon />}\n              aria-label=\"Select\"\n              css={activeTool === 'select' ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool('select')}\n            />\n          </Tooltip>\n          <Tooltip label=\"Pencil\" aria-label=\"Pencil\">\n            <IconButton\n              icon={<PencilIcon />}\n              aria-label=\"Pencil\"\n              css={activeTool === TDShapeType.Draw ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Draw)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Arrow\" aria-label=\"Arrow\">\n            <IconButton\n              icon={<ArrowUpRightIcon />}\n              aria-label=\"Arrow\"\n              css={activeTool === TDShapeType.Arrow ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Arrow)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Rectangle\" aria-label=\"Rectangle\">\n            <IconButton\n              icon={<RectangleIcon />}\n              aria-label=\"Rectangle\"\n              css={activeTool === TDShapeType.Rectangle ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Rectangle)}\n            />\n          </Tooltip>\n          <Tooltip label=\"Ellipse\" aria-label=\"Ellipse\">\n            <IconButton\n              icon={<CircleIcon />}\n              aria-label=\"Ellipse\"\n              css={activeTool === TDShapeType.Ellipse ? selectedStyle : unSelectedStyle}\n              onClick={() => selectTool(TDShapeType.Ellipse)}\n            />\n          </Tooltip>\n        </VStack>\n      </Box>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <Box>\n            <DrawingControlsColorSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsSizeSelector app={app} />\n          </Box>\n          <Box mt={4}>\n            <DrawingControlsDashSelector app={app} />\n          </Box>\n        </Box>\n      </Flex>\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\n        <Box>\n          <IconButton icon={<TrashIcon />} aria-label=\"Arrow\" css={selectedStyle} onClick={() => app.deleteAll()} />\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default DrawingControls;\n","import { useState, useCallback } from 'react';\nimport { usePopper } from 'react-popper';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { Box, Flex, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\n\nimport type { VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  onChangeContent: (content: string) => void;\n  onChangeIcon: (details: VideoBookmarkIcon) => void;\n  currentEmoji: string;\n};\n\nexport default function VideoBookmarkEditor({ bookmark, onChangeContent, onChangeIcon, currentEmoji }: Props) {\n  const [showEmojiPicker, setShowEmojiPicker] = useState<boolean>(false);\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null);\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'left',\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [20, 20],\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          fallbackPlacements: ['top', 'left', 'bottom', 'right'],\n        },\n      },\n    ],\n  });\n\n  const handleEmojiPicked = useCallback(\n    (details) => {\n      setShowEmojiPicker(false);\n      onChangeIcon(details);\n    },\n    [onChangeIcon]\n  );\n\n  useHotkeys(\n    'esc',\n    () => {\n      setShowEmojiPicker(false);\n    },\n    {},\n    [setShowEmojiPicker]\n  );\n\n  return (\n    <form>\n      <FormControl mb={4}>\n        <FormLabel>Icon</FormLabel>\n\n        <Flex\n          align=\"center\"\n          bgColor=\"gray.800\"\n          height=\"10\"\n          justify=\"center\"\n          rounded=\"xl\"\n          width=\"10\"\n          fontSize=\"lg\"\n          cursor=\"pointer\"\n          ref={setReferenceElement}\n          onClick={() => {\n            setShowEmojiPicker(!showEmojiPicker);\n          }}\n        >\n          {currentEmoji}\n        </Flex>\n        {showEmojiPicker && (\n          <Box\n            ref={setPopperElement}\n            zIndex=\"1\"\n            style={styles.popper}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...attributes.popper}\n          >\n            <Picker data={data} onEmojiSelect={(details: VideoBookmarkIcon) => handleEmojiPicked(details)} />\n          </Box>\n        )}\n      </FormControl>\n      <FormControl>\n        <FormLabel>Description</FormLabel>\n        <Textarea\n          value={bookmark.content}\n          onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            onChangeContent(event.target.value);\n          }}\n          autoFocus\n        />\n      </FormControl>\n    </form>\n  );\n}\n","import { Row, Col } from 'react-bootstrap';\nimport { FormInput } from '../form';\nimport { useChatForm } from './hooks';\nimport { CreateCommentRecordButton } from '../';\n\nconst ChatForm = () => {\n  return (\n    <form name=\"chat-form\" id=\"chat-form\" className=\"needs-validation m-3\">\n      <Row>\n        <CreateCommentRecordButton />\n      </Row>\n    </form>\n  );\n};\n\nexport default ChatForm;\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport SimpleBar from 'simplebar-react';\nimport classNames from 'classnames';\nimport { useChatList } from './hooks';\nimport { useMoment } from '../../pages/docs/hooks';\nimport ChatForm from './ChatForm';\nimport { CardTitle } from 'components';\nimport type { Comment } from '../VideoPlayer/Comment';\n\nexport type Message = {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n};\n\n/* Chat Item */\nconst ChatItemAvatar = ({ userAvatar, postedOn }: { userAvatar: string; postedOn: string }) => {\n  const { getTimeFromNow } = useMoment();\n\n  return (\n    <div className=\"chat-avatar\">\n      <img src={userAvatar} alt={userAvatar} />\n      <i>{getTimeFromNow(postedOn)}</i>\n    </div>\n  );\n};\n\nconst ChatItemVideo = ({\n  userName,\n  videoUrl,\n  index,\n  playIndex,\n  onEnded,\n}: {\n  userName: string;\n  videoUrl: string;\n  index: number;\n  playIndex: number;\n  onEnded: (index: number) => void;\n}) => {\n  return (\n    <div className=\"conversation-text\">\n      <div className=\"ctext-wrap\">\n        <i>{userName}</i>\n        <video\n          src={videoUrl}\n          autoPlay={playIndex === index ? true : false}\n          width=\"200px\"\n          height=\"150px\"\n          onEnded={() => onEnded(index + 1)}\n          controls={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: React.ReactNode;\n  placement: string;\n  className?: string;\n}) => {\n  return <li className={classNames('clearfix', { odd: placement === 'left' }, className)}>{children}</li>;\n};\n\n/**\n * ChatList\n */\ntype ChatListProps = {\n  className?: string;\n  chatMessages: Comment[];\n};\n\nconst ChatList = ({ chatMessages, className }: ChatListProps) => {\n  const { messages } = useChatList(chatMessages);\n  const [playIndex, setPlayIndex] = useState<number>(0);\n\n  const playNextVideo = (index: number) => {\n    setPlayIndex(index);\n  };\n\n  return (\n    <Card className=\"mb-0 bg-transparent\">\n      <Card.Body className=\"p-0\">\n        <div className=\"px-3 pt-3\">\n          <CardTitle\n            containerClass=\"d-flex align-items-center justify-content-between mb-2\"\n            title=\"Thread\"\n            menuItems={[{ label: 'Refresh' }, { label: 'Settings' }]}\n          />\n        </div>\n\n        <div className=\"chat-conversation\">\n          {/* chat messages */}\n          <SimpleBar style={{ maxHeight: '322px', width: '100%' }}>\n            <ul className={classNames('conversation-list', className, 'px-3')}>\n              {(messages || []).map((message, index) => {\n                return (\n                  <ChatItem key={index.toString()} placement={index > 0 ? (index % 2 === 0 ? '' : 'left') : 'right'}>\n                    {message.profileImageUrl && (\n                      <ChatItemAvatar userAvatar={message.profileImageUrl} postedOn={message.createdDate} />\n                    )}\n                    <ChatItemVideo\n                      key={playIndex}\n                      userName={message.author}\n                      videoUrl={message.commentFileUrl}\n                      index={index}\n                      playIndex={playIndex}\n                      onEnded={playNextVideo}\n                    />\n                  </ChatItem>\n                );\n              })}\n            </ul>\n          </SimpleBar>\n\n          {/* chat form */}\n          <ChatForm />\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport { ChatList };\n","import { useState } from 'react';\nimport type { Comment } from '../../VideoPlayer/Comment';\n\nexport default function useChatList(chatMessages: Comment[]) {\n  const [messages, setMessages] = useState<Comment[]>(chatMessages);\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (comment: Comment) => {\n    setMessages(messages.concat(comment));\n  };\n\n  return {\n    messages,\n    handleNewMessagePosted,\n  };\n}\n","import { useState } from 'react';\n\nimport { css } from '@emotion/react';\nimport { Box, Flex, Button, ButtonGroup, Text, Spacer, IconButton } from '@chakra-ui/react';\nimport Draggable from 'react-draggable'; // The default\n\nimport { updateBookmark as updateBookmarkAPI, deleteBookmark as deleteBookmarkAPI } from 'helpers';\n\nimport VideoBookmarkForm from './VideoBookmarkForm';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark, VideoBookmarkCoordinates, VideoBookmarkIcon } from './VideoBookmark';\nimport type { Comment } from './Comment';\nimport { ChatList } from 'components/ChatList';\n\ntype Props = {\n  bookmark: VideoBookmark | null;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  scale: number;\n  video: Video;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  playing: boolean;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  editingBookmark: boolean;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n  comments: Comment[];\n};\n\nconst dragHandleStyles = css`\n  cursor: move;\n  height: 2rem;\n  background: repeating-linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.05),\n    rgba(255, 255, 255, 0.05) 10px,\n    rgba(255, 255, 255, 0.1) 10px,\n    rgba(255, 255, 255, 0.1) 20px\n  );\n`;\n\nexport default function VideoBookmarkShow({\n  video,\n  bookmark,\n  setActiveBookmark,\n  scale,\n  playing,\n  editingBookmark,\n  setEditingBookmark,\n  setVideo,\n  comments,\n}: Props) {\n  if (playing === true) {\n    return null;\n  }\n\n  if (!bookmark) {\n    return null;\n  }\n\n  const [currentEmoji, setCurrentEmoji] = useState<string>(bookmark.icon);\n\n  const handleDelete = () => {\n    if (bookmark) {\n      deleteVideoBookmark();\n    }\n    setEditingBookmark(false);\n    setActiveBookmark(null);\n  };\n\n  const deleteVideoBookmark = () => {\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.filter((innerBookmark) => {\n        return bookmark.id !== innerBookmark.id;\n      }),\n    }));\n    deleteBookmarkAPI(parseInt(bookmark.id));\n  };\n\n  const setVideoBookmarkCoords = (coords: VideoBookmarkCoordinates) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) =>\n        idx === bookmarkIndex ? { ...el, position: { x: coords.x, y: coords.y }, scale: scale } : el\n      ),\n    }));\n  };\n\n  const setVideoBookmarkContent = (content: string) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, content: content } : el)),\n    }));\n\n    video.bookmarks[bookmarkIndex].content = content;\n    bookmark.content = content;\n  };\n\n  const setVideoBookmarkIcon = (icon: VideoBookmarkIcon) => {\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\n      return innerBookmark.id === bookmark.id;\n    });\n    let hex = '';\n    if (icon.native.codePointAt(0) !== undefined) {\n      hex = icon.native.codePointAt(0)!.toString(16);\n    }\n    const iconString = String.fromCodePoint(parseInt('0x' + hex));\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, icon: iconString } : el)),\n    }));\n    bookmark.icon = iconString;\n    setCurrentEmoji(iconString);\n  };\n\n  const offset = scale / bookmark.scale;\n\n  const position = bookmark.position ? { x: bookmark.position.x * offset, y: bookmark.position.y * offset } : undefined;\n\n  const renderedContent = (() => {\n    if (editingBookmark === true) {\n      return (\n        <VideoBookmarkForm\n          onChangeContent={(content) => setVideoBookmarkContent(content)}\n          onChangeIcon={(details) => setVideoBookmarkIcon(details)}\n          bookmark={bookmark}\n          currentEmoji={currentEmoji}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <h4>Bookmark</h4>\n        <Text style={{ whiteSpace: 'pre-wrap' }}>\n          {bookmark.icon} {bookmark.content}\n        </Text>\n      </div>\n    );\n  })();\n\n  const renderedPositiveAction = editingBookmark ? (\n    <Button\n      onClick={() => {\n        setEditingBookmark(false);\n        let hex = '';\n        if (bookmark.icon.codePointAt(0) !== undefined) {\n          hex = bookmark.icon.codePointAt(0)!.toString(16);\n        }\n        const emoji = hex;\n        const content = bookmark.content;\n        const time = bookmark.time;\n        const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n        const drawing = JSON.stringify(bookmark.drawing);\n        const scale = bookmark.scale;\n        const author = bookmark.author;\n        updateBookmarkAPI(parseInt(bookmark.id), { emoji, content, time, position, drawing, scale, author });\n      }}\n    >\n      Done\n    </Button>\n  ) : (\n    <Button onClick={() => setEditingBookmark(true)}>Edit</Button>\n  );\n\n  return (\n    <Flex\n      position=\"absolute\"\n      left={0}\n      top={0}\n      right={0}\n      bottom={0}\n      align=\"flex-end\"\n      justify=\"flex-end\"\n      padding=\"4\"\n      pointerEvents=\"none\"\n      zIndex={3}\n    >\n      <Draggable\n        key={bookmark.id}\n        onStop={(_event, data) => setVideoBookmarkCoords({ x: data.x, y: data.y })}\n        bounds=\"parent\"\n        handle=\"#dragHandle\"\n        position={position}\n      >\n        <Box pointerEvents=\"all\" background=\"blackAlpha.900\" width=\"md\">\n          <Box id=\"dragHandle\" css={dragHandleStyles} />\n          {renderedContent && (\n            <Box padding=\"4\" borderBottom=\"1px\" borderColor=\"whiteAlpha.500\">\n              {renderedContent}\n            </Box>\n          )}\n          <ChatList chatMessages={comments}></ChatList>\n\n          <Flex padding=\"4\">\n            <Spacer />\n            <ButtonGroup size=\"sm\">\n              <Button onClick={() => handleDelete()} colorScheme=\"red\">\n                Delete\n              </Button>\n              {renderedPositiveAction}\n            </ButtonGroup>\n            <Spacer />\n          </Flex>\n        </Box>\n      </Draggable>\n    </Flex>\n  );\n}\n","import { Text } from '@chakra-ui/react';\n\ntype Props = {\n  currentTime: number;\n  fullDuration: number;\n};\n\nconst secondsToHms = (input: number) => {\n  const hours = Math.floor(input / 3600);\n  const minutes = Math.floor(input / 60) % 60;\n  const seconds = input % 60;\n\n  return [hours, minutes, seconds]\n    .map((v) => (v < 10 ? `0${v}` : v))\n    .filter((v, i) => v !== '00' || i > 0)\n    .join(':');\n};\n\nconst TimeDisplay = ({ currentTime, fullDuration }: Props) => {\n  return (\n    <Text whiteSpace=\"nowrap\" fontSize=\"sm\" align=\"center\" my=\"auto\" mb=\"1\">\n      {secondsToHms(Math.round(currentTime))} / {secondsToHms(Math.round(fullDuration))}\n    </Text>\n  );\n};\n\nexport default TimeDisplay;\n","import { Box, Tooltip } from '@chakra-ui/react';\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  bookmark: VideoBookmark;\n  video: Video;\n  size: 'small' | 'medium';\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n};\n\nexport default function VideoBookmarkTimeline({\n  video,\n  bookmark,\n  size = 'medium',\n  setCurrentTime,\n  setActiveBookmark,\n  pauseVideo,\n}: Props) {\n  function truncateString(str: string, n: number) {\n    if (str.length > n) {\n      return `${str.substring(0, n)}...`;\n    }\n    return str;\n  }\n\n  function handleGoto() {\n    pauseVideo();\n    setCurrentTime(bookmark.time);\n    video.el.currentTime = bookmark.time;\n    setActiveBookmark(bookmark);\n    sessionStorage.setItem('currentBookmarkId', bookmark.id);\n  }\n\n  const renderedIcon = (() => {\n    if (bookmark.icon) {\n      return bookmark.icon;\n    }\n\n    return <BookmarkIcon size={size === 'medium' ? 25 : 20} color={size === 'medium' ? '#eee' : '#999'} />;\n  })();\n\n  return (\n    <Tooltip label={`${bookmark.author}: ${truncateString(bookmark.content, 50)}`}>\n      <Box onClick={() => handleGoto()} cursor=\"pointer\">\n        {renderedIcon}\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport { Box, Flex, Slider, SliderFilledTrack, SliderThumb, SliderTrack } from '@chakra-ui/react';\n\nimport VideoBookmarkTimeline from './VideoBookmarkTimeline';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\ntype Props = {\n  video: Video;\n  fullDuration: number;\n  currentTime: number;\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n  camVideoRef: React.MutableRefObject<HTMLVideoElement | null>;\n};\n\nconst TimeControl = ({\n  video,\n  fullDuration,\n  currentTime,\n  setCurrentTime,\n  setActiveBookmark,\n  pauseVideo,\n  camVideoRef,\n}: Props) => {\n  const trackRef = useRef<HTMLDivElement | null>(null);\n  const [renderedCurrentBookmarks, setRenderedCurrentBookmarks] = useState<JSX.Element[]>([]);\n  const [trackDimensions, setTrackDimensions] = useState<DOMRect | null>(null); // tracks the dimensions of the track as it's resized\n\n  const handleSliderChange = (time: number) => {\n    setCurrentTime(time);\n    video.el.currentTime = time;\n    camVideoRef.current!.currentTime = time;\n  };\n\n  const setBookmarkButtons = () => {\n    setRenderedCurrentBookmarks(\n      trackDimensions === null || fullDuration === 0\n        ? []\n        : video.bookmarks.map((bookmark) => {\n            const percentage = bookmark.time / fullDuration;\n            const left = trackDimensions.width * percentage;\n            return (\n              <Flex\n                key={bookmark.id}\n                bgColor=\"gray.800\"\n                position=\"absolute\"\n                width=\"2rem\"\n                height=\"2rem\"\n                align=\"center\"\n                justify=\"center\"\n                top=\"-7px\"\n                left={`calc(${left}px - 1rem)`}\n                rounded=\"full\"\n                zIndex=\"1\">\n                <VideoBookmarkTimeline\n                  video={video}\n                  bookmark={bookmark}\n                  size=\"medium\"\n                  setCurrentTime={setCurrentTime}\n                  setActiveBookmark={setActiveBookmark}\n                  pauseVideo={pauseVideo}\n                />\n              </Flex>\n            );\n          })\n    );\n  };\n\n  useLayoutEffect(() => {\n    function handleResize() {\n      if (trackRef.current === null) {\n        return;\n      }\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\n      setBookmarkButtons();\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  useEffect(() => {\n    if (trackRef.current) {\n      if (\n        trackDimensions === null ||\n        trackRef.current.getBoundingClientRect().width < (trackDimensions as DOMRect).width\n      )\n        setTrackDimensions(trackRef.current.getBoundingClientRect());\n    }\n    setBookmarkButtons();\n  }, [video.bookmarks, fullDuration, trackDimensions]);\n\n  return (\n    <Box position=\"relative\">\n      {renderedCurrentBookmarks}\n\n      <Slider\n        aria-label=\"Time control\"\n        focusThumbOnChange={false}\n        key=\"playing\"\n        max={fullDuration}\n        min={0}\n        top=\"1px\"\n        onChange={(value: number) => handleSliderChange(value)}\n        step={1 / video.frameRate}\n        value={currentTime}>\n        <SliderTrack className=\"track\" ref={trackRef}>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  );\n};\n\nexport default TimeControl;\n","import { Box, Flex, SliderTrack, Slider, SliderFilledTrack, SliderThumb } from '@chakra-ui/react';\n\nimport { Volume as VolumeIcon } from 'tabler-icons-react';\n\nimport type { Video } from './Video';\n\ntype Props = {\n  video: Video;\n  setCurrentVolume: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport default function VideoVolume({ video, setCurrentVolume }: Props) {\n  function handleSliderChange(value: number) {\n    setCurrentVolume(value);\n    video.el.volume = value;\n  }\n\n  return (\n    <Flex align=\"center\" width=\"7rem\">\n      <Box mb={1}>\n        <VolumeIcon />\n      </Box>\n      <Slider\n        key=\"playing\"\n        aria-label=\"Video volume control\"\n        value={video.el.volume}\n        min={0}\n        max={1}\n        onChange={(value: number) => handleSliderChange(value)}\n        step={0.01}\n        focusThumbOnChange={false}\n        ml={2}\n        mb={1}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Flex>\n  );\n}\n","import { Video } from './Video';\nimport { APICore } from 'helpers/api/apiCore';\nimport type { Comment } from './Comment';\n\nconst api = new APICore();\nconst user = api.getLoggedInUser();\n\nexport type VideoBookmarkIcon = {\n  native: string;\n};\n\nexport type VideoBookmarkCoordinates = {\n  x: number;\n  y: number;\n};\n\nexport type VideoBookmark = {\n  id: string;\n  author: string;\n  icon: string;\n  content: string;\n  time: number;\n  position: VideoBookmarkCoordinates | null;\n  drawing: object | null;\n  scale: number;\n  video_id: string;\n  comments: Comment[];\n};\n\nexport function create(\n  video: Video,\n  icon: string,\n  content: string,\n  time: number,\n  scale: number,\n  drawing: object\n): VideoBookmark {\n  return {\n    content,\n    drawing: JSON.parse(JSON.stringify(drawing)),\n    id: '',\n    icon: icon,\n    position: null,\n    scale,\n    time,\n    video_id: video.id,\n    author: user.fullname,\n    comments: [],\n  };\n}\n","import { TldrawApp } from '@krapi0314/tldraw';\n\nimport { Box, IconButton, Tooltip } from '@chakra-ui/react';\n\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\n\nimport { create, VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\nimport type { Video } from './Video';\nimport { createBookmark as createBookmarkAPI } from 'helpers';\n\ntype Props = {\n  app: TldrawApp;\n  disabled: boolean;\n  scale: number;\n  video: Video;\n  currentTime: number;\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\n  pauseVideo: () => void;\n};\n\nexport default function VideoBookmarkAdd({\n  app,\n  disabled,\n  scale,\n  video,\n  currentTime,\n  setVideo,\n  setEditingBookmark,\n  setActiveBookmark,\n  pauseVideo,\n}: Props) {\n  function handleCreate() {\n    pauseVideo();\n    createVideoBookmark(video, setVideo, '🔖', '', currentTime, scale, app.document);\n    setEditingBookmark(true);\n  }\n\n  const createVideoBookmark = async (\n    video: Video,\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\n    icon: string,\n    content: string,\n    time: number,\n    scale: number,\n    drawing: object\n  ) => {\n    const bookmark = create(video, icon, content, time, scale, drawing);\n    const drawingString = JSON.stringify(drawing);\n    const id = video.id;\n    const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\n    let hex = '';\n    if (bookmark.icon.codePointAt(0) !== undefined) {\n      hex = bookmark.icon.codePointAt(0)!.toString(16);\n    }\n\n    const createBookmarkAPIResponse = await createBookmarkAPI({\n      recordId: id,\n      emoji: hex,\n      content,\n      time,\n      position,\n      drawing: drawingString,\n      scale,\n      author: bookmark.author,\n    });\n    bookmark.id = createBookmarkAPIResponse.data.id;\n    setVideo((prevState) => ({\n      ...prevState,\n      bookmarks: [...prevState.bookmarks, bookmark],\n    }));\n    setActiveBookmark(bookmark);\n  };\n\n  return (\n    <Tooltip label=\"Bookmark this moment (active when paused)\">\n      <Box>\n        <IconButton\n          onClick={() => handleCreate()}\n          icon={<BookmarkIcon />}\n          aria-label=\"Bookmark this moment\"\n          disabled={disabled}\n        />\n      </Box>\n    </Tooltip>\n  );\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nimport { css } from '@emotion/react';\nimport { Box, Flex, IconButton, Tooltip } from '@chakra-ui/react';\nimport { TldrawApp } from '@krapi0314/tldraw';\n\nimport getRatioDimensions from './layout';\nimport { readRecord as readRecordAPI } from 'helpers';\n\nimport Drawing from './Drawing';\nimport DrawingControls from './DrawingControls';\nimport VideoBookmarkShow from './VideoBookmarkShow';\nimport TimeDisplay from './TimeDisplay';\nimport TimeControl from './TimeControl';\nimport VideoVolume from './VideoVolume';\nimport VideoBookmarkAdd from './VideoBookmarkAdd';\n\nimport type { Video } from './Video';\nimport type { VideoBookmark } from './VideoBookmark';\n\nimport {\n  PlayerPlay as PlayerPlayIcon,\n  PlayerPause as PlayerPauseIcon,\n  Maximize as MaximizeIcon,\n} from 'tabler-icons-react';\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst DISPLAY_ASPECT_RATIO = '16:9';\nconst FRAME_RATE = 30;\nconst DEFAULT_VOLUME = 0.8;\nconst LONG_TIME = 24 * 60 * 60;\n\nconst overlayStyle = css`\n  width: ${VIDEO_WIDTH}px;\n  height: ${VIDEO_HEIGHT}px;\n`;\n\nconst videoStyle = css`\n  video {\n    width: ${VIDEO_WIDTH}px;\n    height: ${VIDEO_HEIGHT}px;\n  }\n`;\n\ntype Props = {\n  id: number;\n  cam: string;\n};\n\nconst VideoPlayer = ({ id, cam }: Props) => {\n  const [app, setApp] = useState<TldrawApp>();\n\n  const [videoElemLoading, setVideoElemLoading] = useState<boolean>(true);\n  const [videoPlayerLoading, setVideoPlayerLoading] = useState<boolean>(true);\n  const [video, setVideo] = useState<Video>({} as Video);\n  const [videoDimensions, setVideoDimensions] = useState<[number, number] | null>(null);\n  const [currentTime, setCurrentTime] = useState<number>(0);\n  const [fullDuration, setFullDuration] = useState<number>(0);\n  const [currentVolume, setCurrentVolume] = useState<number>(DEFAULT_VOLUME);\n  const [fullscreen, setFullscreen] = useState<boolean>(false);\n  const [playing, setPlaying] = useState<boolean>(false);\n\n  const [bookmarks, setBookmarks] = useState<VideoBookmark[]>(video.bookmarks);\n  const [editingBookmark, setEditingBookmark] = useState<boolean>(false);\n  const [activeBookmark, setActiveBookmark] = useState<VideoBookmark | null>(null);\n\n  const overlayRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTargetRef = useRef<HTMLDivElement | null>(null);\n  const fullscreenTriggerRef = useRef<HTMLButtonElement | null>(null);\n  const videoContainerRef = useRef<HTMLDivElement | null>(null);\n  const camVideoRef = useRef<HTMLVideoElement | null>(null);\n\n  const setupVideoElement = useCallback(async () => {\n    const readRecordAPIResponse = await readRecordAPI(id);\n    const videoData = readRecordAPIResponse.data;\n\n    const el = document.createElement('video');\n    el.src = videoData.recordUrl;\n\n    setVideo({\n      bookmarks: videoData.bookmarks\n        ? videoData.bookmarks.map((b: any) => {\n            return {\n              ...b,\n              drawing: JSON.parse(b.drawing),\n              icon: b.emoji ? String.fromCodePoint(parseInt('0x' + b.emoji)) : '',\n            };\n          })\n        : [],\n      codedWidth: VIDEO_HEIGHT,\n      codedHeight: VIDEO_WIDTH,\n      displayAspectRatio: DISPLAY_ASPECT_RATIO,\n      el: el,\n      filePath: videoData.recordUrl,\n      frameRate: FRAME_RATE,\n      id: videoData.id,\n      name: videoData.title,\n      seeking: false,\n      volume: DEFAULT_VOLUME,\n    });\n    setBookmarks(videoData.bookmarks);\n    setVideoElemLoading(false);\n  }, [id]);\n\n  const getDuration = (url: string, setFullDuration: React.Dispatch<React.SetStateAction<number>>) => {\n    var _player = new Audio(url);\n    _player.addEventListener(\n      'durationchange',\n      function () {\n        if (this.duration != Infinity) {\n          var duration = this.duration;\n          _player.remove();\n          setFullDuration(duration);\n        }\n      },\n      false\n    );\n    _player.load();\n    _player.currentTime = LONG_TIME;\n    _player.volume = 0;\n    _player.play();\n  };\n\n  const setupVideoPlayer = useCallback(() => {\n    if (videoContainerRef.current === null || video.el === undefined) {\n      return;\n    }\n    videoContainerRef.current.innerHTML = '';\n    videoContainerRef.current.appendChild(video.el);\n\n    video.el.volume = video.volume;\n    setCurrentVolume(video.el.volume);\n    getDuration(video.el.src, setFullDuration);\n\n    video.el.ontimeupdate = () => {\n      setCurrentTime(video.el.currentTime);\n    };\n\n    setVideoPlayerLoading(false);\n  }, [video]);\n\n  useEffect(() => {\n    if (overlayRef.current && video.displayAspectRatio) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, [video.displayAspectRatio]);\n\n  useEffect(() => {\n    if (videoElemLoading) {\n      setupVideoElement();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (videoPlayerLoading) {\n      setupVideoPlayer();\n    }\n  }, [videoElemLoading]);\n\n  useEffect(() => {\n    if (overlayRef.current) {\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\n      setVideoDimensions(dimensions);\n    }\n  }, []);\n\n  const playVideo = () => {\n    if (videoContainerRef.current === null || camVideoRef.current === null) {\n      return;\n    }\n    video.el.play();\n    camVideoRef.current.play();\n    setPlaying(true);\n  };\n\n  const pauseVideo = () => {\n    if (videoContainerRef.current === null || camVideoRef.current === null) {\n      return;\n    }\n    video.el.pause();\n    camVideoRef.current.pause();\n    setPlaying(false);\n  };\n\n  const renderedContent = (() => {\n    const renderedDrawingControls = app !== undefined && (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        justify=\"center\"\n        left={0}\n        pointerEvents=\"none\"\n        position=\"absolute\"\n        top={0}\n        zIndex={2}>\n        <Box\n          background=\"gray.900\"\n          borderColor=\"whiteAlpha.500\"\n          borderLeft=\"none\"\n          borderWidth=\"1px\"\n          boxSizing=\"border-box\"\n          padding={4}\n          pointerEvents=\"all\">\n          <DrawingControls app={app} />\n        </Box>\n      </Flex>\n    );\n\n    const renderedDrawing = (\n      <Drawing\n        onMount={(innerApp) => setApp(innerApp)}\n        scale={1}\n        playing={playing}\n        video={video}\n        setVideo={setVideo}\n        videoBookmark={activeBookmark ? activeBookmark : null}\n      />\n    );\n\n    const renderedActiveBookmark = activeBookmark !== undefined && (\n      <VideoBookmarkShow\n        video={video}\n        setVideo={setVideo}\n        bookmark={activeBookmark ? activeBookmark : null}\n        setActiveBookmark={setActiveBookmark}\n        scale={1}\n        playing={playing}\n        setCurrentTime={setCurrentTime}\n        editingBookmark={editingBookmark}\n        setEditingBookmark={setEditingBookmark}\n        comments={activeBookmark?.comments!}\n      />\n    );\n\n    const renderedNavigationControls = (\n      <Flex\n        align=\"center\"\n        bottom={0}\n        boxSizing=\"border-box\"\n        justify=\"center\"\n        left={0}\n        position=\"absolute\"\n        right={0}\n        zIndex={2}>\n        <Flex\n          align=\"center\"\n          background=\"gray.900\"\n          borderBottom=\"none\"\n          borderColor=\"whiteAlpha.500\"\n          borderWidth=\"1px\"\n          minWidth=\"50vw\"\n          p={4}\n          pointerEvents=\"all\">\n          <Tooltip label={playing ? 'Pause' : 'Play'}>\n            <Box mr=\"2\">\n              {!playing && (\n                <IconButton\n                  onClick={() => {\n                    playVideo();\n                    setEditingBookmark(false);\n                    setActiveBookmark(null);\n                  }}\n                  icon={<PlayerPlayIcon />}\n                  aria-label=\"Play\"\n                />\n              )}\n              {playing && <IconButton onClick={() => pauseVideo()} icon={<PlayerPauseIcon />} aria-label=\"Pause\" />}\n            </Box>\n          </Tooltip>\n\n          <Box mx=\"2\">\n            <TimeDisplay currentTime={currentTime} fullDuration={fullDuration} />\n          </Box>\n\n          <Box flexGrow={1} mx=\"2\" minW=\"25vw\">\n            <TimeControl\n              video={video}\n              fullDuration={fullDuration}\n              currentTime={currentTime}\n              setCurrentTime={setCurrentTime}\n              setActiveBookmark={setActiveBookmark}\n              pauseVideo={pauseVideo}\n              camVideoRef={camVideoRef}\n            />\n          </Box>\n\n          <Box mx=\"2\">\n            <VideoVolume video={video} setCurrentVolume={setCurrentVolume} />\n          </Box>\n\n          {app && (\n            <Box mx=\"2\">\n              <VideoBookmarkAdd\n                key={video.id}\n                app={app}\n                disabled={!!activeBookmark || editingBookmark || playing}\n                scale={1}\n                video={video}\n                setVideo={setVideo}\n                currentTime={currentTime}\n                setEditingBookmark={setEditingBookmark}\n                setActiveBookmark={setActiveBookmark}\n                pauseVideo={pauseVideo}\n              />\n            </Box>\n          )}\n\n          <Tooltip label=\"Presentation mode\">\n            <Box ml=\"2\">\n              <IconButton\n                onClick={() => setFullscreen(!fullscreen)}\n                icon={<MaximizeIcon />}\n                aria-label=\"Fullscreen video\"\n                ref={fullscreenTriggerRef}\n              />\n            </Box>\n          </Tooltip>\n        </Flex>\n      </Flex>\n    );\n    return (\n      <Flex direction=\"column\" width=\"100%\" height=\"calc(100vh - 5rem)\" ref={fullscreenTargetRef}>\n        <Flex flexGrow={1} flexShrink={1} overflow=\"hidden\" position=\"relative\">\n          {renderedDrawingControls}\n          {renderedNavigationControls}\n          <Flex align=\"center\" flexGrow={1} flexShrink={1} justifyContent=\"center\" ref={overlayRef} overflow=\"hidden\">\n            <Box position=\"relative\" css={overlayStyle} id=\"overlay\" style={{ touchAction: 'none' }}>\n              {renderedDrawing}\n              {renderedActiveBookmark}\n              <Box css={videoStyle} ref={videoContainerRef} />\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  })();\n  return (\n    <>\n      {videoElemLoading ? (\n        <p>loading</p>\n      ) : (\n        <Flex>\n          <Box width=\"100vw\" bgColor=\"black\">\n            {renderedContent}\n          </Box>\n          <div id=\"cam-wrapper\">\n            <video id=\"cam\" width=\"320px\" height=\"240px\" src={cam} ref={camVideoRef} muted />\n          </div>\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default VideoPlayer;\n","import { VideoPlayer } from 'components/VideoPlayer';\nimport { Card } from 'react-bootstrap';\nimport { useDailyStandup, useMoment } from './hooks';\nimport { DailyStandup } from './types';\nimport {\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\n\nconst DailyStandupCard = ({ dailyStandup }: { dailyStandup: DailyStandup }) => {\n  const { getTimeFromNow } = useMoment();\n  const { onViewDailyStandups } = useDailyStandup();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Card className=\"d-block me-3\">\n      <Card.Body\n        onClick={() => {\n          onOpen();\n          onViewDailyStandups(dailyStandup);\n        }}\n        style={{ cursor: 'pointer' }}>\n        <div className={(dailyStandup.seen ? 'opacity-25' : '') + ' text-center'}>\n          <img\n            src={dailyStandup.profileImageUrl}\n            className=\"rounded-circle avatar-lg\"\n            alt={dailyStandup.author}\n            referrerPolicy=\"no-referrer\"\n          />\n        </div>\n        <h4 className={(dailyStandup.seen ? 'text-light' : '') + ' text-center font-weight-bold mt-2'}>\n          {dailyStandup.author}\n        </h4>\n        <p className={(dailyStandup.seen ? 'text-light' : 'text-muted') + ' text-center font-12 mb-1'}>\n          {getTimeFromNow(dailyStandup.createdDate)}\n        </p>\n        <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <VideoPlayer id={dailyStandup.screenRecordId} cam={dailyStandup.camRecordFileUrl} />\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n        {/* <Modal\n          backdrop=\"static\"\n          show={isViewOpen}\n          onHide={toggleView}\n          dialogClassName={className}\n          size={size}\n          scrollable={scroll}>\n          <Modal.Header onHide={toggleView} closeButton>\n            <h4 className=\"modal-title\">{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</h4>\n          </Modal.Header>\n          <Modal.Body>\n            <video\n              src={dailyStandup.camRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={cam_w}\n              height={cam_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n            <video\n              src={dailyStandup.screenRecordFileUrl}\n              controls\n              autoPlay\n              playsInline\n              width={screen_w}\n              height={screen_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n          </Modal.Body>\n        </Modal> */}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DailyStandupCard;\n","import { Button, Modal } from 'react-bootstrap';\nimport { useModal } from './hooks';\nimport { VideoRecorder } from 'components';\n\nconst CreateRecordButton = () => {\n  const { isOpen: isRecordOpen, size, className, scroll, toggleModal: toggleRecord, openModalWithClass } = useModal();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          openModalWithClass('modal-full-width');\n        }}\n      >\n        <i className=\"mdi mdi-plus\"></i> Record\n      </Button>\n      <Modal show={isRecordOpen} onHide={toggleRecord} dialogClassName={className} size={size} scrollable={scroll}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleRecord} closeButton>\n            <h4 className=\"modal-title\">Record</h4>\n          </Modal.Header>\n          <VideoRecorder />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateRecordButton;\n","import { Row, Col } from 'react-bootstrap';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { useDailyStandup } from './hooks';\nimport { DailyStandup } from './types';\nimport DailyStandupCard from './DailyStandupCard';\nimport CreateRecordButton from './CreateRecordButton';\n\nconst DailyStandupContainer = () => {\n  const { carouselRef, dailyStandups, dailyStandupLoading } = useDailyStandup();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Daily Standups</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <CreateRecordButton />\n        </Col>\n      </Row>\n      <Row>\n        {!dailyStandupLoading && (\n          <Carousel\n            ref={carouselRef}\n            additionalTransfrom={0}\n            arrows\n            centerMode={false}\n            className=\"\"\n            containerClass=\"container\"\n            dotListClass=\"\"\n            draggable\n            focusOnSelect={false}\n            infinite={false}\n            itemClass=\"\"\n            keyBoardControl\n            minimumTouchDrag={80}\n            pauseOnHover\n            renderArrowsWhenDisabled={false}\n            renderButtonGroupOutside={false}\n            renderDotsOutside={false}\n            responsive={{\n              desktop: {\n                breakpoint: {\n                  max: 3000,\n                  min: 1024,\n                },\n                items: 6,\n                partialVisibilityGutter: 40,\n              },\n              mobile: {\n                breakpoint: {\n                  max: 464,\n                  min: 0,\n                },\n                items: 1,\n                partialVisibilityGutter: 30,\n              },\n              tablet: {\n                breakpoint: {\n                  max: 1024,\n                  min: 464,\n                },\n                items: 2,\n                partialVisibilityGutter: 30,\n              },\n            }}\n            rewind={false}\n            rewindWithAnimation={false}\n            rtl={false}\n            shouldResetAutoplay\n            showDots={false}\n            sliderClass=\"\"\n            slidesToSlide={1}\n          >\n            {dailyStandups.map((dailyStandup: DailyStandup, i: number) => {\n              return (\n                <div key={i}>\n                  <DailyStandupCard dailyStandup={dailyStandup} />\n                </div>\n              );\n            })}\n          </Carousel>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default DailyStandupContainer;\n","import { Card, Dropdown, Modal, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useMoment, useMeetingCard } from './hooks';\nimport { Meeting } from './types';\n\ntype Props = {\n  meeting: Meeting;\n  onDeleteMeeting: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\n  onEnterMeeting: (meetingId: number, meetingName: string) => void;\n  onEndMeeting: (meetingId: number) => void;\n};\n\nconst MeetingCard = ({ meeting, onDeleteMeeting, onEnterMeeting, onEndMeeting }: Props) => {\n  const { isDeleteOpen, toggleDelete, isViewOpen, toggleView, closeModalAfterFunction } = useMeetingCard();\n  const { getTimeFromNow } = useMoment();\n\n  return (\n    <Card className=\"d-block\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\n            <i className=\"dripicons-dots-3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item>Share</Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                onEndMeeting(meeting.id);\n              }}\n            >\n              End Meeting\n            </Dropdown.Item>\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\n              Delete\n            </Dropdown.Item>\n\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\n              <Modal.Body>\n                <Modal.Header onHide={toggleDelete} closeButton>\n                  <h4 className=\"modal-title\">Delete {meeting.meetingName}</h4>\n                </Modal.Header>\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\n                  Are you sure you want to delete this meeting permanently?\n                </p>\n                <form\n                  className=\"ps-3 pe-3\"\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteMeeting, event, toggleDelete)}\n                >\n                  <input type=\"hidden\" id=\"id\" value={meeting.id} />\n                  <div className=\"mb-3 text-center\">\n                    <button className=\"btn btn-danger\" type=\"submit\">\n                      Delete\n                    </button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4\n          className=\"mt-0\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => {\n            if (meeting.status) {\n              onEnterMeeting(meeting.id, meeting.meetingName);\n            } else if (meeting.meetingFileUrl) {\n              toggleView();\n            }\n          }}\n        >\n          {meeting.meetingName}\n          {meeting.status ? (\n            <span className=\"badge bg-danger float-end me-1\">\n              <i className=\"mdi mdi-access-point\"></i> live\n            </span>\n          ) : (\n            ''\n          )}\n        </h4>\n        <div className=\"mt-3\">\n          <span className=\"font-13\">Participants: </span>\n          {meeting &&\n            meeting.participants.map((participant) => {\n              return (\n                <OverlayTrigger key={participant[0]} placement={'bottom'} overlay={<Tooltip>{participant[0]}</Tooltip>}>\n                  <img src={participant[1]} className=\"rounded-circle avatar-xs\" alt={participant[0]} />\n                </OverlayTrigger>\n              );\n            })}\n        </div>\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\n          Last modified: {getTimeFromNow(meeting.lastModifiedDate)}\n        </p>\n        <Modal show={isViewOpen} onHide={toggleView} size=\"xl\">\n          <Modal.Body>\n            <Modal.Header onHide={toggleView} closeButton>\n              <h4 className=\"modal-title\">{meeting.meetingName}</h4>\n            </Modal.Header>\n            <div>\n              <video className=\"d-block mx-auto\" src={meeting.meetingFileUrl} width=\"960\" height=\"540\" controls></video>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MeetingCard;\n","import { useState } from 'react';\nimport { useVideoRecorder } from './hooks';\nimport { useMeeting } from 'pages/docs/hooks';\n\ntype Props = {\n  meetingId: number;\n  meetingName: string;\n};\n\nconst ScreenRecorder = ({ meetingId, meetingName }: Props) => {\n  const [meetingInProgress, setMeetingInProgress] = useState<boolean>(false);\n  const screen_w = 960,\n    screen_h = 540;\n  const {\n    recordingState,\n    videoRef,\n    previewStream,\n    screenMediaBlobUrl,\n    setRecordingState,\n    screenStartRecording,\n    screenStopRecording,\n    uploadMeetingVideo,\n  } = useVideoRecorder();\n  const { onEndMeeting, onEnterMeeting } = useMeeting();\n\n  return (\n    <div className=\"video-recorder mt-4\">\n      <div>\n        {recordingState === 'recording' && previewStream && (\n          <div>\n            <video\n              ref={videoRef}\n              width={screen_w}\n              height={screen_h}\n              controls\n              playsInline\n              autoPlay\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n          </div>\n        )}\n        {recordingState === 'recorded' && (\n          <div>\n            <video\n              src={screenMediaBlobUrl}\n              controls\n              autoPlay\n              playsInline\n              width={screen_w}\n              height={screen_h}\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\n            />\n          </div>\n        )}\n        {recordingState !== 'recording' ? (\n          recordingState === 'idle' ? (\n            <div className=\"mt-4 mb-3 text-center\">\n              <div className=\"d-inline me-3\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    setRecordingState('refused');\n                    onEnterMeeting(meetingId, meetingName);\n                  }}\n                >\n                  Start Meeting without Recording\n                </button>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  screenStartRecording();\n                  setRecordingState('recording');\n                }}\n              >\n                Start Meeting with Recording\n              </button>\n            </div>\n          ) : (\n            <div className=\"mt-4 mb-3 text-center\">\n              {meetingInProgress ? (\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    uploadMeetingVideo(screenMediaBlobUrl!, meetingId);\n                    onEndMeeting(meetingId);\n                  }}\n                >\n                  Save Recording & End Meeting\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    onEndMeeting(meetingId);\n                  }}\n                >\n                  End Meeting\n                </button>\n              )}\n            </div>\n          )\n        ) : (\n          <div className=\"mt-4 mb-3 text-center\">\n            {meetingInProgress && <h4 className=\"mb-4\">Meeting in progress...</h4>}\n            <button\n              className=\"btn btn-primary me-3\"\n              onClick={() => {\n                setMeetingInProgress(true);\n                onEnterMeeting(meetingId, meetingName);\n              }}\n            >\n              Start Meeting\n            </button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                screenStopRecording();\n                setRecordingState('recorded');\n              }}\n            >\n              Stop Recording\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenRecorder;\n","import ScreenRecorder from 'components/ScreenRecorder';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useMeeting } from './hooks';\n\nconst CreateMeetingButton = () => {\n  const {\n    isCreateMeetingOpen,\n    toggleCreateMeeting,\n    isRecordOpen,\n    toggleRecord,\n    currentMeetingId,\n    currentMeetingName,\n    onCreateMeeting,\n  } = useMeeting();\n\n  return (\n    <>\n      <Button onClick={toggleCreateMeeting}>\n        <i className=\"mdi mdi-plus\"></i> Start a new meeting\n      </Button>\n      <Modal show={isCreateMeetingOpen} onHide={toggleCreateMeeting}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleCreateMeeting} closeButton>\n            <h4 className=\"modal-title\">Start a new meeting</h4>\n          </Modal.Header>\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateMeeting}>\n            <div className=\"mt-3 mb-3\">\n              <label htmlFor=\"meetingName\" className=\"form-label\">\n                Meeting Name\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                id=\"meetingName\"\n                maxLength={255}\n                required\n                placeholder=\"Meeting Name\"\n              />\n            </div>\n\n            <div className=\"mb-3 text-center\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n      <Modal show={isRecordOpen} onHide={toggleRecord} size=\"xl\">\n        <Modal.Body>\n          <Modal.Header onHide={toggleRecord} closeButton>\n            <h4 className=\"modal-title\">Record a meeting video</h4>\n          </Modal.Header>\n          <ScreenRecorder meetingId={currentMeetingId!} meetingName={currentMeetingName} />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateMeetingButton;\n","import { Row, Col } from 'react-bootstrap';\nimport MeetingCard from './MeetingCard';\nimport CreateMeetingButton from './CreateMeetingButton';\nimport { useMeeting } from './hooks';\nimport { Meeting } from './types';\n\nconst MeetingContainer = () => {\n  const { meetings, meetingLoading, onDeleteMeeting, onEnterMeeting, onEndMeeting } = useMeeting();\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Meetings</h4>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col sm={4}>\n          <CreateMeetingButton />\n        </Col>\n      </Row>\n      {!meetingLoading && meetings.length > 0 && (\n        <Row>\n          {meetings.map((meeting: Meeting) => {\n            return (\n              <Col md={6} xxl={3} key={'mt-' + meeting.id}>\n                <MeetingCard\n                  meeting={meeting}\n                  onDeleteMeeting={onDeleteMeeting}\n                  onEnterMeeting={onEnterMeeting}\n                  onEndMeeting={onEndMeeting}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      )}\n    </>\n  );\n};\nexport default MeetingContainer;\n","import { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst NewTeamContainer = () => {\n  return (\n    <div className=\"containter pt-5\">\n      <Row className=\"pt-5\">\n        <Col>\n          <div className=\"text-center\">\n            <h3 className=\"\">Start by creating a team!</h3>\n            <p className=\"text-muted mt-3\">You can also join another team after receiving invitations.</p>\n\n            <Link to=\"/settings/create-team\">\n              <button type=\"button\" className=\"btn btn-primary btn-sm mt-2\">\n                <i className=\"mdi mdi-plus font-18 align-middle me-2\"></i>Create Team\n              </button>\n            </Link>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewTeamContainer;\n","import WhiteboardContainer from './WhiteboardContainer';\nimport DailyStandupContainer from './DailyStandupContainer';\nimport MeetingContainer from './MeetingContainer';\nimport NewTeamContainer from './NewTeamContainer';\nimport { useRedux } from 'hooks';\n\nconst Dashboard = () => {\n  const { appSelector } = useRedux();\n\n  const { loading, teamList } = appSelector((state) => ({\n    loading: state.Auth.loading,\n    teamList: state.Team.teamList,\n  }));\n\n  return loading ? (\n    <>\n      <p>Loading</p>\n    </>\n  ) : teamList.length > 0 ? (\n    <>\n      <DailyStandupContainer />\n      <hr />\n      <MeetingContainer />\n      <hr />\n      <WhiteboardContainer />\n    </>\n  ) : (\n    <>\n      <NewTeamContainer />\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["whiteboard","onEditWhiteboard","onDeleteWhiteboard","getTimeFromNow","useMoment","useWhiteboardCard","isEditOpen","isDeleteOpen","isReadMore","toggleEdit","toggleDelete","toggleReadMore","closeModalAfterFunction","currentTeam","appSelector","useRedux","state","Team","Card","className","Dropdown","align","variant","as","onClick","Modal","show","onHide","closeButton","onSubmit","event","type","id","value","htmlFor","maxLength","required","placeholder","title","description","to","whiteboardFileUrl","code","length","slice","role","OverlayTrigger","placement","overlay","Tooltip","author","src","authorProfileImageUrl","alt","lastModifiedDate","useWhiteboard","isCreateWhiteboardOpen","toggleCreateWhiteboard","onCreateWhiteboard","Button","whiteboardPageNumber","numberOfWhiteboards","onPageNumberClick","items","number","Math","ceil","push","Pagination","active","toString","whiteboards","whiteboardLoading","Row","Col","sm","map","md","xxl","displayAspectRatio","element","split","widthSplit","heightSplit","width","parseInt","height","ratioWidthHeight","ratioHeightWidth","containerWidth","offsetWidth","containerHeight","offsetHeight","playing","onMount","scale","video","setVideo","videoBookmark","tlDrawRef","useRef","outerRef","handleMount","app","current","setCamera","style","color","ColorStyle","handlePersist","bookmark","drawing","bookmarkIndex","bookmarks","findIndex","innerBookmark","prevState","el","idx","setVideoBookmarkDrawing","document","clearDrawing","useCallback","tool","useStore","getState","appState","activeTool","deleteAll","selectTool","toggleToolLock","rescaleDrawing","useEffect","loadDocument","JSON","parse","stringify","selectNone","position","top","left","right","bottom","ref","onPersist","showUI","colors","useState","isOpen","setIsOpen","currentStyle","s","handleColourPick","swatchesData","Object","entries","renderedSwatches","key","mx","my","backgroundColor","cursor","onClose","bgColor","sizes","SizeStyle","handleSizePick","size","sizesData","justify","border","borderColor","background","padding","justifyContent","toUpperCase","dashes","DashStyle","DrawingControlsStyleSelector","React","dash","filter","icon","label","boxSizing","selectedStyle","css","unSelectedStyle","spacing","TDShapeType","mt","pt","borderTop","VideoBookmarkEditor","onChangeContent","onChangeIcon","currentEmoji","showEmojiPicker","setShowEmojiPicker","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","modifiers","name","options","offset","fallbackPlacements","styles","attributes","handleEmojiPicked","details","useHotkeys","mb","rounded","fontSize","zIndex","popper","data","onEmojiSelect","content","onChange","target","autoFocus","ChatItemAvatar","userAvatar","postedOn","ChatItemVideo","userName","videoUrl","index","playIndex","onEnded","autoPlay","controls","ChatItem","children","classNames","odd","ChatList","chatMessages","messages","setMessages","handleNewMessagePosted","comment","concat","useChatList","setPlayIndex","playNextVideo","containerClass","menuItems","maxHeight","message","profileImageUrl","createdDate","commentFileUrl","dragHandleStyles","VideoBookmarkShow","setActiveBookmark","editingBookmark","setEditingBookmark","comments","setCurrentEmoji","deleteVideoBookmark","deleteBookmarkAPI","x","y","undefined","renderedContent","setVideoBookmarkContent","hex","native","codePointAt","iconString","String","fromCodePoint","setVideoBookmarkIcon","whiteSpace","renderedPositiveAction","emoji","time","updateBookmarkAPI","pointerEvents","onStop","_event","coords","setVideoBookmarkCoords","bounds","handle","borderBottom","colorScheme","secondsToHms","input","floor","v","i","join","currentTime","fullDuration","round","VideoBookmarkTimeline","setCurrentTime","pauseVideo","str","n","renderedIcon","substring","sessionStorage","setItem","camVideoRef","trackRef","renderedCurrentBookmarks","setRenderedCurrentBookmarks","trackDimensions","setTrackDimensions","setBookmarkButtons","percentage","useLayoutEffect","handleResize","getBoundingClientRect","window","addEventListener","removeEventListener","focusThumbOnChange","max","min","step","frameRate","VideoVolume","setCurrentVolume","volume","handleSliderChange","ml","user","APICore","getLoggedInUser","create","video_id","fullname","VideoBookmarkAdd","disabled","createVideoBookmark","drawingString","createBookmarkAPI","recordId","createBookmarkAPIResponse","VIDEO_WIDTH","overlayStyle","videoStyle","cam","setApp","videoElemLoading","setVideoElemLoading","videoPlayerLoading","setVideoPlayerLoading","setVideoDimensions","setFullDuration","fullscreen","setFullscreen","setPlaying","setBookmarks","activeBookmark","overlayRef","fullscreenTargetRef","fullscreenTriggerRef","videoContainerRef","setupVideoElement","readRecordAPI","readRecordAPIResponse","videoData","createElement","recordUrl","b","codedWidth","codedHeight","filePath","seeking","setupVideoPlayer","innerHTML","appendChild","url","_player","Audio","this","duration","Infinity","remove","load","play","getDuration","ontimeupdate","dimensions","getRatioDimensions","pause","renderedDrawingControls","borderLeft","borderWidth","renderedDrawing","innerApp","renderedActiveBookmark","renderedNavigationControls","minWidth","p","mr","flexGrow","minW","direction","flexShrink","overflow","touchAction","muted","dailyStandup","onViewDailyStandups","useDailyStandup","useDisclosure","onOpen","seen","referrerPolicy","screenRecordId","camRecordFileUrl","useModal","isRecordOpen","scroll","toggleRecord","toggleModal","openModalWithClass","dialogClassName","scrollable","carouselRef","dailyStandups","dailyStandupLoading","additionalTransfrom","arrows","centerMode","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","pauseOnHover","renderArrowsWhenDisabled","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","partialVisibilityGutter","mobile","tablet","rewind","rewindWithAnimation","rtl","shouldResetAutoplay","showDots","sliderClass","slidesToSlide","meeting","onDeleteMeeting","onEnterMeeting","onEndMeeting","useMeetingCard","isViewOpen","toggleView","meetingName","status","meetingFileUrl","participants","participant","meetingId","meetingInProgress","setMeetingInProgress","useVideoRecorder","recordingState","videoRef","previewStream","screenMediaBlobUrl","setRecordingState","screenStartRecording","screenStopRecording","uploadMeetingVideo","useMeeting","playsInline","marginLeft","marginRight","display","isCreateMeetingOpen","toggleCreateMeeting","currentMeetingId","currentMeetingName","onCreateMeeting","meetings","meetingLoading","loading","Auth","teamList"],"sourceRoot":""}