{"version":3,"file":"static/js/86.c45bb756.chunk.js","mappings":"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","sources":["pages/docs/WhiteboardCard.tsx","pages/docs/CreateWhiteboardButton.tsx","pages/docs/WhiteboardPagination.tsx","pages/docs/WhiteboardContainer.tsx","components/VideoPlayer/layout.ts","components/VideoPlayer/Drawing.tsx","components/VideoPlayer/DrawingControlsColorSelector.tsx","components/VideoPlayer/DrawingControlsSizeSelector.tsx","components/VideoPlayer/DrawingControlsDashSelector.tsx","components/VideoPlayer/DrawingControls.tsx","components/VideoPlayer/VideoBookmarkForm.tsx","components/ChatList/ChatForm.tsx","components/ChatList/ChatList.tsx","components/ChatList/hooks/useChatList.ts","components/VideoPlayer/VideoBookmarkShow.tsx","components/VideoPlayer/TimeDisplay.tsx","components/VideoPlayer/VideoBookmarkTimeline.tsx","components/VideoPlayer/TimeControl.tsx","components/VideoPlayer/VideoVolume.tsx","components/VideoPlayer/VideoBookmark.ts","components/VideoPlayer/VideoBookmarkAdd.tsx","components/VideoPlayer/VideoPlayer.tsx","pages/docs/DailyStandupCard.tsx","pages/docs/CreateRecordButton.tsx","pages/docs/DailyStandupContainer.tsx","pages/docs/MeetingCard.tsx","components/ScreenRecorder.tsx","pages/docs/CreateMeetingButton.tsx","pages/docs/MeetingContainer.tsx","pages/docs/NewTeamContainer.tsx","pages/docs/Dashboard.tsx"],"sourcesContent":["import { Card, Dropdown, OverlayTrigger, Tooltip, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { WhiteboardCardProps } from './types';\r\nimport { useMoment, useWhiteboardCard } from './hooks';\r\nimport { useRedux } from 'hooks';\r\n\r\nconst whiteboardPageURL = '/whiteboard?url=';\r\n\r\nconst WhiteboardCard = ({ whiteboard, onEditWhiteboard, onDeleteWhiteboard }: WhiteboardCardProps) => {\r\n  const { getTimeFromNow } = useMoment();\r\n  const { isEditOpen, isDeleteOpen, isReadMore, toggleEdit, toggleDelete, toggleReadMore, closeModalAfterFunction } =\r\n    useWhiteboardCard();\r\n  const { appSelector } = useRedux();\r\n  const { currentTeam } = appSelector((state) => ({\r\n    currentTeam: state.Team.currentTeam,\r\n  }));\r\n\r\n  return (\r\n    <Card className=\"d-block\">\r\n      <Card.Body>\r\n        <Dropdown className=\"card-widgets\" align=\"end\">\r\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\r\n            <i className=\"dripicons-dots-3\"></i>\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item>Share</Dropdown.Item>\r\n            <Dropdown.Item onClick={toggleEdit}>Edit</Dropdown.Item>\r\n            <Modal show={isEditOpen} onHide={toggleEdit}>\r\n              <Modal.Body>\r\n                <Modal.Header onHide={toggleEdit} closeButton>\r\n                  <h4 className=\"modal-title\">Edit Whiteboard Information</h4>\r\n                </Modal.Header>\r\n                <form\r\n                  className=\"ps-3 pe-3\"\r\n                  onSubmit={(event) => closeModalAfterFunction(onEditWhiteboard, event, toggleEdit)}\r\n                >\r\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\r\n                  <div className=\"mt-3 mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">\r\n                      Title\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"title\"\r\n                      maxLength={255}\r\n                      required\r\n                      placeholder={whiteboard.title}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"description\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"description\"\r\n                      maxLength={255}\r\n                      required\r\n                      placeholder={whiteboard.description}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 text-center\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </Modal.Body>\r\n            </Modal>\r\n            <Dropdown.Item>Duplicate</Dropdown.Item>\r\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\r\n              Delete\r\n            </Dropdown.Item>\r\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\r\n              <Modal.Body>\r\n                <Modal.Header onHide={toggleDelete} closeButton>\r\n                  <h4 className=\"modal-title\">Delete {whiteboard.title}</h4>\r\n                </Modal.Header>\r\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\r\n                  Are you sure you want to delete this whiteboard permanently?\r\n                </p>\r\n                <form\r\n                  className=\"ps-3 pe-3\"\r\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteWhiteboard, event, toggleDelete)}\r\n                >\r\n                  <input type=\"hidden\" id=\"id\" value={whiteboard.id} />\r\n                  <div className=\"mb-3 text-center\">\r\n                    <button className=\"btn btn-danger\" type=\"submit\">\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <h4 className=\"mt-0\">\r\n          <Link\r\n            to={whiteboardPageURL + whiteboard.whiteboardFileUrl + '&id=' + currentTeam.code + '-' + whiteboard.id}\r\n            className=\"text-title\"\r\n          >\r\n            {whiteboard.title.length > 25 ? whiteboard.title.slice(0, 25) + ' ...' : whiteboard.title}\r\n          </Link>\r\n        </h4>\r\n        {whiteboard.description && (\r\n          <p className=\"font-13 my-3\">\r\n            {isReadMore ? whiteboard.description.slice(0, 40) : whiteboard.description}\r\n            {whiteboard.description.length > 40 ? (\r\n              <span onClick={toggleReadMore} className=\"fw-bold text-info\" role=\"button\">\r\n                {isReadMore ? ' ...read more' : ' show less'}\r\n              </span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </p>\r\n        )}\r\n        <div>\r\n          <span className=\"font-13\">Author: </span>\r\n          <OverlayTrigger placement={'bottom'} overlay={<Tooltip>{whiteboard.author}</Tooltip>}>\r\n            <img src={whiteboard.authorProfileImageUrl} className=\"rounded-circle avatar-xs\" alt={whiteboard.author} />\r\n          </OverlayTrigger>\r\n        </div>\r\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\r\n          Last modified: {getTimeFromNow(whiteboard.lastModifiedDate)}\r\n        </p>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WhiteboardCard;\r\n","import { Button, Modal } from 'react-bootstrap';\r\nimport { useWhiteboard } from './hooks';\r\n\r\nconst CreateWhiteboardButton = () => {\r\n  const { isCreateWhiteboardOpen, toggleCreateWhiteboard, onCreateWhiteboard } = useWhiteboard();\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleCreateWhiteboard}>\r\n        <i className=\"mdi mdi-plus\"></i> Create Whiteboard\r\n      </Button>\r\n      <Modal show={isCreateWhiteboardOpen} onHide={toggleCreateWhiteboard}>\r\n        <Modal.Body>\r\n          <Modal.Header onHide={toggleCreateWhiteboard} closeButton>\r\n            <h4 className=\"modal-title\">Create a new whiteboard</h4>\r\n          </Modal.Header>\r\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateWhiteboard}>\r\n            <div className=\"mt-3 mb-3\">\r\n              <label htmlFor=\"title\" className=\"form-label\">\r\n                Title\r\n              </label>\r\n              <input className=\"form-control\" type=\"text\" id=\"title\" maxLength={255} required placeholder=\"Untitled\" />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"description\" className=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"textarea\"\r\n                id=\"description\"\r\n                maxLength={255}\r\n                required\r\n                placeholder=\"Description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3 text-center\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateWhiteboardButton;\r\n","import { Pagination } from 'react-bootstrap';\r\nimport { WhiteboardPaginationProps } from './types';\r\n\r\nconst WhiteboardPagination: React.FC<WhiteboardPaginationProps> = ({\r\n  whiteboardPageNumber,\r\n  numberOfWhiteboards,\r\n  onPageNumberClick,\r\n}: WhiteboardPaginationProps) => {\r\n  const whiteboardPerPage = 12;\r\n  const items = [];\r\n\r\n  for (let number = 1; number <= Math.ceil(numberOfWhiteboards / whiteboardPerPage); number++) {\r\n    items.push(\r\n      <Pagination.Item key={number.toString()} active={number === whiteboardPageNumber} onClick={onPageNumberClick}>\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Pagination className=\"mx-auto\">\r\n      <Pagination.Prev />\r\n      {items}\r\n      <Pagination.Next />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default WhiteboardPagination;\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport { Whiteboard } from './types';\r\nimport WhiteboardCard from './WhiteboardCard';\r\nimport CreateWhiteboardButton from './CreateWhiteboardButton';\r\nimport WhiteboardPagination from './WhiteboardPagination';\r\nimport { useWhiteboard } from './hooks';\r\n\r\nconst WhiteboardContainer = () => {\r\n  const {\r\n    whiteboards,\r\n    whiteboardLoading,\r\n    whiteboardPageNumber,\r\n    numberOfWhiteboards,\r\n    onPageNumberClick,\r\n    onDeleteWhiteboard,\r\n    onEditWhiteboard,\r\n  } = useWhiteboard();\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"page-title-box\">\r\n            <h4 className=\"page-title\">Whiteboards</h4>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col sm={4}>\r\n          <CreateWhiteboardButton />\r\n        </Col>\r\n      </Row>\r\n      {!whiteboardLoading && (\r\n        <>\r\n          <Row>\r\n            {whiteboards.map((whiteboard: Whiteboard) => {\r\n              return (\r\n                <Col md={6} xxl={3} key={'wb-' + whiteboard.id}>\r\n                  <WhiteboardCard\r\n                    whiteboard={whiteboard}\r\n                    onEditWhiteboard={onEditWhiteboard}\r\n                    onDeleteWhiteboard={onDeleteWhiteboard}\r\n                  />\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          {numberOfWhiteboards > 12 && (\r\n            <Row>\r\n              <Col className=\"d-flex\">\r\n                <WhiteboardPagination\r\n                  whiteboardPageNumber={whiteboardPageNumber}\r\n                  numberOfWhiteboards={numberOfWhiteboards}\r\n                  onPageNumberClick={onPageNumberClick}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default WhiteboardContainer;\r\n","/* eslint-disable import/prefer-default-export */\r\n\r\nconst getRatioDimensions = (displayAspectRatio: string, element: HTMLElement): [number, number] => {\r\n  const [widthSplit, heightSplit] = displayAspectRatio.split(':');\r\n  const width = parseInt(widthSplit, 10);\r\n  const height = parseInt(heightSplit, 10);\r\n\r\n  const ratioWidthHeight = width / height;\r\n  const ratioHeightWidth = height / width;\r\n\r\n  const containerWidth = element.offsetWidth;\r\n  const containerHeight = element.offsetHeight;\r\n\r\n  if (containerHeight * ratioWidthHeight <= containerWidth) {\r\n    return [containerHeight * ratioWidthHeight, containerHeight];\r\n  }\r\n\r\n  return [containerWidth, containerWidth * ratioHeightWidth];\r\n};\r\n\r\nexport default getRatioDimensions;\r\n","import { useRef, useEffect, useCallback } from 'react';\r\nimport { Tldraw, TldrawApp, ColorStyle } from '@krapi0314/tldraw';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport type { Video } from './Video';\r\nimport type { VideoBookmark } from './VideoBookmark';\r\n\r\ntype Props = {\r\n  playing: boolean;\r\n  onMount: (app: TldrawApp) => void;\r\n  scale: number;\r\n  video: Video;\r\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\r\n  videoBookmark: VideoBookmark | null;\r\n};\r\n\r\nconst Drawing = ({ playing, onMount, scale, video, setVideo, videoBookmark }: Props) => {\r\n  const tlDrawRef = useRef<TldrawApp | null>(null);\r\n  const outerRef = useRef(null);\r\n\r\n  const setVideoBookmarkDrawing = (video: Video, bookmark: VideoBookmark, drawing: object) => {\r\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\r\n      return innerBookmark.id === bookmark.id;\r\n    });\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, drawing: drawing } : el)),\r\n    }));\r\n    if (videoBookmark) {\r\n      videoBookmark.drawing = drawing;\r\n    }\r\n  };\r\n\r\n  function handleMount(app: TldrawApp) {\r\n    tlDrawRef.current = app;\r\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_mounted');\r\n    tlDrawRef.current.style({ color: ColorStyle.Red });\r\n    onMount(app);\r\n  }\r\n\r\n  function handlePersist(app: TldrawApp) {\r\n    if (videoBookmark === null || playing === true) {\r\n      return;\r\n    }\r\n\r\n    setVideoBookmarkDrawing(video, videoBookmark, app.document);\r\n  }\r\n\r\n  const clearDrawing = useCallback(() => {\r\n    if (tlDrawRef.current === null) {\r\n      return;\r\n    }\r\n\r\n    const tool = tlDrawRef.current.useStore.getState().appState.activeTool;\r\n    tlDrawRef.current.deleteAll();\r\n    tlDrawRef.current.selectTool(tool);\r\n    tlDrawRef.current.toggleToolLock();\r\n  }, []);\r\n\r\n  const rescaleDrawing = useCallback(() => {\r\n    if (tlDrawRef.current === null) {\r\n      return;\r\n    }\r\n\r\n    tlDrawRef.current.setCamera([0, 0], scale, 'layout_resized');\r\n  }, [scale]);\r\n\r\n  useEffect(() => {\r\n    rescaleDrawing();\r\n  }, [scale, rescaleDrawing]);\r\n\r\n  useEffect(() => {\r\n    if (tlDrawRef.current === null) {\r\n      return;\r\n    }\r\n\r\n    if (videoBookmark?.drawing && videoBookmark.drawing) {\r\n      tlDrawRef.current.loadDocument(JSON.parse(JSON.stringify(videoBookmark.drawing)));\r\n\r\n      tlDrawRef.current.selectNone();\r\n      rescaleDrawing();\r\n    } else {\r\n      clearDrawing();\r\n    }\r\n  }, [clearDrawing, rescaleDrawing, videoBookmark]);\r\n\r\n  useEffect(() => {\r\n    if (tlDrawRef.current === null) {\r\n      return;\r\n    }\r\n\r\n    if (playing === true) {\r\n      clearDrawing();\r\n    }\r\n  }, [playing, clearDrawing]);\r\n\r\n  return (\r\n    <Box position=\"absolute\" top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" ref={outerRef}>\r\n      <Tldraw\r\n        // @ts-ignore\r\n        onMount={(app: TldrawApp) => handleMount(app)}\r\n        onPersist={(app: TldrawApp) => handlePersist(app)}\r\n        showUI={false}\r\n        style=\"{background-color: transparent !important}\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Drawing;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { Flex, Box, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\r\n\r\nimport { TldrawApp, ColorStyle } from '@krapi0314/tldraw';\r\n\r\ntype PropsType = {\r\n  app: TldrawApp;\r\n};\r\n\r\nconst colors = {\r\n  [ColorStyle.White]: '#f0f1f3',\r\n  [ColorStyle.LightGray]: '#c6cbd1',\r\n  [ColorStyle.Gray]: '#788492',\r\n  [ColorStyle.Black]: '#1d1d1d',\r\n  [ColorStyle.Green]: '#36b24d',\r\n  [ColorStyle.Cyan]: '#0e98ad',\r\n  [ColorStyle.Blue]: '#1c7ed6',\r\n  [ColorStyle.Indigo]: '#4263eb',\r\n  [ColorStyle.Violet]: '#7746f1',\r\n  [ColorStyle.Red]: '#ff2133',\r\n  [ColorStyle.Orange]: '#ff9433',\r\n  [ColorStyle.Yellow]: '#ffc936',\r\n};\r\n\r\nconst DrawingControlsColorSelector = ({ app }: PropsType) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\r\n\r\n  const handleColourPick = useCallback(\r\n    (color: ColorStyle) => {\r\n      app.style({ color });\r\n      setIsOpen(false);\r\n    },\r\n    [app]\r\n  );\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const swatchesData = Object.entries(colors) as Array<[ColorStyle, string]>;\r\n\r\n  const renderedSwatches = swatchesData.map(([key, value]) => {\r\n    return (\r\n      <Box\r\n        mx={1}\r\n        my={1}\r\n        key={key}\r\n        width=\"1.5rem\"\r\n        height=\"1.5rem\"\r\n        backgroundColor={value}\r\n        cursor=\"pointer\"\r\n        onClick={() => handleColourPick(key)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n      <PopoverTrigger>\r\n        <Box\r\n          width=\"2rem\"\r\n          height=\"2rem\"\r\n          // @ts-ignore\r\n          bgColor={colors[currentStyle.color]}\r\n          cursor=\"pointer\"\r\n          onClick={handleOpen}\r\n        />\r\n      </PopoverTrigger>\r\n      <PopoverContent width={`${swatchesData.length * 2}rem`}>\r\n        <PopoverArrow />\r\n        <PopoverBody backgroundColor=\"black\">\r\n          <Flex my={-1} mx={-1}>\r\n            {renderedSwatches}\r\n          </Flex>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default DrawingControlsColorSelector;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { Flex, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow } from '@chakra-ui/react';\r\nimport { TldrawApp, SizeStyle } from '@krapi0314/tldraw';\r\n\r\ntype PropsType = {\r\n  app: TldrawApp;\r\n};\r\n\r\nconst sizes = {\r\n  [SizeStyle.Small]: 'S',\r\n  [SizeStyle.Medium]: 'M',\r\n  [SizeStyle.Large]: 'L',\r\n};\r\n\r\nconst DrawingControlsSizeSelector = ({ app }: PropsType) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\r\n\r\n  const handleSizePick = useCallback(\r\n    (size: SizeStyle) => {\r\n      app.style({ size });\r\n      setIsOpen(false);\r\n    },\r\n    [app]\r\n  );\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const sizesData = Object.entries(sizes) as Array<[SizeStyle, string]>;\r\n\r\n  const renderedSwatches = sizesData.map(([key, value]) => {\r\n    return (\r\n      <Flex\r\n        mx={1}\r\n        my={1}\r\n        key={key}\r\n        width=\"1.5rem\"\r\n        height=\"1.5rem\"\r\n        cursor=\"pointer\"\r\n        onClick={() => handleSizePick(key)}\r\n        align=\"center\"\r\n        justify=\"center\"\r\n        border=\"1px\"\r\n        borderColor=\"whiteAlpha.400\"\r\n        background=\"whiteAlpha.200\"\r\n        padding=\"1rem\"\r\n      >\r\n        {value}\r\n      </Flex>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n      <PopoverTrigger>\r\n        <Flex\r\n          width=\"2rem\"\r\n          height=\"2rem\"\r\n          cursor=\"pointer\"\r\n          background=\"black\"\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          border=\"1px\"\r\n          borderColor=\"whiteAlpha.400\"\r\n          onClick={handleOpen}\r\n        >\r\n          {\r\n            // @ts-ignore\r\n            sizes[currentStyle.size].slice(0, 1).toUpperCase()\r\n          }\r\n        </Flex>\r\n      </PopoverTrigger>\r\n      <PopoverContent width={`${sizesData.length * 3}rem`}>\r\n        <PopoverArrow />\r\n        <PopoverBody backgroundColor=\"black\">\r\n          <Flex my={-1} mx={-1}>\r\n            {renderedSwatches}\r\n          </Flex>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default DrawingControlsSizeSelector;\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Flex,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Tooltip,\r\n  Box,\r\n} from '@chakra-ui/react';\r\n\r\nimport { TldrawApp, DashStyle } from '@krapi0314/tldraw';\r\n\r\nimport {\r\n  Circle as CircleIcon,\r\n  SquaresFilled as SquaresFilledIcon,\r\n  CircleDashed as CircleDashedIcon,\r\n  CircleDotted as CircleDottedIcon,\r\n} from 'tabler-icons-react';\r\n\r\ntype PropsType = {\r\n  app: TldrawApp;\r\n};\r\n\r\nconst dashes = {\r\n  [DashStyle.Draw]: [<CircleIcon />, 'Line'],\r\n  [DashStyle.Solid]: [<SquaresFilledIcon />, 'Filled'],\r\n  [DashStyle.Dashed]: [<CircleDashedIcon />, 'Dashed'],\r\n  [DashStyle.Dotted]: [<CircleDottedIcon />, 'Dotted'],\r\n};\r\n\r\nexport default function DrawingControlsStyleSelector({ app }: PropsType) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const currentStyle = app.useStore((s) => s.appState.currentStyle);\r\n\r\n  const handleSizePick = React.useCallback(\r\n    (dash: DashStyle) => {\r\n      app.style({ dash });\r\n      setIsOpen(false);\r\n    },\r\n    [app]\r\n  );\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const sizesData = Object.entries(dashes) as Array<[DashStyle, [JSX.Element, string]]>;\r\n\r\n  const renderedSwatches = sizesData\r\n    .filter(([key]) => {\r\n      return key !== DashStyle.Solid;\r\n    })\r\n    .map(([key, [icon, label]]) => {\r\n      return (\r\n        <Flex\r\n          mx={1}\r\n          my={1}\r\n          key={key}\r\n          width=\"3rem\"\r\n          height=\"2.5rem\"\r\n          cursor=\"pointer\"\r\n          onClick={() => handleSizePick(key)}\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          border=\"1px\"\r\n          borderColor=\"whiteAlpha.400\"\r\n          background=\"whiteAlpha.200\"\r\n          boxSizing=\"border-box\"\r\n        >\r\n          <Tooltip label={label}>\r\n            <Box>{icon}</Box>\r\n          </Tooltip>\r\n        </Flex>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <Popover placement=\"right\" isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n      <PopoverTrigger>\r\n        <Flex\r\n          width=\"2rem\"\r\n          height=\"2rem\"\r\n          cursor=\"pointer\"\r\n          background=\"black\"\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          border=\"1px\"\r\n          borderColor=\"whiteAlpha.400\"\r\n          onClick={handleOpen}\r\n        >\r\n          {\r\n            // @ts-ignore\r\n            dashes[currentStyle.dash][0]\r\n          }\r\n        </Flex>\r\n      </PopoverTrigger>\r\n      <PopoverContent width={`${sizesData.length * 2.5}rem`}>\r\n        <PopoverArrow />\r\n        <PopoverBody backgroundColor=\"black\">\r\n          <Flex my={-1} mx={-1}>\r\n            {renderedSwatches}\r\n          </Flex>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\n\r\nimport { Flex, Box, VStack, IconButton, Tooltip } from '@chakra-ui/react';\r\nimport { TDShapeType, TDToolType, TldrawApp } from '@krapi0314/tldraw';\r\nimport {\r\n  Click as ClickIcon,\r\n  Pencil as PencilIcon,\r\n  ArrowUpRight as ArrowUpRightIcon,\r\n  Rectangle as RectangleIcon,\r\n  Circle as CircleIcon,\r\n  Trash as TrashIcon,\r\n} from 'tabler-icons-react';\r\n\r\nimport DrawingControlsColorSelector from './DrawingControlsColorSelector';\r\nimport DrawingControlsSizeSelector from './DrawingControlsSizeSelector';\r\nimport DrawingControlsDashSelector from './DrawingControlsDashSelector';\r\n\r\ntype PropsType = {\r\n  app: TldrawApp;\r\n};\r\n\r\nconst selectedStyle = css`\r\n  opacity: 1;\r\n`;\r\n\r\nconst unSelectedStyle = css`\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst DrawingControls = ({ app }: PropsType) => {\r\n  const activeTool = app.useStore((s) => s.appState.activeTool);\r\n\r\n  const selectTool = React.useCallback(\r\n    (type: TDToolType) => {\r\n      app.selectTool(type);\r\n      app.toggleToolLock();\r\n    },\r\n    [app]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <VStack spacing={4}>\r\n          <Tooltip label=\"Select\" aria-label=\"Select\">\r\n            <IconButton\r\n              icon={<ClickIcon />}\r\n              aria-label=\"Select\"\r\n              css={activeTool === 'select' ? selectedStyle : unSelectedStyle}\r\n              onClick={() => selectTool('select')}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip label=\"Pencil\" aria-label=\"Pencil\">\r\n            <IconButton\r\n              icon={<PencilIcon />}\r\n              aria-label=\"Pencil\"\r\n              css={activeTool === TDShapeType.Draw ? selectedStyle : unSelectedStyle}\r\n              onClick={() => selectTool(TDShapeType.Draw)}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip label=\"Arrow\" aria-label=\"Arrow\">\r\n            <IconButton\r\n              icon={<ArrowUpRightIcon />}\r\n              aria-label=\"Arrow\"\r\n              css={activeTool === TDShapeType.Arrow ? selectedStyle : unSelectedStyle}\r\n              onClick={() => selectTool(TDShapeType.Arrow)}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip label=\"Rectangle\" aria-label=\"Rectangle\">\r\n            <IconButton\r\n              icon={<RectangleIcon />}\r\n              aria-label=\"Rectangle\"\r\n              css={activeTool === TDShapeType.Rectangle ? selectedStyle : unSelectedStyle}\r\n              onClick={() => selectTool(TDShapeType.Rectangle)}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip label=\"Ellipse\" aria-label=\"Ellipse\">\r\n            <IconButton\r\n              icon={<CircleIcon />}\r\n              aria-label=\"Ellipse\"\r\n              css={activeTool === TDShapeType.Ellipse ? selectedStyle : unSelectedStyle}\r\n              onClick={() => selectTool(TDShapeType.Ellipse)}\r\n            />\r\n          </Tooltip>\r\n        </VStack>\r\n      </Box>\r\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\r\n        <Box>\r\n          <Box>\r\n            <DrawingControlsColorSelector app={app} />\r\n          </Box>\r\n          <Box mt={4}>\r\n            <DrawingControlsSizeSelector app={app} />\r\n          </Box>\r\n          <Box mt={4}>\r\n            <DrawingControlsDashSelector app={app} />\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n      <Flex mt={4} pt={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\" justify=\"center\">\r\n        <Box>\r\n          <IconButton icon={<TrashIcon />} aria-label=\"Arrow\" css={selectedStyle} onClick={() => app.deleteAll()} />\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrawingControls;\r\n","import { useState, useCallback } from 'react';\r\nimport { usePopper } from 'react-popper';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\nimport { Box, Flex, FormControl, FormLabel, Textarea } from '@chakra-ui/react';\r\nimport data from '@emoji-mart/data';\r\nimport Picker from '@emoji-mart/react';\r\n\r\nimport type { VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\r\n\r\ntype Props = {\r\n  bookmark: VideoBookmark;\r\n  onChangeContent: (content: string) => void;\r\n  onChangeIcon: (details: VideoBookmarkIcon) => void;\r\n  currentEmoji: string;\r\n};\r\n\r\nexport default function VideoBookmarkEditor({ bookmark, onChangeContent, onChangeIcon, currentEmoji }: Props) {\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState<boolean>(false);\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null);\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null);\r\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: 'left',\r\n    modifiers: [\r\n      {\r\n        name: 'offset',\r\n        options: {\r\n          offset: [20, 20],\r\n        },\r\n      },\r\n      {\r\n        name: 'flip',\r\n        options: {\r\n          fallbackPlacements: ['top', 'left', 'bottom', 'right'],\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const handleEmojiPicked = useCallback(\r\n    (details) => {\r\n      setShowEmojiPicker(false);\r\n      onChangeIcon(details);\r\n    },\r\n    [onChangeIcon]\r\n  );\r\n\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      setShowEmojiPicker(false);\r\n    },\r\n    {},\r\n    [setShowEmojiPicker]\r\n  );\r\n\r\n  return (\r\n    <form>\r\n      <FormControl mb={4}>\r\n        <FormLabel>Icon</FormLabel>\r\n\r\n        <Flex\r\n          align=\"center\"\r\n          bgColor=\"gray.800\"\r\n          height=\"10\"\r\n          justify=\"center\"\r\n          rounded=\"xl\"\r\n          width=\"10\"\r\n          fontSize=\"lg\"\r\n          cursor=\"pointer\"\r\n          ref={setReferenceElement}\r\n          onClick={() => {\r\n            setShowEmojiPicker(!showEmojiPicker);\r\n          }}\r\n        >\r\n          {currentEmoji}\r\n        </Flex>\r\n        {showEmojiPicker && (\r\n          <Box\r\n            ref={setPopperElement}\r\n            zIndex=\"1\"\r\n            style={styles.popper}\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n            {...attributes.popper}\r\n          >\r\n            <Picker data={data} onEmojiSelect={(details: VideoBookmarkIcon) => handleEmojiPicked(details)} />\r\n          </Box>\r\n        )}\r\n      </FormControl>\r\n      <FormControl>\r\n        <FormLabel>Description</FormLabel>\r\n        <Textarea\r\n          value={bookmark.content}\r\n          onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n            onChangeContent(event.target.value);\r\n          }}\r\n          autoFocus\r\n        />\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport { FormInput } from '../form';\r\nimport { useChatForm } from './hooks';\r\nimport { CreateCommentRecordButton } from '../';\r\n\r\nconst ChatForm = () => {\r\n  return (\r\n    <form name=\"chat-form\" id=\"chat-form\" className=\"needs-validation m-3\">\r\n      <Row>\r\n        <CreateCommentRecordButton />\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport classNames from 'classnames';\r\nimport { useChatList } from './hooks';\r\nimport { useMoment } from '../../pages/docs/hooks';\r\nimport ChatForm from './ChatForm';\r\nimport { CardTitle } from 'components';\r\nimport type { Comment } from '../VideoPlayer/Comment';\r\n\r\nexport type Message = {\r\n  id: number;\r\n  userPic?: string;\r\n  userName: string;\r\n  text: string;\r\n  postedOn: string;\r\n};\r\n\r\n/* Chat Item */\r\nconst ChatItemAvatar = ({ userAvatar, postedOn }: { userAvatar: string; postedOn: string }) => {\r\n  const { getTimeFromNow } = useMoment();\r\n\r\n  return (\r\n    <div className=\"chat-avatar\">\r\n      <img src={userAvatar} alt={userAvatar} />\r\n      <i>{getTimeFromNow(postedOn)}</i>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatItemVideo = ({\r\n  userName,\r\n  videoUrl,\r\n  index,\r\n  playIndex,\r\n  onEnded,\r\n}: {\r\n  userName: string;\r\n  videoUrl: string;\r\n  index: number;\r\n  playIndex: number;\r\n  onEnded: (index: number) => void;\r\n}) => {\r\n  return (\r\n    <div className=\"conversation-text\">\r\n      <div className=\"ctext-wrap\">\r\n        <i>{userName}</i>\r\n        <video\r\n          src={videoUrl}\r\n          autoPlay={playIndex === index ? true : false}\r\n          width=\"200px\"\r\n          height=\"150px\"\r\n          onEnded={() => onEnded(index + 1)}\r\n          controls={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatItem = ({\r\n  children,\r\n  placement,\r\n  className,\r\n}: {\r\n  children: React.ReactNode;\r\n  placement: string;\r\n  className?: string;\r\n}) => {\r\n  return <li className={classNames('clearfix', { odd: placement === 'left' }, className)}>{children}</li>;\r\n};\r\n\r\n/**\r\n * ChatList\r\n */\r\ntype ChatListProps = {\r\n  className?: string;\r\n  chatMessages: Comment[];\r\n};\r\n\r\nconst ChatList = ({ chatMessages, className }: ChatListProps) => {\r\n  const { messages } = useChatList(chatMessages);\r\n  const [playIndex, setPlayIndex] = useState<number>(0);\r\n\r\n  const playNextVideo = (index: number) => {\r\n    setPlayIndex(index);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-0 bg-transparent\">\r\n      <Card.Body className=\"p-0\">\r\n        <div className=\"px-3 pt-3\">\r\n          <CardTitle\r\n            containerClass=\"d-flex align-items-center justify-content-between mb-2\"\r\n            title=\"Thread\"\r\n            menuItems={[{ label: 'Refresh' }, { label: 'Settings' }]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"chat-conversation\">\r\n          {/* chat messages */}\r\n          <SimpleBar style={{ maxHeight: '322px', width: '100%' }}>\r\n            <ul className={classNames('conversation-list', className, 'px-3')}>\r\n              {(messages || []).map((message, index) => {\r\n                return (\r\n                  <ChatItem key={index.toString()} placement={index > 0 ? (index % 2 === 0 ? '' : 'left') : 'right'}>\r\n                    {message.profileImageUrl && (\r\n                      <ChatItemAvatar userAvatar={message.profileImageUrl} postedOn={message.createdDate} />\r\n                    )}\r\n                    <ChatItemVideo\r\n                      key={playIndex}\r\n                      userName={message.author}\r\n                      videoUrl={message.commentFileUrl}\r\n                      index={index}\r\n                      playIndex={playIndex}\r\n                      onEnded={playNextVideo}\r\n                    />\r\n                  </ChatItem>\r\n                );\r\n              })}\r\n            </ul>\r\n          </SimpleBar>\r\n\r\n          {/* chat form */}\r\n          <ChatForm />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { ChatList };\r\n","import { useState } from 'react';\r\nimport type { Comment } from '../../VideoPlayer/Comment';\r\n\r\nexport default function useChatList(chatMessages: Comment[]) {\r\n  const [messages, setMessages] = useState<Comment[]>(chatMessages);\r\n\r\n  /**\r\n   * Handle new message posted\r\n   */\r\n  const handleNewMessagePosted = (comment: Comment) => {\r\n    setMessages(messages.concat(comment));\r\n  };\r\n\r\n  return {\r\n    messages,\r\n    handleNewMessagePosted,\r\n  };\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { Box, Flex, Button, ButtonGroup, Text, Spacer, IconButton } from '@chakra-ui/react';\r\nimport Draggable from 'react-draggable'; // The default\r\n\r\nimport { updateBookmark as updateBookmarkAPI, deleteBookmark as deleteBookmarkAPI } from 'helpers';\r\n\r\nimport VideoBookmarkForm from './VideoBookmarkForm';\r\n\r\nimport type { Video } from './Video';\r\nimport type { VideoBookmark, VideoBookmarkCoordinates, VideoBookmarkIcon } from './VideoBookmark';\r\nimport type { Comment } from './Comment';\r\nimport { ChatList } from 'components/ChatList';\r\n\r\ntype Props = {\r\n  bookmark: VideoBookmark | null;\r\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\r\n  scale: number;\r\n  video: Video;\r\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\r\n  playing: boolean;\r\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\r\n  editingBookmark: boolean;\r\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\r\n  comments: Comment[];\r\n};\r\n\r\nconst dragHandleStyles = css`\r\n  cursor: move;\r\n  height: 2rem;\r\n  background: repeating-linear-gradient(\r\n    45deg,\r\n    rgba(255, 255, 255, 0.05),\r\n    rgba(255, 255, 255, 0.05) 10px,\r\n    rgba(255, 255, 255, 0.1) 10px,\r\n    rgba(255, 255, 255, 0.1) 20px\r\n  );\r\n`;\r\n\r\nexport default function VideoBookmarkShow({\r\n  video,\r\n  bookmark,\r\n  setActiveBookmark,\r\n  scale,\r\n  playing,\r\n  editingBookmark,\r\n  setEditingBookmark,\r\n  setVideo,\r\n  comments,\r\n}: Props) {\r\n  if (playing === true) {\r\n    return null;\r\n  }\r\n\r\n  if (!bookmark) {\r\n    return null;\r\n  }\r\n\r\n  const [currentEmoji, setCurrentEmoji] = useState<string>(bookmark.icon);\r\n\r\n  const handleDelete = () => {\r\n    if (bookmark) {\r\n      deleteVideoBookmark();\r\n    }\r\n    setEditingBookmark(false);\r\n    setActiveBookmark(null);\r\n  };\r\n\r\n  const deleteVideoBookmark = () => {\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: prevState.bookmarks.filter((innerBookmark) => {\r\n        return bookmark.id !== innerBookmark.id;\r\n      }),\r\n    }));\r\n    deleteBookmarkAPI(parseInt(bookmark.id));\r\n  };\r\n\r\n  const setVideoBookmarkCoords = (coords: VideoBookmarkCoordinates) => {\r\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\r\n      return innerBookmark.id === bookmark.id;\r\n    });\r\n\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: prevState.bookmarks.map((el, idx) =>\r\n        idx === bookmarkIndex ? { ...el, position: { x: coords.x, y: coords.y }, scale: scale } : el\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const setVideoBookmarkContent = (content: string) => {\r\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\r\n      return innerBookmark.id === bookmark.id;\r\n    });\r\n\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, content: content } : el)),\r\n    }));\r\n\r\n    video.bookmarks[bookmarkIndex].content = content;\r\n    bookmark.content = content;\r\n  };\r\n\r\n  const setVideoBookmarkIcon = (icon: VideoBookmarkIcon) => {\r\n    const bookmarkIndex = video.bookmarks.findIndex((innerBookmark) => {\r\n      return innerBookmark.id === bookmark.id;\r\n    });\r\n    let hex = '';\r\n    if (icon.native.codePointAt(0) !== undefined) {\r\n      hex = icon.native.codePointAt(0)!.toString(16);\r\n    }\r\n    const iconString = String.fromCodePoint(parseInt('0x' + hex));\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: prevState.bookmarks.map((el, idx) => (idx === bookmarkIndex ? { ...el, icon: iconString } : el)),\r\n    }));\r\n    bookmark.icon = iconString;\r\n    setCurrentEmoji(iconString);\r\n  };\r\n\r\n  const offset = scale / bookmark.scale;\r\n\r\n  const position = bookmark.position ? { x: bookmark.position.x * offset, y: bookmark.position.y * offset } : undefined;\r\n\r\n  const renderedContent = (() => {\r\n    if (editingBookmark === true) {\r\n      return (\r\n        <VideoBookmarkForm\r\n          onChangeContent={(content) => setVideoBookmarkContent(content)}\r\n          onChangeIcon={(details) => setVideoBookmarkIcon(details)}\r\n          bookmark={bookmark}\r\n          currentEmoji={currentEmoji}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4>Bookmark</h4>\r\n        <Text style={{ whiteSpace: 'pre-wrap' }}>\r\n          {bookmark.icon} {bookmark.content}\r\n        </Text>\r\n      </div>\r\n    );\r\n  })();\r\n\r\n  const renderedPositiveAction = editingBookmark ? (\r\n    <Button\r\n      onClick={() => {\r\n        setEditingBookmark(false);\r\n        let hex = '';\r\n        if (bookmark.icon.codePointAt(0) !== undefined) {\r\n          hex = bookmark.icon.codePointAt(0)!.toString(16);\r\n        }\r\n        const emoji = hex;\r\n        const content = bookmark.content;\r\n        const time = bookmark.time;\r\n        const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\r\n        const drawing = JSON.stringify(bookmark.drawing);\r\n        const scale = bookmark.scale;\r\n        const author = bookmark.author;\r\n        updateBookmarkAPI(parseInt(bookmark.id), { emoji, content, time, position, drawing, scale, author });\r\n      }}\r\n    >\r\n      Done\r\n    </Button>\r\n  ) : (\r\n    <Button onClick={() => setEditingBookmark(true)}>Edit</Button>\r\n  );\r\n\r\n  return (\r\n    <Flex\r\n      position=\"absolute\"\r\n      left={0}\r\n      top={0}\r\n      right={0}\r\n      bottom={0}\r\n      align=\"flex-end\"\r\n      justify=\"flex-end\"\r\n      padding=\"4\"\r\n      pointerEvents=\"none\"\r\n      zIndex={3}\r\n    >\r\n      <Draggable\r\n        key={bookmark.id}\r\n        onStop={(_event, data) => setVideoBookmarkCoords({ x: data.x, y: data.y })}\r\n        bounds=\"parent\"\r\n        handle=\"#dragHandle\"\r\n        position={position}\r\n      >\r\n        <Box pointerEvents=\"all\" background=\"blackAlpha.900\" width=\"md\">\r\n          <Box id=\"dragHandle\" css={dragHandleStyles} />\r\n          {renderedContent && (\r\n            <Box padding=\"4\" borderBottom=\"1px\" borderColor=\"whiteAlpha.500\">\r\n              {renderedContent}\r\n            </Box>\r\n          )}\r\n          <ChatList chatMessages={comments}></ChatList>\r\n\r\n          <Flex padding=\"4\">\r\n            <Spacer />\r\n            <ButtonGroup size=\"sm\">\r\n              <Button onClick={() => handleDelete()} colorScheme=\"red\">\r\n                Delete\r\n              </Button>\r\n              {renderedPositiveAction}\r\n            </ButtonGroup>\r\n            <Spacer />\r\n          </Flex>\r\n        </Box>\r\n      </Draggable>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Text } from '@chakra-ui/react';\r\n\r\ntype Props = {\r\n  currentTime: number;\r\n  fullDuration: number;\r\n};\r\n\r\nconst secondsToHms = (input: number) => {\r\n  const hours = Math.floor(input / 3600);\r\n  const minutes = Math.floor(input / 60) % 60;\r\n  const seconds = input % 60;\r\n\r\n  return [hours, minutes, seconds]\r\n    .map((v) => (v < 10 ? `0${v}` : v))\r\n    .filter((v, i) => v !== '00' || i > 0)\r\n    .join(':');\r\n};\r\n\r\nconst TimeDisplay = ({ currentTime, fullDuration }: Props) => {\r\n  return (\r\n    <Text whiteSpace=\"nowrap\" fontSize=\"sm\" align=\"center\" my=\"auto\" mb=\"1\">\r\n      {secondsToHms(Math.round(currentTime))} / {secondsToHms(Math.round(fullDuration))}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import { Box, Tooltip } from '@chakra-ui/react';\r\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\r\n\r\nimport type { Video } from './Video';\r\nimport type { VideoBookmark } from './VideoBookmark';\r\n\r\ntype Props = {\r\n  bookmark: VideoBookmark;\r\n  video: Video;\r\n  size: 'small' | 'medium';\r\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\r\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\r\n  pauseVideo: () => void;\r\n};\r\n\r\nexport default function VideoBookmarkTimeline({\r\n  video,\r\n  bookmark,\r\n  size = 'medium',\r\n  setCurrentTime,\r\n  setActiveBookmark,\r\n  pauseVideo,\r\n}: Props) {\r\n  function truncateString(str: string, n: number) {\r\n    if (str.length > n) {\r\n      return `${str.substring(0, n)}...`;\r\n    }\r\n    return str;\r\n  }\r\n\r\n  function handleGoto() {\r\n    pauseVideo();\r\n    setCurrentTime(bookmark.time);\r\n    video.el.currentTime = bookmark.time;\r\n    setActiveBookmark(bookmark);\r\n    sessionStorage.setItem('currentBookmarkId', bookmark.id);\r\n  }\r\n\r\n  const renderedIcon = (() => {\r\n    if (bookmark.icon) {\r\n      return bookmark.icon;\r\n    }\r\n\r\n    return <BookmarkIcon size={size === 'medium' ? 25 : 20} color={size === 'medium' ? '#eee' : '#999'} />;\r\n  })();\r\n\r\n  return (\r\n    <Tooltip label={`${bookmark.author}: ${truncateString(bookmark.content, 50)}`}>\r\n      <Box onClick={() => handleGoto()} cursor=\"pointer\">\r\n        {renderedIcon}\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { useRef, useState, useLayoutEffect, useEffect } from 'react';\r\nimport { Box, Flex, Slider, SliderFilledTrack, SliderThumb, SliderTrack } from '@chakra-ui/react';\r\n\r\nimport VideoBookmarkTimeline from './VideoBookmarkTimeline';\r\n\r\nimport type { Video } from './Video';\r\nimport type { VideoBookmark } from './VideoBookmark';\r\n\r\ntype Props = {\r\n  video: Video;\r\n  fullDuration: number;\r\n  currentTime: number;\r\n  setCurrentTime: React.Dispatch<React.SetStateAction<number>>;\r\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\r\n  pauseVideo: () => void;\r\n  camVideoRef: React.MutableRefObject<HTMLVideoElement | null>;\r\n};\r\n\r\nconst TimeControl = ({\r\n  video,\r\n  fullDuration,\r\n  currentTime,\r\n  setCurrentTime,\r\n  setActiveBookmark,\r\n  pauseVideo,\r\n  camVideoRef,\r\n}: Props) => {\r\n  const trackRef = useRef<HTMLDivElement | null>(null);\r\n  const [renderedCurrentBookmarks, setRenderedCurrentBookmarks] = useState<JSX.Element[]>([]);\r\n  const [trackDimensions, setTrackDimensions] = useState<DOMRect | null>(null); // tracks the dimensions of the track as it's resized\r\n\r\n  const handleSliderChange = (time: number) => {\r\n    setCurrentTime(time);\r\n    video.el.currentTime = time;\r\n    camVideoRef.current!.currentTime = time;\r\n  };\r\n\r\n  const setBookmarkButtons = () => {\r\n    setRenderedCurrentBookmarks(\r\n      trackDimensions === null || fullDuration === 0\r\n        ? []\r\n        : video.bookmarks.map((bookmark) => {\r\n            const percentage = bookmark.time / fullDuration;\r\n            const left = trackDimensions.width * percentage;\r\n            return (\r\n              <Flex\r\n                key={bookmark.id}\r\n                bgColor=\"gray.800\"\r\n                position=\"absolute\"\r\n                width=\"2rem\"\r\n                height=\"2rem\"\r\n                align=\"center\"\r\n                justify=\"center\"\r\n                top=\"-7px\"\r\n                left={`calc(${left}px - 1rem)`}\r\n                rounded=\"full\"\r\n                zIndex=\"1\">\r\n                <VideoBookmarkTimeline\r\n                  video={video}\r\n                  bookmark={bookmark}\r\n                  size=\"medium\"\r\n                  setCurrentTime={setCurrentTime}\r\n                  setActiveBookmark={setActiveBookmark}\r\n                  pauseVideo={pauseVideo}\r\n                />\r\n              </Flex>\r\n            );\r\n          })\r\n    );\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    function handleResize() {\r\n      if (trackRef.current === null) {\r\n        return;\r\n      }\r\n      setTrackDimensions(trackRef.current.getBoundingClientRect());\r\n      setBookmarkButtons();\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (trackRef.current) {\r\n      if (\r\n        trackDimensions === null ||\r\n        trackRef.current.getBoundingClientRect().width < (trackDimensions as DOMRect).width\r\n      )\r\n        setTrackDimensions(trackRef.current.getBoundingClientRect());\r\n    }\r\n    setBookmarkButtons();\r\n  }, [video.bookmarks, fullDuration, trackDimensions]);\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      {renderedCurrentBookmarks}\r\n\r\n      <Slider\r\n        aria-label=\"Time control\"\r\n        focusThumbOnChange={false}\r\n        key=\"playing\"\r\n        max={fullDuration}\r\n        min={0}\r\n        top=\"1px\"\r\n        onChange={(value: number) => handleSliderChange(value)}\r\n        step={1 / video.frameRate}\r\n        value={currentTime}>\r\n        <SliderTrack className=\"track\" ref={trackRef}>\r\n          <SliderFilledTrack />\r\n        </SliderTrack>\r\n        <SliderThumb />\r\n      </Slider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TimeControl;\r\n","import { Box, Flex, SliderTrack, Slider, SliderFilledTrack, SliderThumb } from '@chakra-ui/react';\r\n\r\nimport { Volume as VolumeIcon } from 'tabler-icons-react';\r\n\r\nimport type { Video } from './Video';\r\n\r\ntype Props = {\r\n  video: Video;\r\n  setCurrentVolume: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\nexport default function VideoVolume({ video, setCurrentVolume }: Props) {\r\n  function handleSliderChange(value: number) {\r\n    setCurrentVolume(value);\r\n    video.el.volume = value;\r\n  }\r\n\r\n  return (\r\n    <Flex align=\"center\" width=\"7rem\">\r\n      <Box mb={1}>\r\n        <VolumeIcon />\r\n      </Box>\r\n      <Slider\r\n        key=\"playing\"\r\n        aria-label=\"Video volume control\"\r\n        value={video.el.volume}\r\n        min={0}\r\n        max={1}\r\n        onChange={(value: number) => handleSliderChange(value)}\r\n        step={0.01}\r\n        focusThumbOnChange={false}\r\n        ml={2}\r\n        mb={1}\r\n      >\r\n        <SliderTrack>\r\n          <SliderFilledTrack />\r\n        </SliderTrack>\r\n        <SliderThumb />\r\n      </Slider>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Video } from './Video';\r\nimport { APICore } from 'helpers/api/apiCore';\r\nimport type { Comment } from './Comment';\r\n\r\nconst api = new APICore();\r\nconst user = api.getLoggedInUser();\r\n\r\nexport type VideoBookmarkIcon = {\r\n  native: string;\r\n};\r\n\r\nexport type VideoBookmarkCoordinates = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport type VideoBookmark = {\r\n  id: string;\r\n  author: string;\r\n  icon: string;\r\n  content: string;\r\n  time: number;\r\n  position: VideoBookmarkCoordinates | null;\r\n  drawing: object | null;\r\n  scale: number;\r\n  video_id: string;\r\n  comments: Comment[];\r\n};\r\n\r\nexport function create(\r\n  video: Video,\r\n  icon: string,\r\n  content: string,\r\n  time: number,\r\n  scale: number,\r\n  drawing: object\r\n): VideoBookmark {\r\n  return {\r\n    content,\r\n    drawing: JSON.parse(JSON.stringify(drawing)),\r\n    id: '',\r\n    icon: icon,\r\n    position: null,\r\n    scale,\r\n    time,\r\n    video_id: video.id,\r\n    author: user.fullname,\r\n    comments: [],\r\n  };\r\n}\r\n","import { TldrawApp } from '@krapi0314/tldraw';\r\n\r\nimport { Box, IconButton, Tooltip } from '@chakra-ui/react';\r\n\r\nimport { Bookmark as BookmarkIcon } from 'tabler-icons-react';\r\n\r\nimport { create, VideoBookmark, VideoBookmarkIcon } from './VideoBookmark';\r\nimport type { Video } from './Video';\r\nimport { createBookmark as createBookmarkAPI } from 'helpers';\r\n\r\ntype Props = {\r\n  app: TldrawApp;\r\n  disabled: boolean;\r\n  scale: number;\r\n  video: Video;\r\n  currentTime: number;\r\n  setVideo: React.Dispatch<React.SetStateAction<Video>>;\r\n  setEditingBookmark: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setActiveBookmark: React.Dispatch<React.SetStateAction<VideoBookmark | null>>;\r\n  pauseVideo: () => void;\r\n};\r\n\r\nexport default function VideoBookmarkAdd({\r\n  app,\r\n  disabled,\r\n  scale,\r\n  video,\r\n  currentTime,\r\n  setVideo,\r\n  setEditingBookmark,\r\n  setActiveBookmark,\r\n  pauseVideo,\r\n}: Props) {\r\n  function handleCreate() {\r\n    pauseVideo();\r\n    createVideoBookmark(video, setVideo, '🔖', '', currentTime, scale, app.document);\r\n    setEditingBookmark(true);\r\n  }\r\n\r\n  const createVideoBookmark = async (\r\n    video: Video,\r\n    setVideo: React.Dispatch<React.SetStateAction<Video>>,\r\n    icon: string,\r\n    content: string,\r\n    time: number,\r\n    scale: number,\r\n    drawing: object\r\n  ) => {\r\n    const bookmark = create(video, icon, content, time, scale, drawing);\r\n    const drawingString = JSON.stringify(drawing);\r\n    const id = video.id;\r\n    const position = bookmark.position ? bookmark.position : { x: 0, y: 0 };\r\n    let hex = '';\r\n    if (bookmark.icon.codePointAt(0) !== undefined) {\r\n      hex = bookmark.icon.codePointAt(0)!.toString(16);\r\n    }\r\n\r\n    const createBookmarkAPIResponse = await createBookmarkAPI({\r\n      recordId: id,\r\n      emoji: hex,\r\n      content,\r\n      time,\r\n      position,\r\n      drawing: drawingString,\r\n      scale,\r\n      author: bookmark.author,\r\n    });\r\n    bookmark.id = createBookmarkAPIResponse.data.id;\r\n    setVideo((prevState) => ({\r\n      ...prevState,\r\n      bookmarks: [...prevState.bookmarks, bookmark],\r\n    }));\r\n    setActiveBookmark(bookmark);\r\n  };\r\n\r\n  return (\r\n    <Tooltip label=\"Bookmark this moment (active when paused)\">\r\n      <Box>\r\n        <IconButton\r\n          onClick={() => handleCreate()}\r\n          icon={<BookmarkIcon />}\r\n          aria-label=\"Bookmark this moment\"\r\n          disabled={disabled}\r\n        />\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { useRef, useEffect, useState, useCallback } from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { Box, Flex, IconButton, Tooltip } from '@chakra-ui/react';\r\nimport { TldrawApp } from '@krapi0314/tldraw';\r\n\r\nimport getRatioDimensions from './layout';\r\nimport { readRecord as readRecordAPI } from 'helpers';\r\n\r\nimport Drawing from './Drawing';\r\nimport DrawingControls from './DrawingControls';\r\nimport VideoBookmarkShow from './VideoBookmarkShow';\r\nimport TimeDisplay from './TimeDisplay';\r\nimport TimeControl from './TimeControl';\r\nimport VideoVolume from './VideoVolume';\r\nimport VideoBookmarkAdd from './VideoBookmarkAdd';\r\n\r\nimport type { Video } from './Video';\r\nimport type { VideoBookmark } from './VideoBookmark';\r\n\r\nimport {\r\n  PlayerPlay as PlayerPlayIcon,\r\n  PlayerPause as PlayerPauseIcon,\r\n  Maximize as MaximizeIcon,\r\n} from 'tabler-icons-react';\r\n\r\nconst VIDEO_WIDTH = 1280;\r\nconst VIDEO_HEIGHT = 720;\r\nconst DISPLAY_ASPECT_RATIO = '16:9';\r\nconst FRAME_RATE = 30;\r\nconst DEFAULT_VOLUME = 0.8;\r\nconst LONG_TIME = 24 * 60 * 60;\r\n\r\nconst overlayStyle = css`\r\n  width: ${VIDEO_WIDTH}px;\r\n  height: ${VIDEO_HEIGHT}px;\r\n`;\r\n\r\nconst videoStyle = css`\r\n  video {\r\n    width: ${VIDEO_WIDTH}px;\r\n    height: ${VIDEO_HEIGHT}px;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  id: number;\r\n  cam: string;\r\n};\r\n\r\nconst VideoPlayer = ({ id, cam }: Props) => {\r\n  const [app, setApp] = useState<TldrawApp>();\r\n\r\n  const [videoElemLoading, setVideoElemLoading] = useState<boolean>(true);\r\n  const [videoPlayerLoading, setVideoPlayerLoading] = useState<boolean>(true);\r\n  const [video, setVideo] = useState<Video>({} as Video);\r\n  const [videoDimensions, setVideoDimensions] = useState<[number, number] | null>(null);\r\n  const [currentTime, setCurrentTime] = useState<number>(0);\r\n  const [fullDuration, setFullDuration] = useState<number>(0);\r\n  const [currentVolume, setCurrentVolume] = useState<number>(DEFAULT_VOLUME);\r\n  const [fullscreen, setFullscreen] = useState<boolean>(false);\r\n  const [playing, setPlaying] = useState<boolean>(false);\r\n\r\n  const [bookmarks, setBookmarks] = useState<VideoBookmark[]>(video.bookmarks);\r\n  const [editingBookmark, setEditingBookmark] = useState<boolean>(false);\r\n  const [activeBookmark, setActiveBookmark] = useState<VideoBookmark | null>(null);\r\n\r\n  const overlayRef = useRef<HTMLDivElement | null>(null);\r\n  const fullscreenTargetRef = useRef<HTMLDivElement | null>(null);\r\n  const fullscreenTriggerRef = useRef<HTMLButtonElement | null>(null);\r\n  const videoContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const camVideoRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  const setupVideoElement = useCallback(async () => {\r\n    const readRecordAPIResponse = await readRecordAPI(id);\r\n    const videoData = readRecordAPIResponse.data;\r\n\r\n    const el = document.createElement('video');\r\n    el.src = videoData.recordUrl;\r\n\r\n    setVideo({\r\n      bookmarks: videoData.bookmarks\r\n        ? videoData.bookmarks.map((b: any) => {\r\n            return {\r\n              ...b,\r\n              drawing: JSON.parse(b.drawing),\r\n              icon: b.emoji ? String.fromCodePoint(parseInt('0x' + b.emoji)) : '',\r\n            };\r\n          })\r\n        : [],\r\n      codedWidth: VIDEO_HEIGHT,\r\n      codedHeight: VIDEO_WIDTH,\r\n      displayAspectRatio: DISPLAY_ASPECT_RATIO,\r\n      el: el,\r\n      filePath: videoData.recordUrl,\r\n      frameRate: FRAME_RATE,\r\n      id: videoData.id,\r\n      name: videoData.title,\r\n      seeking: false,\r\n      volume: DEFAULT_VOLUME,\r\n    });\r\n    setBookmarks(videoData.bookmarks);\r\n    setVideoElemLoading(false);\r\n  }, [id]);\r\n\r\n  const getDuration = (url: string, setFullDuration: React.Dispatch<React.SetStateAction<number>>) => {\r\n    var _player = new Audio(url);\r\n    _player.addEventListener(\r\n      'durationchange',\r\n      function () {\r\n        if (this.duration != Infinity) {\r\n          var duration = this.duration;\r\n          _player.remove();\r\n          setFullDuration(duration);\r\n        }\r\n      },\r\n      false\r\n    );\r\n    _player.load();\r\n    _player.currentTime = LONG_TIME;\r\n    _player.volume = 0;\r\n    _player.play();\r\n  };\r\n\r\n  const setupVideoPlayer = useCallback(() => {\r\n    if (videoContainerRef.current === null || video.el === undefined) {\r\n      return;\r\n    }\r\n    videoContainerRef.current.innerHTML = '';\r\n    videoContainerRef.current.appendChild(video.el);\r\n\r\n    video.el.volume = video.volume;\r\n    setCurrentVolume(video.el.volume);\r\n    getDuration(video.el.src, setFullDuration);\r\n\r\n    video.el.ontimeupdate = () => {\r\n      setCurrentTime(video.el.currentTime);\r\n    };\r\n\r\n    setVideoPlayerLoading(false);\r\n  }, [video]);\r\n\r\n  useEffect(() => {\r\n    if (overlayRef.current && video.displayAspectRatio) {\r\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\r\n      setVideoDimensions(dimensions);\r\n    }\r\n  }, [video.displayAspectRatio]);\r\n\r\n  useEffect(() => {\r\n    if (videoElemLoading) {\r\n      setupVideoElement();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (videoPlayerLoading) {\r\n      setupVideoPlayer();\r\n    }\r\n  }, [videoElemLoading]);\r\n\r\n  useEffect(() => {\r\n    if (overlayRef.current) {\r\n      const dimensions = getRatioDimensions(video.displayAspectRatio, overlayRef.current);\r\n      setVideoDimensions(dimensions);\r\n    }\r\n  }, []);\r\n\r\n  const playVideo = () => {\r\n    if (videoContainerRef.current === null || camVideoRef.current === null) {\r\n      return;\r\n    }\r\n    video.el.play();\r\n    camVideoRef.current.play();\r\n    setPlaying(true);\r\n  };\r\n\r\n  const pauseVideo = () => {\r\n    if (videoContainerRef.current === null || camVideoRef.current === null) {\r\n      return;\r\n    }\r\n    video.el.pause();\r\n    camVideoRef.current.pause();\r\n    setPlaying(false);\r\n  };\r\n\r\n  const renderedContent = (() => {\r\n    const renderedDrawingControls = app !== undefined && (\r\n      <Flex\r\n        align=\"center\"\r\n        bottom={0}\r\n        justify=\"center\"\r\n        left={0}\r\n        pointerEvents=\"none\"\r\n        position=\"absolute\"\r\n        top={0}\r\n        zIndex={2}>\r\n        <Box\r\n          background=\"gray.900\"\r\n          borderColor=\"whiteAlpha.500\"\r\n          borderLeft=\"none\"\r\n          borderWidth=\"1px\"\r\n          boxSizing=\"border-box\"\r\n          padding={4}\r\n          pointerEvents=\"all\">\r\n          <DrawingControls app={app} />\r\n        </Box>\r\n      </Flex>\r\n    );\r\n\r\n    const renderedDrawing = (\r\n      <Drawing\r\n        onMount={(innerApp) => setApp(innerApp)}\r\n        scale={1}\r\n        playing={playing}\r\n        video={video}\r\n        setVideo={setVideo}\r\n        videoBookmark={activeBookmark ? activeBookmark : null}\r\n      />\r\n    );\r\n\r\n    const renderedActiveBookmark = activeBookmark !== undefined && (\r\n      <VideoBookmarkShow\r\n        video={video}\r\n        setVideo={setVideo}\r\n        bookmark={activeBookmark ? activeBookmark : null}\r\n        setActiveBookmark={setActiveBookmark}\r\n        scale={1}\r\n        playing={playing}\r\n        setCurrentTime={setCurrentTime}\r\n        editingBookmark={editingBookmark}\r\n        setEditingBookmark={setEditingBookmark}\r\n        comments={activeBookmark?.comments!}\r\n      />\r\n    );\r\n\r\n    const renderedNavigationControls = (\r\n      <Flex\r\n        align=\"center\"\r\n        bottom={0}\r\n        boxSizing=\"border-box\"\r\n        justify=\"center\"\r\n        left={0}\r\n        position=\"absolute\"\r\n        right={0}\r\n        zIndex={2}>\r\n        <Flex\r\n          align=\"center\"\r\n          background=\"gray.900\"\r\n          borderBottom=\"none\"\r\n          borderColor=\"whiteAlpha.500\"\r\n          borderWidth=\"1px\"\r\n          minWidth=\"50vw\"\r\n          p={4}\r\n          pointerEvents=\"all\">\r\n          <Tooltip label={playing ? 'Pause' : 'Play'}>\r\n            <Box mr=\"2\">\r\n              {!playing && (\r\n                <IconButton\r\n                  onClick={() => {\r\n                    playVideo();\r\n                    setEditingBookmark(false);\r\n                    setActiveBookmark(null);\r\n                  }}\r\n                  icon={<PlayerPlayIcon />}\r\n                  aria-label=\"Play\"\r\n                />\r\n              )}\r\n              {playing && <IconButton onClick={() => pauseVideo()} icon={<PlayerPauseIcon />} aria-label=\"Pause\" />}\r\n            </Box>\r\n          </Tooltip>\r\n\r\n          <Box mx=\"2\">\r\n            <TimeDisplay currentTime={currentTime} fullDuration={fullDuration} />\r\n          </Box>\r\n\r\n          <Box flexGrow={1} mx=\"2\" minW=\"25vw\">\r\n            <TimeControl\r\n              video={video}\r\n              fullDuration={fullDuration}\r\n              currentTime={currentTime}\r\n              setCurrentTime={setCurrentTime}\r\n              setActiveBookmark={setActiveBookmark}\r\n              pauseVideo={pauseVideo}\r\n              camVideoRef={camVideoRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box mx=\"2\">\r\n            <VideoVolume video={video} setCurrentVolume={setCurrentVolume} />\r\n          </Box>\r\n\r\n          {app && (\r\n            <Box mx=\"2\">\r\n              <VideoBookmarkAdd\r\n                key={video.id}\r\n                app={app}\r\n                disabled={!!activeBookmark || editingBookmark || playing}\r\n                scale={1}\r\n                video={video}\r\n                setVideo={setVideo}\r\n                currentTime={currentTime}\r\n                setEditingBookmark={setEditingBookmark}\r\n                setActiveBookmark={setActiveBookmark}\r\n                pauseVideo={pauseVideo}\r\n              />\r\n            </Box>\r\n          )}\r\n\r\n          <Tooltip label=\"Presentation mode\">\r\n            <Box ml=\"2\">\r\n              <IconButton\r\n                onClick={() => setFullscreen(!fullscreen)}\r\n                icon={<MaximizeIcon />}\r\n                aria-label=\"Fullscreen video\"\r\n                ref={fullscreenTriggerRef}\r\n              />\r\n            </Box>\r\n          </Tooltip>\r\n        </Flex>\r\n      </Flex>\r\n    );\r\n    return (\r\n      <Flex direction=\"column\" width=\"100%\" height=\"calc(100vh - 5rem)\" ref={fullscreenTargetRef}>\r\n        <Flex flexGrow={1} flexShrink={1} overflow=\"hidden\" position=\"relative\">\r\n          {renderedDrawingControls}\r\n          {renderedNavigationControls}\r\n          <Flex align=\"center\" flexGrow={1} flexShrink={1} justifyContent=\"center\" ref={overlayRef} overflow=\"hidden\">\r\n            <Box position=\"relative\" css={overlayStyle} id=\"overlay\" style={{ touchAction: 'none' }}>\r\n              {renderedDrawing}\r\n              {renderedActiveBookmark}\r\n              <Box css={videoStyle} ref={videoContainerRef} />\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    );\r\n  })();\r\n  return (\r\n    <>\r\n      {videoElemLoading ? (\r\n        <p>loading</p>\r\n      ) : (\r\n        <Flex>\r\n          <Box width=\"100vw\" bgColor=\"black\">\r\n            {renderedContent}\r\n          </Box>\r\n          <div id=\"cam-wrapper\">\r\n            <video id=\"cam\" width=\"320px\" height=\"240px\" src={cam} ref={camVideoRef} muted />\r\n          </div>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import { VideoPlayer } from 'components/VideoPlayer';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDailyStandup, useMoment } from './hooks';\r\nimport { DailyStandup } from './types';\r\nimport {\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from '@chakra-ui/react';\r\n\r\nconst DailyStandupCard = ({ dailyStandup }: { dailyStandup: DailyStandup }) => {\r\n  const { getTimeFromNow } = useMoment();\r\n  const { onViewDailyStandups } = useDailyStandup();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Card className=\"d-block me-3\">\r\n      <Card.Body\r\n        onClick={() => {\r\n          onOpen();\r\n          onViewDailyStandups(dailyStandup);\r\n        }}\r\n        style={{ cursor: 'pointer' }}>\r\n        <div className={(dailyStandup.seen ? 'opacity-25' : '') + ' text-center'}>\r\n          <img\r\n            src={dailyStandup.profileImageUrl}\r\n            className=\"rounded-circle avatar-lg\"\r\n            alt={dailyStandup.author}\r\n            referrerPolicy=\"no-referrer\"\r\n          />\r\n        </div>\r\n        <h4 className={(dailyStandup.seen ? 'text-light' : '') + ' text-center font-weight-bold mt-2'}>\r\n          {dailyStandup.author}\r\n        </h4>\r\n        <p className={(dailyStandup.seen ? 'text-light' : 'text-muted') + ' text-center font-12 mb-1'}>\r\n          {getTimeFromNow(dailyStandup.createdDate)}\r\n        </p>\r\n        <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <VideoPlayer id={dailyStandup.screenRecordId} cam={dailyStandup.camRecordFileUrl} />\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n        {/* <Modal\r\n          backdrop=\"static\"\r\n          show={isViewOpen}\r\n          onHide={toggleView}\r\n          dialogClassName={className}\r\n          size={size}\r\n          scrollable={scroll}>\r\n          <Modal.Header onHide={toggleView} closeButton>\r\n            <h4 className=\"modal-title\">{dailyStandup.author + ' - ' + getTimeFromNow(dailyStandup.createdDate)}</h4>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <video\r\n              src={dailyStandup.camRecordFileUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={cam_w}\r\n              height={cam_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n            <video\r\n              src={dailyStandup.screenRecordFileUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={screen_w}\r\n              height={screen_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </Modal.Body>\r\n        </Modal> */}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DailyStandupCard;\r\n","import { Button, Modal } from 'react-bootstrap';\nimport { useModal } from './hooks';\nimport { VideoRecorder } from 'components';\n\nconst CreateRecordButton = () => {\n  const { isOpen: isRecordOpen, size, className, scroll, toggleModal: toggleRecord, openModalWithClass } = useModal();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          openModalWithClass('modal-full-width');\n        }}\n      >\n        <i className=\"mdi mdi-plus\"></i> Record\n      </Button>\n      <Modal show={isRecordOpen} onHide={toggleRecord} dialogClassName={className} size={size} scrollable={scroll}>\n        <Modal.Body>\n          <Modal.Header onHide={toggleRecord} closeButton>\n            <h4 className=\"modal-title\">Record</h4>\n          </Modal.Header>\n          <VideoRecorder />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateRecordButton;\n","import { Row, Col } from 'react-bootstrap';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { useDailyStandup } from './hooks';\r\nimport { DailyStandup } from './types';\r\nimport DailyStandupCard from './DailyStandupCard';\r\nimport CreateRecordButton from './CreateRecordButton';\r\n\r\nconst DailyStandupContainer = () => {\r\n  const { carouselRef, dailyStandups, dailyStandupLoading } = useDailyStandup();\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"page-title-box\">\r\n            <h4 className=\"page-title\">Daily Standups</h4>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <CreateRecordButton />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {!dailyStandupLoading && (\r\n          <Carousel\r\n            ref={carouselRef}\r\n            additionalTransfrom={0}\r\n            arrows\r\n            centerMode={false}\r\n            className=\"\"\r\n            containerClass=\"container\"\r\n            dotListClass=\"\"\r\n            draggable\r\n            focusOnSelect={false}\r\n            infinite={false}\r\n            itemClass=\"\"\r\n            keyBoardControl\r\n            minimumTouchDrag={80}\r\n            pauseOnHover\r\n            renderArrowsWhenDisabled={false}\r\n            renderButtonGroupOutside={false}\r\n            renderDotsOutside={false}\r\n            responsive={{\r\n              desktop: {\r\n                breakpoint: {\r\n                  max: 3000,\r\n                  min: 1024,\r\n                },\r\n                items: 6,\r\n                partialVisibilityGutter: 40,\r\n              },\r\n              mobile: {\r\n                breakpoint: {\r\n                  max: 464,\r\n                  min: 0,\r\n                },\r\n                items: 1,\r\n                partialVisibilityGutter: 30,\r\n              },\r\n              tablet: {\r\n                breakpoint: {\r\n                  max: 1024,\r\n                  min: 464,\r\n                },\r\n                items: 2,\r\n                partialVisibilityGutter: 30,\r\n              },\r\n            }}\r\n            rewind={false}\r\n            rewindWithAnimation={false}\r\n            rtl={false}\r\n            shouldResetAutoplay\r\n            showDots={false}\r\n            sliderClass=\"\"\r\n            slidesToSlide={1}\r\n          >\r\n            {dailyStandups.map((dailyStandup: DailyStandup, i: number) => {\r\n              return (\r\n                <div key={i}>\r\n                  <DailyStandupCard dailyStandup={dailyStandup} />\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DailyStandupContainer;\r\n","import { Card, Dropdown, Modal, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { useMoment, useMeetingCard } from './hooks';\r\nimport { Meeting } from './types';\r\n\r\ntype Props = {\r\n  meeting: Meeting;\r\n  onDeleteMeeting: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\r\n  onEnterMeeting: (meetingId: number, meetingName: string) => void;\r\n  onEndMeeting: (meetingId: number) => void;\r\n};\r\n\r\nconst MeetingCard = ({ meeting, onDeleteMeeting, onEnterMeeting, onEndMeeting }: Props) => {\r\n  const { isDeleteOpen, toggleDelete, isViewOpen, toggleView, closeModalAfterFunction } = useMeetingCard();\r\n  const { getTimeFromNow } = useMoment();\r\n\r\n  return (\r\n    <Card className=\"d-block\">\r\n      <Card.Body>\r\n        <Dropdown className=\"card-widgets\" align=\"end\">\r\n          <Dropdown.Toggle variant=\"link\" as=\"a\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\r\n            <i className=\"dripicons-dots-3\"></i>\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item>Share</Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                onEndMeeting(meeting.id);\r\n              }}\r\n            >\r\n              End Meeting\r\n            </Dropdown.Item>\r\n            <Dropdown.Item className=\"text-danger\" onClick={toggleDelete}>\r\n              Delete\r\n            </Dropdown.Item>\r\n\r\n            <Modal show={isDeleteOpen} onHide={toggleDelete}>\r\n              <Modal.Body>\r\n                <Modal.Header onHide={toggleDelete} closeButton>\r\n                  <h4 className=\"modal-title\">Delete {meeting.meetingName}</h4>\r\n                </Modal.Header>\r\n                <p className=\"mt-4 mb-4 text-center font-weight-bolds\">\r\n                  Are you sure you want to delete this meeting permanently?\r\n                </p>\r\n                <form\r\n                  className=\"ps-3 pe-3\"\r\n                  onSubmit={(event) => closeModalAfterFunction(onDeleteMeeting, event, toggleDelete)}\r\n                >\r\n                  <input type=\"hidden\" id=\"id\" value={meeting.id} />\r\n                  <div className=\"mb-3 text-center\">\r\n                    <button className=\"btn btn-danger\" type=\"submit\">\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <h4\r\n          className=\"mt-0\"\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => {\r\n            if (meeting.status) {\r\n              onEnterMeeting(meeting.id, meeting.meetingName);\r\n            } else if (meeting.meetingFileUrl) {\r\n              toggleView();\r\n            }\r\n          }}\r\n        >\r\n          {meeting.meetingName}\r\n          {meeting.status ? (\r\n            <span className=\"badge bg-danger float-end me-1\">\r\n              <i className=\"mdi mdi-access-point\"></i> live\r\n            </span>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </h4>\r\n        <div className=\"mt-3\">\r\n          <span className=\"font-13\">Participants: </span>\r\n          {meeting &&\r\n            meeting.participants.map((participant) => {\r\n              return (\r\n                <OverlayTrigger key={participant[0]} placement={'bottom'} overlay={<Tooltip>{participant[0]}</Tooltip>}>\r\n                  <img src={participant[1]} className=\"rounded-circle avatar-xs\" alt={participant[0]} />\r\n                </OverlayTrigger>\r\n              );\r\n            })}\r\n        </div>\r\n        <p className=\"text-muted text-end font-12 mt-3 mb-1\">\r\n          Last modified: {getTimeFromNow(meeting.lastModifiedDate)}\r\n        </p>\r\n        <Modal show={isViewOpen} onHide={toggleView} size=\"xl\">\r\n          <Modal.Body>\r\n            <Modal.Header onHide={toggleView} closeButton>\r\n              <h4 className=\"modal-title\">{meeting.meetingName}</h4>\r\n            </Modal.Header>\r\n            <div>\r\n              <video className=\"d-block mx-auto\" src={meeting.meetingFileUrl} width=\"960\" height=\"540\" controls></video>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MeetingCard;\r\n","import { useState } from 'react';\r\nimport { useVideoRecorder } from './hooks';\r\nimport { useMeeting } from 'pages/docs/hooks';\r\n\r\ntype Props = {\r\n  meetingId: number;\r\n  meetingName: string;\r\n};\r\n\r\nconst ScreenRecorder = ({ meetingId, meetingName }: Props) => {\r\n  const [meetingInProgress, setMeetingInProgress] = useState<boolean>(false);\r\n  const screen_w = 960,\r\n    screen_h = 540;\r\n  const {\r\n    recordingState,\r\n    videoRef,\r\n    previewStream,\r\n    screenMediaBlobUrl,\r\n    setRecordingState,\r\n    screenStartRecording,\r\n    screenStopRecording,\r\n    uploadMeetingVideo,\r\n  } = useVideoRecorder();\r\n  const { onEndMeeting, onEnterMeeting } = useMeeting();\r\n\r\n  return (\r\n    <div className=\"video-recorder mt-4\">\r\n      <div>\r\n        {recordingState === 'recording' && previewStream && (\r\n          <div>\r\n            <video\r\n              ref={videoRef}\r\n              width={screen_w}\r\n              height={screen_h}\r\n              controls\r\n              playsInline\r\n              autoPlay\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState === 'recorded' && (\r\n          <div>\r\n            <video\r\n              src={screenMediaBlobUrl}\r\n              controls\r\n              autoPlay\r\n              playsInline\r\n              width={screen_w}\r\n              height={screen_h}\r\n              style={{ marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n            />\r\n          </div>\r\n        )}\r\n        {recordingState !== 'recording' ? (\r\n          recordingState === 'idle' ? (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              <div className=\"d-inline me-3\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setRecordingState('refused');\r\n                    onEnterMeeting(meetingId, meetingName);\r\n                  }}\r\n                >\r\n                  Start Meeting without Recording\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  screenStartRecording();\r\n                  setRecordingState('recording');\r\n                }}\r\n              >\r\n                Start Meeting with Recording\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4 mb-3 text-center\">\r\n              {meetingInProgress ? (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    uploadMeetingVideo(screenMediaBlobUrl!, meetingId);\r\n                    onEndMeeting(meetingId);\r\n                  }}\r\n                >\r\n                  Save Recording & End Meeting\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    onEndMeeting(meetingId);\r\n                  }}\r\n                >\r\n                  End Meeting\r\n                </button>\r\n              )}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"mt-4 mb-3 text-center\">\r\n            {meetingInProgress && <h4 className=\"mb-4\">Meeting in progress...</h4>}\r\n            <button\r\n              className=\"btn btn-primary me-3\"\r\n              onClick={() => {\r\n                setMeetingInProgress(true);\r\n                onEnterMeeting(meetingId, meetingName);\r\n              }}\r\n            >\r\n              Start Meeting\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                screenStopRecording();\r\n                setRecordingState('recorded');\r\n              }}\r\n            >\r\n              Stop Recording\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreenRecorder;\r\n","import ScreenRecorder from 'components/ScreenRecorder';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useMeeting } from './hooks';\r\n\r\nconst CreateMeetingButton = () => {\r\n  const {\r\n    isCreateMeetingOpen,\r\n    toggleCreateMeeting,\r\n    isRecordOpen,\r\n    toggleRecord,\r\n    currentMeetingId,\r\n    currentMeetingName,\r\n    onCreateMeeting,\r\n  } = useMeeting();\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleCreateMeeting}>\r\n        <i className=\"mdi mdi-plus\"></i> Start a new meeting\r\n      </Button>\r\n      <Modal show={isCreateMeetingOpen} onHide={toggleCreateMeeting}>\r\n        <Modal.Body>\r\n          <Modal.Header onHide={toggleCreateMeeting} closeButton>\r\n            <h4 className=\"modal-title\">Start a new meeting</h4>\r\n          </Modal.Header>\r\n          <form className=\"ps-3 pe-3\" onSubmit={onCreateMeeting}>\r\n            <div className=\"mt-3 mb-3\">\r\n              <label htmlFor=\"meetingName\" className=\"form-label\">\r\n                Meeting Name\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"meetingName\"\r\n                maxLength={255}\r\n                required\r\n                placeholder=\"Meeting Name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3 text-center\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal show={isRecordOpen} onHide={toggleRecord} size=\"xl\">\r\n        <Modal.Body>\r\n          <Modal.Header onHide={toggleRecord} closeButton>\r\n            <h4 className=\"modal-title\">Record a meeting video</h4>\r\n          </Modal.Header>\r\n          <ScreenRecorder meetingId={currentMeetingId!} meetingName={currentMeetingName} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateMeetingButton;\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport MeetingCard from './MeetingCard';\r\nimport CreateMeetingButton from './CreateMeetingButton';\r\nimport { useMeeting } from './hooks';\r\nimport { Meeting } from './types';\r\n\r\nconst MeetingContainer = () => {\r\n  const { meetings, meetingLoading, onDeleteMeeting, onEnterMeeting, onEndMeeting } = useMeeting();\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"page-title-box\">\r\n            <h4 className=\"page-title\">Meetings</h4>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col sm={4}>\r\n          <CreateMeetingButton />\r\n        </Col>\r\n      </Row>\r\n      {!meetingLoading && meetings.length > 0 && (\r\n        <Row>\r\n          {meetings.map((meeting: Meeting) => {\r\n            return (\r\n              <Col md={6} xxl={3} key={'mt-' + meeting.id}>\r\n                <MeetingCard\r\n                  meeting={meeting}\r\n                  onDeleteMeeting={onDeleteMeeting}\r\n                  onEnterMeeting={onEnterMeeting}\r\n                  onEndMeeting={onEndMeeting}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MeetingContainer;\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewTeamContainer = () => {\r\n  return (\r\n    <div className=\"containter pt-5\">\r\n      <Row className=\"pt-5\">\r\n        <Col>\r\n          <div className=\"text-center\">\r\n            <h3 className=\"\">Start by creating a team!</h3>\r\n            <p className=\"text-muted mt-3\">You can also join another team after receiving invitations.</p>\r\n\r\n            <Link to=\"/settings/create-team\">\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm mt-2\">\r\n                <i className=\"mdi mdi-plus font-18 align-middle me-2\"></i>Create Team\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTeamContainer;\r\n","import WhiteboardContainer from './WhiteboardContainer';\r\nimport DailyStandupContainer from './DailyStandupContainer';\r\nimport MeetingContainer from './MeetingContainer';\r\nimport NewTeamContainer from './NewTeamContainer';\r\nimport { useRedux } from 'hooks';\r\n\r\nconst Dashboard = () => {\r\n  const { appSelector } = useRedux();\r\n\r\n  const { loading, teamList } = appSelector((state) => ({\r\n    loading: state.Auth.loading,\r\n    teamList: state.Team.teamList,\r\n  }));\r\n\r\n  return loading ? (\r\n    <>\r\n      <p>Loading</p>\r\n    </>\r\n  ) : teamList.length > 0 ? (\r\n    <>\r\n      <DailyStandupContainer />\r\n      <hr />\r\n      <MeetingContainer />\r\n      <hr />\r\n      <WhiteboardContainer />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <NewTeamContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["whiteboard","onEditWhiteboard","onDeleteWhiteboard","getTimeFromNow","useMoment","useWhiteboardCard","isEditOpen","isDeleteOpen","isReadMore","toggleEdit","toggleDelete","toggleReadMore","closeModalAfterFunction","currentTeam","appSelector","useRedux","state","Team","Card","className","Dropdown","align","variant","as","onClick","Modal","show","onHide","closeButton","onSubmit","event","type","id","value","htmlFor","maxLength","required","placeholder","title","description","to","whiteboardFileUrl","code","length","slice","role","OverlayTrigger","placement","overlay","Tooltip","author","src","authorProfileImageUrl","alt","lastModifiedDate","useWhiteboard","isCreateWhiteboardOpen","toggleCreateWhiteboard","onCreateWhiteboard","Button","whiteboardPageNumber","numberOfWhiteboards","onPageNumberClick","items","number","Math","ceil","push","Pagination","active","toString","whiteboards","whiteboardLoading","Row","Col","sm","map","md","xxl","displayAspectRatio","element","split","widthSplit","heightSplit","width","parseInt","height","ratioWidthHeight","ratioHeightWidth","containerWidth","offsetWidth","containerHeight","offsetHeight","playing","onMount","scale","video","setVideo","videoBookmark","tlDrawRef","useRef","outerRef","handleMount","app","current","setCamera","style","color","ColorStyle","handlePersist","bookmark","drawing","bookmarkIndex","bookmarks","findIndex","innerBookmark","prevState","el","idx","setVideoBookmarkDrawing","document","clearDrawing","useCallback","tool","useStore","getState","appState","activeTool","deleteAll","selectTool","toggleToolLock","rescaleDrawing","useEffect","loadDocument","JSON","parse","stringify","selectNone","position","top","left","right","bottom","ref","onPersist","showUI","colors","useState","isOpen","setIsOpen","currentStyle","s","handleColourPick","swatchesData","Object","entries","renderedSwatches","key","mx","my","backgroundColor","cursor","onClose","bgColor","sizes","SizeStyle","handleSizePick","size","sizesData","justify","border","borderColor","background","padding","justifyContent","toUpperCase","dashes","DashStyle","DrawingControlsStyleSelector","React","dash","filter","icon","label","boxSizing","selectedStyle","css","unSelectedStyle","spacing","TDShapeType","mt","pt","borderTop","VideoBookmarkEditor","onChangeContent","onChangeIcon","currentEmoji","showEmojiPicker","setShowEmojiPicker","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","modifiers","name","options","offset","fallbackPlacements","styles","attributes","handleEmojiPicked","details","useHotkeys","mb","rounded","fontSize","zIndex","popper","data","onEmojiSelect","content","onChange","target","autoFocus","ChatItemAvatar","userAvatar","postedOn","ChatItemVideo","userName","videoUrl","index","playIndex","onEnded","autoPlay","controls","ChatItem","children","classNames","odd","ChatList","chatMessages","messages","setMessages","handleNewMessagePosted","comment","concat","useChatList","setPlayIndex","playNextVideo","containerClass","menuItems","maxHeight","message","profileImageUrl","createdDate","commentFileUrl","dragHandleStyles","VideoBookmarkShow","setActiveBookmark","editingBookmark","setEditingBookmark","comments","setCurrentEmoji","deleteVideoBookmark","deleteBookmarkAPI","x","y","undefined","renderedContent","setVideoBookmarkContent","hex","native","codePointAt","iconString","String","fromCodePoint","setVideoBookmarkIcon","whiteSpace","renderedPositiveAction","emoji","time","updateBookmarkAPI","pointerEvents","onStop","_event","coords","setVideoBookmarkCoords","bounds","handle","borderBottom","colorScheme","secondsToHms","input","floor","v","i","join","currentTime","fullDuration","round","VideoBookmarkTimeline","setCurrentTime","pauseVideo","str","n","renderedIcon","substring","sessionStorage","setItem","camVideoRef","trackRef","renderedCurrentBookmarks","setRenderedCurrentBookmarks","trackDimensions","setTrackDimensions","setBookmarkButtons","percentage","useLayoutEffect","handleResize","getBoundingClientRect","window","addEventListener","removeEventListener","focusThumbOnChange","max","min","step","frameRate","VideoVolume","setCurrentVolume","volume","handleSliderChange","ml","user","APICore","getLoggedInUser","create","video_id","fullname","VideoBookmarkAdd","disabled","createVideoBookmark","drawingString","createBookmarkAPI","recordId","createBookmarkAPIResponse","VIDEO_WIDTH","overlayStyle","videoStyle","cam","setApp","videoElemLoading","setVideoElemLoading","videoPlayerLoading","setVideoPlayerLoading","setVideoDimensions","setFullDuration","fullscreen","setFullscreen","setPlaying","setBookmarks","activeBookmark","overlayRef","fullscreenTargetRef","fullscreenTriggerRef","videoContainerRef","setupVideoElement","readRecordAPI","readRecordAPIResponse","videoData","createElement","recordUrl","b","codedWidth","codedHeight","filePath","seeking","setupVideoPlayer","innerHTML","appendChild","url","_player","Audio","this","duration","Infinity","remove","load","play","getDuration","ontimeupdate","dimensions","getRatioDimensions","pause","renderedDrawingControls","borderLeft","borderWidth","renderedDrawing","innerApp","renderedActiveBookmark","renderedNavigationControls","minWidth","p","mr","flexGrow","minW","direction","flexShrink","overflow","touchAction","muted","dailyStandup","onViewDailyStandups","useDailyStandup","useDisclosure","onOpen","seen","referrerPolicy","screenRecordId","camRecordFileUrl","useModal","isRecordOpen","scroll","toggleRecord","toggleModal","openModalWithClass","dialogClassName","scrollable","carouselRef","dailyStandups","dailyStandupLoading","additionalTransfrom","arrows","centerMode","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","pauseOnHover","renderArrowsWhenDisabled","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","partialVisibilityGutter","mobile","tablet","rewind","rewindWithAnimation","rtl","shouldResetAutoplay","showDots","sliderClass","slidesToSlide","meeting","onDeleteMeeting","onEnterMeeting","onEndMeeting","useMeetingCard","isViewOpen","toggleView","meetingName","status","meetingFileUrl","participants","participant","meetingId","meetingInProgress","setMeetingInProgress","useVideoRecorder","recordingState","videoRef","previewStream","screenMediaBlobUrl","setRecordingState","screenStartRecording","screenStopRecording","uploadMeetingVideo","useMeeting","playsInline","marginLeft","marginRight","display","isCreateMeetingOpen","toggleCreateMeeting","currentMeetingId","currentMeetingName","onCreateMeeting","meetings","meetingLoading","loading","Auth","teamList"],"sourceRoot":""}