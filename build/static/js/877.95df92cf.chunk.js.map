{"version":3,"file":"static/js/877.95df92cf.chunk.js","mappings":"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","sources":["pages/settings/LeftPanel.tsx","pages/settings/PersonalSettings.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Dropdown, ButtonGroup, ProgressBar, ListGroup } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport config from \"config\";\nimport axios from \"axios\";\n\ntype Team = {\n    id: number;\n    name: string;\n    pictureUrl: string;\n}\n\ntype LeftPanelProps = {\n    selected: string;\n}\n\nconst LeftPanel = ({selected}: LeftPanelProps) => {\n    // const [teamList, setTeamList] = useState<Team[]>([]);\n    // const user = JSON.parse(sessionStorage.getItem('asyncrum_user')!);\n\n    // useEffect(() => {\n    //     let currentList: Team[] = [];\n    //     axios.get(config.API_URL + \"/api/v1/teams?pageIndex=0&topId=0\", { headers: { Authorization: 'Bearer ' + user.token }})\n    //         .then(res => {\n    //             for (const team of res.data.teamList) {\n    //                 currentList.push({\n    //                     id: team.id,\n    //                     name: team.name,\n    //                     pictureUrl: team.pictureUrl,\n    //                 });\n    //             }\n    //             setTeamList(currentList);\n    //         });\n    // });\n\n    return (\n        <>\n            {/* <Dropdown className=\"mb-3\">\n                <Dropdown.Toggle className=\"w-100\">\n                    <i className=\"mdi me-1\"></i> Team 1\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"w-100\">\n                    <Dropdown.Item active>\n                        <i className=\"\"></i> Team 1\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                        <i className=\"\"></i> Team 2\n                    </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown> */}\n\n            <div className=\"email-menu-list\">\n                <Link to=\"/settings/user\" className={selected === \"personal\" ? \"active text-primary\" : \"\"}>\n                    <i className=\"mdi mdi-account-outline font-18 align-middle me-2\"></i>Personal Profile\n                </Link>\n                <Link to=\"/settings/team\" className={selected === \"team\" ? \"active text-primary\" : \"\"}>\n                    <i className=\"mdi mdi-account-group-outline font-18 align-middle me-2\"></i>Team Profile\n                </Link>\n            </div>\n\n            <div className=\"mt-4\">\n                <h4>\n                    <span className=\"badge rounded-pill p-1 px-2 badge-secondary-lighten\">FREE</span>\n                </h4>\n            </div>\n        </>\n    );\n};\n\nexport default LeftPanel;\n","import { Row, Col, Card, Button } from 'react-bootstrap';\nimport { FormInput } from 'components';\nimport LeftPanel from './LeftPanel';\nimport React, { useRef, useState } from 'react';\nimport config from 'config';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst user = JSON.parse(sessionStorage.getItem('asyncrum_user')!)\n\nconst PersonalSettings = () => {\n    const [previewImage, setPreviewImage] = useState<string>(user.profileImageUrl);\n    const [profileImageFile, setProfileImageFile] = useState<null | File>();\n    const fileInput = useRef<HTMLInputElement>(null);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        if (!e.target.files) {\n            setPreviewImage(user.profileImageUrl);\n            return;\n        } else {\n            setProfileImageFile(e.target.files[0]);\n        }\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setPreviewImage(reader.result as string);\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0]);\n    };\n\n    const onCancelProfileImageChange = () => {\n        setPreviewImage(user.profileImageUrl);\n        setProfileImageFile(null);\n    }\n\n    const onSaveProfileImage = (e: React.MouseEvent<HTMLElement>) => {\n        if (!profileImageFile) {\n            return;\n        }\n        else {\n            axios.post(config.API_URL+\"/api/v1/member/images/\"+user.id, null, { headers: { Authorization: 'Bearer ' + user.token }})\n                .then(res => {\n                    const preSignedURL = res.data.preSignedURL;\n                    const uploadAxios = axios.create({ transformRequest: [(data: any, headers: any) => {\n                        delete headers.common.Authorization;\n                        headers['Content-Type'] = 'image/png';\n                        return profileImageFile;\n                    }] });\n                    uploadAxios.put(preSignedURL, profileImageFile).then(() => {\n                        notify();\n                    });\n                })\n        }\n    }\n\n    const onSubmitProfileInfo = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const fullname = (((e.target as HTMLFormElement).elements as {[key: string]: any})['fullname'].value);\n        const nickname = \"\";\n        axios.patch(`${config.API_URL + \"/api/v1/members/\" + user.id}`, { fullname, nickname }, { headers: { Authorization: 'Bearer ' + user.token }})\n            .then(() => {\n                user.fullname = fullname;\n                sessionStorage.setItem('asyncrum_user', JSON.stringify(user));\n                window.location.reload();\n            });\n    }\n\n    const notify = () => toast(\n        <div>\n            Profile image saved successfully!\n            <br />\n            The change might take a few minutes to be applied.\n        </div>);\n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <div className=\"page-title-box\">\n                        <h4 className=\"page-title\">Settings</h4>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <div className=\"page-aside-left\">\n                                <LeftPanel selected=\"personal\" />\n                            </div>\n\n                            <div className=\"page-aside-right\">\n                                <h4 className=\"mb-3\">Change Personal Information</h4>\n                                <Row>\n                                    <Col md={7}>\n                                    <form onSubmit={onSubmitProfileInfo}>\n                                        <FormInput\n                                            label=\"Full Name\"\n                                            type=\"text\"\n                                            name=\"fullname\"\n                                            containerClass={'mb-3'}\n                                            key=\"fullname\"\n                                            placeholder={user.fullname}\n                                            required\n                                        />\n                                        <FormInput\n                                            label=\"Company Name\"\n                                            type=\"text\"\n                                            name=\"companyName\"\n                                            containerClass={'mb-3'}\n                                            key=\"companyName\"\n                                        />\n                                        <FormInput\n                                            label=\"Role\"\n                                            type=\"text\"\n                                            name=\"role\"\n                                            containerClass={'mb-3'}\n                                            key=\"role\"\n                                        />\n                                        <Button color=\"primary\" type=\"submit\">\n                                            Save Changes\n                                        </Button>\n                                    </form>\n                                    </Col>\n                                    <Col md={{ span: 3, offset: 2 }}>\n                                        <div style={{ height: 190, position: \"relative\" }}>\n                                            <p className='mb-1' style={{ fontWeight: '600' }}>Profile Image</p>\n                                            <div className='overlay-container'>\n                                                <img src={previewImage} alt=\"profile preview\" className=\"rounded ratio ratio-1x1\" style={{ position: \"absolute\", width: 150, height: 150, cursor: \"pointer\" }} referrerPolicy=\"no-referrer\" />\n                                                <input \n                                                    type='file' \n                                                    // accept='image/jpg, image/png, image/jpeg' \n                                                    accept='image/png'\n                                                    style={{display:'none'}}\n                                                    name='profileImage'\n                                                    onChange={onChange}\n                                                    ref={fileInput}\n                                                />\n                                                <div className='overlay rounded' onClick={()=>{fileInput.current!.click()}}>\n                                                    <div className='overlay-text'>click to upload</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <Button className=\"me-2\" onClick={onSaveProfileImage} >\n                                            Save\n                                        </Button>\n                                        <Button className=\"btn btn-secondary\" onClick={onCancelProfileImageChange} >\n                                            Cancel\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <ToastContainer\n                position=\"bottom-center\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n        </>\n    );\n};\n\nexport default PersonalSettings;\n"],"names":["selected","className","to","user","JSON","parse","sessionStorage","getItem","useState","profileImageUrl","previewImage","setPreviewImage","profileImageFile","setProfileImageFile","fileInput","useRef","notify","toast","md","onSubmit","e","preventDefault","fullname","target","elements","value","axios","config","id","nickname","headers","Authorization","token","then","setItem","stringify","window","location","reload","label","type","name","containerClass","placeholder","required","color","span","offset","style","height","position","fontWeight","src","alt","width","cursor","referrerPolicy","accept","display","onChange","files","reader","FileReader","onload","readyState","result","readAsDataURL","ref","onClick","current","click","res","preSignedURL","data","transformRequest","common","put","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}