{"version":3,"file":"static/js/932.1f08e51b.chunk.js","mappings":"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","sources":["../node_modules/@jitsi/react-sdk/lib/init.js","../node_modules/@jitsi/react-sdk/lib/constants/index.js","../node_modules/@jitsi/react-sdk/lib/utils/index.js","../node_modules/@jitsi/react-sdk/lib/components/JitsiMeeting.js","pages/apps/Meeting/Meeting.tsx"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_DOMAIN } from './constants';\nconst loadExternalApi = (domain, release) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (window.JitsiMeetExternalAPI) {\n            return resolve(window.JitsiMeetExternalAPI);\n        }\n        const script = document.createElement('script');\n        const releaseParam = release ? `?release=release-${release}` : '';\n        script.async = true;\n        script.src = `https://${domain}/external_api.js${releaseParam}`;\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\n        document.head.appendChild(script);\n    });\n});\nlet scriptPromise;\n/**\n * Injects the external_api.js script for the corresponding domain in DOM\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error.\n *\n * Only the first script will be injected, therefore avoid using multiple instances\n * with mixed domains and release version at the same time.\n *\n * @param {string} domain - The domain of the external API\n * @param {string} release - The Jitsi Meet release\n * @returns {Promise<JitsiMeetExternalApi>} - The JitsiMeetExternalAPI or an error\n */\nexport const fetchExternalApi = (domain = DEFAULT_DOMAIN, release) => {\n    if (scriptPromise) {\n        return scriptPromise;\n    }\n    scriptPromise = loadExternalApi(domain, release);\n    return scriptPromise;\n};\n","export const DEFAULT_DOMAIN = 'meet.jit.si';\nexport const JAAS_STAGING_DOMAIN = 'stage.8x8.vc';\nexport const JAAS_PROD_DOMAIN = '8x8.vc';\n","import { JAAS_PROD_DOMAIN, JAAS_STAGING_DOMAIN } from '../constants';\n/**\n * Returns the complete room name\n *\n * @param {string} roomName\n * @param {string} tenant\n * @returns {string} the complete room name\n */\nexport const getRoomName = (roomName, tenant) => {\n    if (tenant) {\n        return `${tenant}/${roomName}`;\n    }\n    return roomName;\n};\n/**\n * Returns the JaaS domain\n *\n * @param {boolean|undefined} useStaging\n * @returns {string} the JaaS domain\n */\nexport const getJaaSDomain = (useStaging) => {\n    if (useStaging) {\n        return JAAS_STAGING_DOMAIN;\n    }\n    return JAAS_PROD_DOMAIN;\n};\nlet instancesCounter = 0;\n/**\n * Generates an unique id\n * @param {string} prefix\n * @returns {string} the component id\n */\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { DEFAULT_DOMAIN } from '../constants';\nimport { fetchExternalApi } from '../init';\nimport { generateComponentId } from '../utils';\n/**\n * Returns the JitsiMeeting Component with access to a custom External API\n * to be used as-it-is in React projects\n *\n * @param {IJitsiMeetingProps} props the component's props\n * @returns {ReactElement} the `JitsiMeeting` Component\n * @example\n  ```js\n    <JitsiMeeting\n        domain='meet.jit.si'\n        roomName: 'TestingJitsiMeetingComponent'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n    />\n  ```\n */\nconst JitsiMeeting = ({ domain = DEFAULT_DOMAIN, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo, release, spinner: Spinner, onApiReady, onReadyToClose, getIFrameRef }) => {\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    const componentId = useMemo(() => generateComponentId('jitsiMeeting'), [generateComponentId]);\n    useEffect(() => {\n        fetchExternalApi(domain, release)\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        apiRef.current = new JitsiMeetExternalAPI(domain, Object.assign(Object.assign({ roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo }, release ? { release: `release-${release}` } : {}), { parentNode: meetingRef.current }));\n        setLoading(false);\n        if (apiRef.current) {\n            typeof onApiReady === 'function' && onApiReady(apiRef.current);\n            apiRef.current.on('readyToClose', () => {\n                typeof onReadyToClose === 'function' && onReadyToClose();\n            });\n            if (meetingRef.current && typeof getIFrameRef === 'function') {\n                getIFrameRef(meetingRef.current);\n            }\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        onReadyToClose,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default JitsiMeeting;\n","import { JitsiMeeting } from '@jitsi/react-sdk';\nimport { useRedux } from 'hooks';\n\nconst Meeting = () => {\n  const { appSelector } = useRedux();\n  const { user } = appSelector((state) => ({\n    user: state.Auth.user,\n  }));\n\n  const generateRoomName = () => `${user.currentTeam.id}${Math.random() * 100}-${Date.now()}`;\n\n  const handleReadyToClose = (): any => {\n    alert('sdf');\n    //window.location.href = `/dashboard`;\n  };\n\n  return (\n    <JitsiMeeting\n      domain={process.env.REACT_APP_JITSI_URL}\n      roomName=\"test\"\n      configOverwrite={{\n        startWithAudioMuted: true,\n        disableModeratorIndicator: true,\n        startScreenSharing: true,\n        enableEmailInStats: false,\n      }}\n      interfaceConfigOverwrite={{\n        DISABLE_JOIN_LEAVE_NOTIFICATIONS: true,\n      }}\n      userInfo={{\n        displayName: user.fullname,\n        email: user.email,\n      }}\n      onApiReady={(externalApi) => {\n        // here you can attach custom event listeners to the Jitsi Meet External API\n        // you can also store it locally to execute commands\n      }}\n      getIFrameRef={(iframeRef) => {\n        iframeRef.style.height = '800px';\n      }}\n      onReadyToClose={handleReadyToClose()}\n    />\n  );\n};\n\nexport { Meeting };\n"],"names":["scriptPromise","DEFAULT_DOMAIN","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","loadExternalApi","domain","release","window","JitsiMeetExternalAPI","script","document","createElement","releaseParam","async","src","onload","onerror","Error","head","appendChild","instancesCounter","generateComponentId","prefix","roomName","configOverwrite","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","Spinner","spinner","onApiReady","onReadyToClose","getIFrameRef","useState","loading","setLoading","apiLoaded","setApiLoaded","externalApi","useRef","apiRef","meetingRef","componentId","useMemo","useEffect","fetchExternalApi","api","current","catch","console","error","message","loadIFrame","useCallback","Object","assign","parentNode","on","renderLoadingSpinner","_jsx","_jsxs","_Fragment","children","id","ref","Meeting","user","appSelector","useRedux","state","Auth","process","startWithAudioMuted","disableModeratorIndicator","startScreenSharing","enableEmailInStats","DISABLE_JOIN_LEAVE_NOTIFICATIONS","displayName","fullname","email","iframeRef","style","height","alert"],"sourceRoot":""}